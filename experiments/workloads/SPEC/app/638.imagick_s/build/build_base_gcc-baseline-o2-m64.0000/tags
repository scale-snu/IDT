!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	magick/resample.c	/^    A, B, C,$/;"	m	struct:_ResampleFilter	file:
AESBlocksize	magick/cipher.c	66;"	d	file:
AESInfo	magick/cipher.c	/^} AESInfo;$/;"	t	typeref:struct:_AESInfo	file:
ALIGNED	magick/accelerate.c	89;"	d	file:
AbsEvaluateOperator	magick/statistic.h	/^  AbsEvaluateOperator,$/;"	e	enum:__anon89
AbsoluteErrorMetric	magick/compare.h	/^  AbsoluteErrorMetric,$/;"	e	enum:__anon92
AbsoluteIntent	magick/profile.h	/^  AbsoluteIntent,$/;"	e	enum:__anon1
AbsolutePathMode	wand/drawing-wand.c	/^  AbsolutePathMode,$/;"	e	enum:__anon95	file:
AbsolutePixelValue	magick/pixel-accessor.h	/^static inline MagickRealType AbsolutePixelValue(const MagickRealType x)$/;"	f
AccelerateAddNoiseImage	magick/accelerate.c	/^Image* AccelerateAddNoiseImage(const Image *image, const ChannelType channel,$/;"	f
AccelerateAddNoiseImage	magick/accelerate.c	/^MagickExport Image *AccelerateAddNoiseImage(const Image *image, $/;"	f
AccelerateBlurImage	magick/accelerate.c	/^Image* AccelerateBlurImage(const Image *image, const ChannelType channel, const double radius, const double sigma,ExceptionInfo *exception)$/;"	f
AccelerateCompositeImage	magick/accelerate.c	/^MagickBooleanType AccelerateCompositeImage(Image *image,$/;"	f
AccelerateContrastImage	magick/accelerate.c	/^MagickBooleanType AccelerateContrastImage(Image* image, const MagickBooleanType sharpen, ExceptionInfo* exception)$/;"	f
AccelerateContrastStretchImageChannel	magick/accelerate.c	/^MagickExport MagickBooleanType AccelerateContrastStretchImageChannel($/;"	f
AccelerateConvolveImageChannel	magick/accelerate.c	/^MagickExport Image* AccelerateConvolveImageChannel(const Image *image, const ChannelType channel, const KernelInfo *kernel, ExceptionInfo *exception)$/;"	f
AccelerateDespeckleImage	magick/accelerate.c	/^Image* AccelerateDespeckleImage(const Image* image, ExceptionInfo* exception)$/;"	f
AccelerateEqualizeImage	magick/accelerate.c	/^MagickBooleanType AccelerateEqualizeImage(Image* image, const ChannelType channel, ExceptionInfo* exception)$/;"	f
AccelerateEvent	magick/log.h	/^  AccelerateEvent = 0x40000,$/;"	e	enum:__anon93
AccelerateFunctionImage	magick/accelerate.c	/^  AccelerateFunctionImage(Image *image, const ChannelType channel,const MagickFunction function,$/;"	f
AccelerateGrayscaleImage	magick/accelerate.c	/^MagickBooleanType AccelerateGrayscaleImage($/;"	f
AccelerateGrayscaleImage	magick/accelerate.c	/^MagickBooleanType AccelerateGrayscaleImage(Image* image, const PixelIntensityMethod method, ExceptionInfo* exception)$/;"	f
AccelerateModulateImage	magick/accelerate.c	/^MagickBooleanType AccelerateModulateImage($/;"	f
AccelerateModulateImage	magick/accelerate.c	/^MagickBooleanType AccelerateModulateImage(Image* image, double percent_brightness, double percent_hue, double percent_saturation, ColorspaceType colorspace, ExceptionInfo* exception)$/;"	f
AccelerateMotionBlurImage	magick/accelerate.c	/^Image* AccelerateMotionBlurImage(const Image *image, const ChannelType channel,$/;"	f
AccelerateNegateImageChannel	magick/accelerate.c	/^MagickBooleanType AccelerateNegateImageChannel($/;"	f
AccelerateNegateImageChannel	magick/accelerate.c	/^MagickBooleanType AccelerateNegateImageChannel(Image* image, const ChannelType channel, const MagickBooleanType grayscale, ExceptionInfo* exception)$/;"	f
AccelerateRadialBlurImage	magick/accelerate.c	/^Image* AccelerateRadialBlurImage(const Image *image, const ChannelType channel, const double angle, ExceptionInfo *exception)$/;"	f
AccelerateRandomImage	magick/accelerate.c	/^MagickExport MagickBooleanType AccelerateRandomImage(Image* image, ExceptionInfo* exception)$/;"	f
AccelerateResizeImage	magick/accelerate.c	/^Image* AccelerateResizeImage(const Image* image, const size_t resizedColumns, const size_t resizedRows$/;"	f
AccelerateTimer	magick/opencl-private.h	/^} AccelerateTimer;$/;"	t	typeref:struct:_AccelerateTimer
AccelerateUnsharpMaskImage	magick/accelerate.c	/^Image* AccelerateUnsharpMaskImage(const Image *image, const ChannelType channel,const double radius,const double sigma, $/;"	f
AccentuateFactor	magick/decorate.c	689;"	d	file:
AccentuateModulate	magick/decorate.c	66;"	d	file:
AcquireAESInfo	magick/cipher.c	/^static AESInfo *AcquireAESInfo(void)$/;"	f	file:
AcquireAlignedMemory	magick/memory.c	/^MagickExport void *AcquireAlignedMemory(const size_t count,const size_t quantum)$/;"	f
AcquireAlignedMemory	magick/methods.h	40;"	d
AcquireAuthenticCacheView	magick/cache-view.c	/^MagickExport CacheView *AcquireAuthenticCacheView(const Image *image,$/;"	f
AcquireBlock	magick/memory.c	/^static void *AcquireBlock(size_t size)$/;"	f	file:
AcquireCLocale	magick/locale.c	/^static locale_t AcquireCLocale(void)$/;"	f	file:
AcquireCacheNexusPixels	magick/cache.c	/^static inline MagickBooleanType AcquireCacheNexusPixels($/;"	f	file:
AcquireCacheView	magick/cache-view.c	/^MagickExport CacheView *AcquireCacheView(const Image *image)$/;"	f
AcquireCacheView	magick/methods.h	43;"	d
AcquireCacheViewIndexes	magick/deprecate.c	/^MagickExport const IndexPacket *AcquireCacheViewIndexes($/;"	f
AcquireCacheViewIndexes	magick/methods.h	41;"	d
AcquireCacheViewPixels	magick/deprecate.c	/^MagickExport const PixelPacket *AcquireCacheViewPixels($/;"	f
AcquireCacheViewPixels	magick/methods.h	42;"	d
AcquireCoderCache	magick/coder.c	/^static SplayTreeInfo *AcquireCoderCache(const char *filename,$/;"	f	file:
AcquireColorCache	magick/color.c	/^static LinkedListInfo *AcquireColorCache(const char *filename,$/;"	f	file:
AcquireConfigureCache	magick/configure.c	/^static LinkedListInfo *AcquireConfigureCache(const char *filename,$/;"	f	file:
AcquireContributionThreadSet	magick/resize.c	/^static ContributionInfo **AcquireContributionThreadSet(const size_t count)$/;"	f	file:
AcquireDelegateCache	magick/delegate.c	/^static LinkedListInfo *AcquireDelegateCache(const char *filename,$/;"	f	file:
AcquireDistributeCacheInfo	magick/distribute-cache.c	/^MagickPrivate DistributeCacheInfo *AcquireDistributeCacheInfo($/;"	f
AcquireDrawInfo	magick/draw.c	/^MagickExport DrawInfo *AcquireDrawInfo(void)$/;"	f
AcquireDrawInfo	magick/methods.h	44;"	d
AcquireExceptionInfo	magick/exception.c	/^MagickExport ExceptionInfo *AcquireExceptionInfo(void)$/;"	f
AcquireExceptionInfo	magick/methods.h	45;"	d
AcquireFxInfo	magick/fx.c	/^MagickExport FxInfo *AcquireFxInfo(const Image *image,const char *expression)$/;"	f
AcquireFxInfo	magick/methods.h	46;"	d
AcquireFxThreadSet	magick/fx.c	/^static FxInfo **AcquireFxThreadSet(const Image *image,const char *expression,$/;"	f	file:
AcquireHistogramThreadSet	magick/paint.c	/^static size_t **AcquireHistogramThreadSet(const size_t count)$/;"	f	file:
AcquireImage	magick/image.c	/^MagickExport Image *AcquireImage(const ImageInfo *image_info)$/;"	f
AcquireImage	magick/methods.h	50;"	d
AcquireImageColormap	magick/colormap.c	/^MagickExport MagickBooleanType AcquireImageColormap(Image *image,$/;"	f
AcquireImageColormap	magick/methods.h	47;"	d
AcquireImageInfo	magick/image.c	/^MagickExport ImageInfo *AcquireImageInfo(void)$/;"	f
AcquireImageInfo	magick/methods.h	48;"	d
AcquireImagePixels	magick/deprecate.c	/^MagickExport const PixelPacket *AcquireImagePixels(const Image *image,$/;"	f
AcquireImagePixels	magick/methods.h	49;"	d
AcquireIndexes	magick/deprecate.c	/^MagickExport const IndexPacket *AcquireIndexes(const Image *image)$/;"	f
AcquireIndexes	magick/methods.h	51;"	d
AcquireKernelBuiltIn	magick/methods.h	52;"	d
AcquireKernelBuiltIn	magick/morphology.c	/^MagickExport KernelInfo *AcquireKernelBuiltIn(const KernelInfoType type,$/;"	f
AcquireKernelInfo	magick/methods.h	53;"	d
AcquireKernelInfo	magick/morphology.c	/^MagickExport KernelInfo *AcquireKernelInfo(const char *kernel_string)$/;"	f
AcquireLocaleSplayTree	magick/locale.c	/^static SplayTreeInfo *AcquireLocaleSplayTree(const char *filename,$/;"	f	file:
AcquireLogCache	magick/log.c	/^static LinkedListInfo *AcquireLogCache(const char *filename,$/;"	f	file:
AcquireMagicCache	magick/magic.c	/^static LinkedListInfo *AcquireMagicCache(const char *filename,$/;"	f	file:
AcquireMagickMatrix	magick/matrix.c	/^MagickExport double **AcquireMagickMatrix(const size_t number_rows,$/;"	f
AcquireMagickMatrix	magick/methods.h	54;"	d
AcquireMagickMemory	magick/memory.c	/^MagickExport void *AcquireMagickMemory(const size_t size)$/;"	f
AcquireMagickMemory	magick/methods.h	55;"	d
AcquireMagickResource	magick/methods.h	56;"	d
AcquireMagickResource	magick/resource.c	/^MagickExport MagickBooleanType AcquireMagickResource(const ResourceType type,$/;"	f
AcquireMatrixInfo	magick/matrix.c	/^MagickExport MatrixInfo *AcquireMatrixInfo(const size_t columns,$/;"	f
AcquireMemory	magick/deprecate.c	/^MagickExport void *AcquireMemory(const size_t size)$/;"	f
AcquireMemory	magick/methods.h	57;"	d
AcquireMimeCache	magick/mime.c	/^static LinkedListInfo *AcquireMimeCache(const char *filename,$/;"	f	file:
AcquireModuleInfo	magick/module.c	/^MagickExport ModuleInfo *AcquireModuleInfo(const char *path,const char *tag)$/;"	f
AcquireNextImage	magick/image.c	/^MagickExport void AcquireNextImage(const ImageInfo *image_info,Image *image)$/;"	f
AcquireNextImage	magick/methods.h	58;"	d
AcquireOneCacheViewPixel	magick/deprecate.c	/^MagickExport MagickBooleanType AcquireOneCacheViewPixel($/;"	f
AcquireOneCacheViewPixel	magick/methods.h	59;"	d
AcquireOneCacheViewVirtualPixel	magick/deprecate.c	/^MagickExport MagickBooleanType AcquireOneCacheViewVirtualPixel($/;"	f
AcquireOneCacheViewVirtualPixel	magick/methods.h	60;"	d
AcquireOneMagickPixel	magick/deprecate.c	/^MagickExport MagickPixelPacket AcquireOneMagickPixel(const Image *image,$/;"	f
AcquireOneMagickPixel	magick/methods.h	61;"	d
AcquireOnePixel	magick/deprecate.c	/^MagickExport PixelPacket AcquireOnePixel(const Image *image,const ssize_t x,$/;"	f
AcquireOnePixel	magick/methods.h	62;"	d
AcquireOneVirtualPixel	magick/deprecate.c	/^MagickExport PixelPacket AcquireOneVirtualPixel(const Image *image,$/;"	f
AcquireOneVirtualPixel	magick/methods.h	63;"	d
AcquirePixelCache	magick/cache.c	/^MagickExport Cache AcquirePixelCache(const size_t number_threads)$/;"	f
AcquirePixelCache	magick/methods.h	65;"	d
AcquirePixelCacheNexus	magick/cache.c	/^MagickExport NexusInfo **AcquirePixelCacheNexus(const size_t number_threads)$/;"	f
AcquirePixelCacheNexus	magick/methods.h	64;"	d
AcquirePixelCachePixels	magick/cache.c	/^MagickExport const void *AcquirePixelCachePixels(const Image *image,$/;"	f
AcquirePixelList	magick/statistic.c	/^static PixelList *AcquirePixelList(const size_t width,const size_t height)$/;"	f	file:
AcquirePixelListThreadSet	magick/statistic.c	/^static PixelList **AcquirePixelListThreadSet(const size_t width,$/;"	f	file:
AcquirePixelThreadSet	magick/profile.c	/^static unsigned short **AcquirePixelThreadSet(const size_t columns,$/;"	f	file:
AcquirePixelThreadSet	magick/quantize.c	/^static RealPixelPacket **AcquirePixelThreadSet(const size_t count)$/;"	f	file:
AcquirePixelThreadSet	magick/statistic.c	/^static MagickPixelPacket **AcquirePixelThreadSet(const Image *image,$/;"	f	file:
AcquirePixels	magick/deprecate.c	/^MagickExport const PixelPacket *AcquirePixels(const Image *image)$/;"	f
AcquirePixels	magick/methods.h	66;"	d
AcquirePolicyCache	magick/policy.c	/^static LinkedListInfo *AcquirePolicyCache(const char *filename,$/;"	f	file:
AcquirePolygonThreadSet	magick/draw.c	/^static PolygonInfo **AcquirePolygonThreadSet(const DrawInfo *draw_info,$/;"	f	file:
AcquireQuantizeInfo	magick/methods.h	67;"	d
AcquireQuantizeInfo	magick/quantize.c	/^MagickExport QuantizeInfo *AcquireQuantizeInfo(const ImageInfo *image_info)$/;"	f
AcquireQuantumInfo	magick/methods.h	68;"	d
AcquireQuantumInfo	magick/quantum.c	/^MagickExport QuantumInfo *AcquireQuantumInfo(const ImageInfo *image_info,$/;"	f
AcquireQuantumMemory	magick/memory.c	/^MagickExport void *AcquireQuantumMemory(const size_t count,const size_t quantum)$/;"	f
AcquireQuantumMemory	magick/methods.h	69;"	d
AcquireQuantumPixels	magick/quantum.c	/^static MagickBooleanType AcquireQuantumPixels(QuantumInfo *quantum_info,$/;"	f	file:
AcquireRandomInfo	magick/methods.h	70;"	d
AcquireRandomInfo	magick/random.c	/^MagickExport RandomInfo *AcquireRandomInfo(void)$/;"	f
AcquireRandomInfoThreadSet	magick/random-private.h	/^static inline RandomInfo **AcquireRandomInfoThreadSet(void)$/;"	f
AcquireResampleFilter	magick/methods.h	71;"	d
AcquireResampleFilter	magick/resample.c	/^MagickExport ResampleFilter *AcquireResampleFilter(const Image *image,$/;"	f
AcquireResampleFilterThreadSet	magick/resample-private.h	/^static inline ResampleFilter **AcquireResampleFilterThreadSet($/;"	f
AcquireResizeFilter	magick/methods.h	72;"	d
AcquireResizeFilter	magick/resize.c	/^MagickExport ResizeFilter *AcquireResizeFilter(const Image *image,$/;"	f
AcquireSemaphoreInfo	magick/deprecate.c	/^MagickExport void AcquireSemaphoreInfo(SemaphoreInfo **semaphore_info)$/;"	f
AcquireSemaphoreInfo	magick/methods.h	73;"	d
AcquireSemaphoreMemory	magick/semaphore.c	/^static void *AcquireSemaphoreMemory(const size_t count,const size_t quantum)$/;"	f	file:
AcquireSignatureInfo	magick/methods.h	74;"	d
AcquireSignatureInfo	magick/signature.c	/^MagickExport SignatureInfo *AcquireSignatureInfo(void)$/;"	f
AcquireStreamInfo	magick/methods.h	75;"	d
AcquireStreamInfo	magick/stream.c	/^MagickExport StreamInfo *AcquireStreamInfo(const ImageInfo *image_info)$/;"	f
AcquireStreamPixels	magick/stream.c	/^static inline MagickBooleanType AcquireStreamPixels(CacheInfo *cache_info,$/;"	f	file:
AcquireString	magick/methods.h	77;"	d
AcquireString	magick/string.c	/^MagickExport char *AcquireString(const char *source)$/;"	f
AcquireStringInfo	magick/methods.h	76;"	d
AcquireStringInfo	magick/string.c	/^MagickExport StringInfo *AcquireStringInfo(const size_t length)$/;"	f
AcquireTimerInfo	magick/methods.h	78;"	d
AcquireTimerInfo	magick/timer.c	/^MagickExport TimerInfo *AcquireTimerInfo(void)$/;"	f
AcquireTokenInfo	magick/methods.h	79;"	d
AcquireTokenInfo	magick/token.c	/^MagickExport TokenInfo *AcquireTokenInfo(void)$/;"	f
AcquireTransformThreadSet	magick/profile.c	/^static cmsHTRANSFORM *AcquireTransformThreadSet(Image *image,$/;"	f	file:
AcquireTypeCache	magick/type.c	/^static SplayTreeInfo *AcquireTypeCache(const char *filename,$/;"	f	file:
AcquireUniqueFileResource	magick/methods.h	81;"	d
AcquireUniqueFileResource	magick/resource.c	/^MagickExport int AcquireUniqueFileResource(char *path)$/;"	f
AcquireUniqueFilename	magick/methods.h	80;"	d
AcquireUniqueFilename	magick/utility.c	/^MagickExport MagickBooleanType AcquireUniqueFilename(char *path)$/;"	f
AcquireUniqueSymbolicLink	magick/methods.h	82;"	d
AcquireUniqueSymbolicLink	magick/utility.c	/^MagickExport MagickBooleanType AcquireUniqueSymbolicLink(const char *source,$/;"	f
AcquireVirtualCacheView	magick/cache-view.c	/^MagickExport CacheView *AcquireVirtualCacheView(const Image *image,$/;"	f
AcquireVirtualMemory	magick/memory.c	/^MagickExport MemoryInfo *AcquireVirtualMemory(const size_t count,$/;"	f
AcquireWandId	wand/wand.c	/^WandExport size_t AcquireWandId(void)$/;"	f
AcquireZIPMemory	magick/compress.c	/^static voidpf AcquireZIPMemory(voidpf context,unsigned int items,$/;"	f	file:
ActivateAlphaChannel	magick/image.h	/^  ActivateAlphaChannel,$/;"	e	enum:__anon77
ActivateSemaphoreInfo	magick/semaphore.c	/^MagickExport void ActivateSemaphoreInfo(SemaphoreInfo **semaphore_info)$/;"	f
ActiveNodes	magick/segment.c	/^static void ActiveNodes(IntervalTree **list,ssize_t *number_nodes,$/;"	f	file:
AdaptiveBlurImage	magick/effect.c	/^MagickExport Image *AdaptiveBlurImage(const Image *image,const double radius,$/;"	f
AdaptiveBlurImage	magick/methods.h	84;"	d
AdaptiveBlurImageChannel	magick/effect.c	/^MagickExport Image *AdaptiveBlurImageChannel(const Image *image,$/;"	f
AdaptiveBlurImageChannel	magick/methods.h	83;"	d
AdaptiveBlurImageTag	magick/effect.c	153;"	d	file:
AdaptiveResizeImage	magick/methods.h	85;"	d
AdaptiveResizeImage	magick/resize.c	/^MagickExport Image *AdaptiveResizeImage(const Image *image,$/;"	f
AdaptiveSharpenImage	magick/effect.c	/^MagickExport Image *AdaptiveSharpenImage(const Image *image,const double radius,$/;"	f
AdaptiveSharpenImage	magick/methods.h	87;"	d
AdaptiveSharpenImageChannel	magick/effect.c	/^MagickExport Image *AdaptiveSharpenImageChannel(const Image *image,$/;"	f
AdaptiveSharpenImageChannel	magick/methods.h	86;"	d
AdaptiveSharpenImageTag	magick/effect.c	478;"	d	file:
AdaptiveThresholdImage	magick/methods.h	88;"	d
AdaptiveThresholdImage	magick/threshold.c	/^MagickExport Image *AdaptiveThresholdImage(const Image *image,$/;"	f
AddBorderCommand	magick/display.c	/^  AddBorderCommand,$/;"	e	enum:__anon20	file:
AddChildToXMLTree	magick/methods.h	89;"	d
AddChildToXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *AddChildToXMLTree(XMLTreeInfo *xml_info,$/;"	f
AddComplexOperator	magick/fourier.h	/^  AddComplexOperator,$/;"	e	enum:__anon2
AddCompositeOp	magick/composite.h	104;"	d
AddEvaluateOperator	magick/statistic.h	/^  AddEvaluateOperator,$/;"	e	enum:__anon89
AddFrameCommand	magick/display.c	/^  AddFrameCommand,$/;"	e	enum:__anon20	file:
AddModulusEvaluateOperator	magick/statistic.h	/^  AddModulusEvaluateOperator,$/;"	e	enum:__anon89
AddNodePixelList	magick/statistic.c	/^static void AddNodePixelList(PixelList *pixel_list,const ssize_t channel,$/;"	f	file:
AddNoiseCommand	magick/display.c	/^  AddNoiseCommand,$/;"	e	enum:__anon20	file:
AddNoiseImage	magick/fx.c	/^MagickExport Image *AddNoiseImage(const Image *image,const NoiseType noise_type,$/;"	f
AddNoiseImage	magick/methods.h	91;"	d
AddNoiseImageChannel	magick/fx.c	/^MagickExport Image *AddNoiseImageChannel(const Image *image,$/;"	f
AddNoiseImageChannel	magick/methods.h	90;"	d
AddNoiseImageTag	magick/fx.c	275;"	d	file:
AddNoisePreview	magick/effect.h	/^  AddNoisePreview,$/;"	e	enum:__anon56
AddPathToXMLTree	magick/methods.h	92;"	d
AddPathToXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *AddPathToXMLTree(XMLTreeInfo *xml_info,$/;"	f
AddRoundKey	magick/cipher.c	/^static inline void AddRoundKey(const unsigned int *ciphertext,$/;"	f	file:
AddValueToSplayTree	magick/methods.h	93;"	d
AddValueToSplayTree	magick/splay-tree.c	/^MagickExport MagickBooleanType AddValueToSplayTree(SplayTreeInfo *splay_tree,$/;"	f
AdjustAffine	wand/drawing-wand.c	/^static void AdjustAffine(DrawingWand *wand,const AffineMatrix *affine)$/;"	f	file:
AffineArgsToCoefficients	magick/distort.c	/^static inline void AffineArgsToCoefficients(double *affine)$/;"	f	file:
AffineDistortion	magick/distort.h	/^  AffineDistortion,$/;"	e	enum:__anon50
AffineEdge	magick/draw.c	/^static SegmentInfo AffineEdge(const Image *image,const AffineMatrix *affine,$/;"	f	file:
AffineMatrix	magick/geometry.h	/^} AffineMatrix;$/;"	t	typeref:struct:_AffineMatrix
AffineProjectionDistortion	magick/distort.h	/^  AffineProjectionDistortion,$/;"	e	enum:__anon50
AffineTransformImage	magick/distort.c	/^MagickExport Image *AffineTransformImage(const Image *image,$/;"	f
AffineTransformImage	magick/methods.h	94;"	d
AffinityImage	magick/deprecate.c	/^MagickExport MagickBooleanType AffinityImage(const QuantizeInfo *quantize_info,$/;"	f
AffinityImage	magick/methods.h	95;"	d
AffinityImages	magick/deprecate.c	/^MagickExport MagickBooleanType AffinityImages(const QuantizeInfo *quantize_info,$/;"	f
AffinityImages	magick/methods.h	96;"	d
AlignOptions	magick/option.c	/^  AlignOptions[] =$/;"	v	file:
AlignType	magick/draw.h	/^} AlignType;$/;"	t	typeref:enum:__anon34
AlignedExtent	magick/memory.c	239;"	d	file:
AlignedExtent	magick/semaphore.c	130;"	d	file:
AlignedVirtualMemory	magick/memory.c	/^  AlignedVirtualMemory,$/;"	e	enum:__anon33	file:
AllChannels	magick/magick-type.h	/^  AllChannels = 0x7ffffff,$/;"	e	enum:__anon9
AllCompliance	magick/color.h	/^  AllCompliance = 0x7fffffff$/;"	e	enum:__anon83
AllEvents	magick/log.h	/^  AllEvents = 0x7fffffff$/;"	e	enum:__anon93
AllValidate	magick/option.h	/^  AllValidate = 0x7fffffff$/;"	e	enum:__anon87
AllValues	magick/geometry.h	/^  AllValues = 0x7fffffff$/;"	e	enum:__anon14
AllValues	magick/geometry.h	59;"	d
AllocateImage	magick/deprecate.c	/^MagickExport Image *AllocateImage(const ImageInfo *image_info)$/;"	f
AllocateImage	magick/methods.h	98;"	d
AllocateImageColormap	magick/deprecate.c	/^MagickExport MagickBooleanType AllocateImageColormap(Image *image,$/;"	f
AllocateImageColormap	magick/methods.h	97;"	d
AllocateNextImage	magick/deprecate.c	/^MagickExport void AllocateNextImage(const ImageInfo *image_info,Image *image)$/;"	f
AllocateNextImage	magick/methods.h	99;"	d
AllocatePixelCachePixels	magick/cache.c	/^static inline void AllocatePixelCachePixels(CacheInfo *cache_info)$/;"	f	file:
AllocateSemaphoreInfo	magick/methods.h	100;"	d
AllocateSemaphoreInfo	magick/semaphore.c	/^MagickExport SemaphoreInfo *AllocateSemaphoreInfo(void)$/;"	f
AllocateString	magick/deprecate.c	/^MagickExport char *AllocateString(const char *source)$/;"	f
AllocateString	magick/methods.h	101;"	d
AllocationPolicy	magick/memory.c	/^static inline size_t AllocationPolicy(size_t size)$/;"	f	file:
AlphaBlendMagickPixelPacket	magick/pixel.c	/^static inline void AlphaBlendMagickPixelPacket(const Image *image,$/;"	f	file:
AlphaChannel	magick/magick-type.h	/^  AlphaChannel = 0x0008,$/;"	e	enum:__anon9
AlphaChannelType	magick/image.h	/^} AlphaChannelType;$/;"	t	typeref:enum:__anon77
AlphaOptions	magick/option.c	/^  AlphaOptions[] =$/;"	v	file:
AlphaQuantum	magick/quantum.h	/^  AlphaQuantum,$/;"	e	enum:__anon7
AlphaShift	magick/quantize.c	1440;"	d	file:
AndEvaluateOperator	magick/statistic.h	/^  AndEvaluateOperator,$/;"	e	enum:__anon89
AnimateHelp	magick/animate.c	/^  *AnimateHelp[]=$/;"	v	file:
AnimateImages	magick/animate.c	/^MagickExport MagickBooleanType AnimateImages(const ImageInfo *image_info,$/;"	f
AnimateImages	magick/methods.h	103;"	d
AnnotateBackgroundColorCommand	magick/display.c	/^  AnnotateBackgroundColorCommand,$/;"	e	enum:__anon21	file:
AnnotateCommand	magick/display.c	/^  AnnotateCommand,$/;"	e	enum:__anon20	file:
AnnotateComponentGenesis	magick/annotate.c	/^MagickExport MagickBooleanType AnnotateComponentGenesis(void)$/;"	f
AnnotateComponentTerminus	magick/annotate.c	/^MagickExport void AnnotateComponentTerminus(void)$/;"	f
AnnotateDismissCommand	magick/display.c	/^  AnnotateDismissCommand,$/;"	e	enum:__anon21	file:
AnnotateEvent	magick/log.h	/^  AnnotateEvent = 0x00002,$/;"	e	enum:__anon93
AnnotateFontColorCommand	magick/display.c	/^  AnnotateFontColorCommand,$/;"	e	enum:__anon21	file:
AnnotateHelpCommand	magick/display.c	/^  AnnotateHelpCommand,$/;"	e	enum:__anon21	file:
AnnotateImage	magick/annotate.c	/^MagickExport MagickBooleanType AnnotateImage(Image *image,$/;"	f
AnnotateImage	magick/methods.h	104;"	d
AnnotateNameCommand	magick/display.c	/^  AnnotateNameCommand,$/;"	e	enum:__anon21	file:
AnnotateRotateCommand	magick/display.c	/^  AnnotateRotateCommand,$/;"	e	enum:__anon21	file:
AnnotationStencil	magick/xwindow-private.h	/^} AnnotationStencil;$/;"	t	typeref:enum:__anon26
AnyStretch	magick/type.h	/^  AnyStretch$/;"	e	enum:__anon24
AnyStyle	magick/type.h	/^  AnyStyle$/;"	e	enum:__anon25
AppendBinaryBlobMode	magick/blob-private.h	/^  AppendBinaryBlobMode$/;"	e	enum:__anon73
AppendBlobMode	magick/blob-private.h	/^  AppendBlobMode,$/;"	e	enum:__anon73
AppendImageFormat	magick/methods.h	105;"	d
AppendImageFormat	magick/utility.c	/^MagickExport void AppendImageFormat(const char *format,char *filename)$/;"	f
AppendImageStack	wand/mogrify-private.h	25;"	d
AppendImageTag	magick/image.c	428;"	d	file:
AppendImageToList	magick/list.c	/^MagickExport void AppendImageToList(Image **images,const Image *append)$/;"	f
AppendImageToList	magick/methods.h	107;"	d
AppendImages	magick/image.c	/^MagickExport Image *AppendImages(const Image *images,$/;"	f
AppendImages	magick/methods.h	106;"	d
AppendKeyValue2Text	magick/property.c	3248;"	d	file:
AppendString2Text	magick/property.c	3231;"	d	file:
AppendValueToLinkedList	magick/hashmap.c	/^MagickExport MagickBooleanType AppendValueToLinkedList($/;"	f
AppendValueToLinkedList	magick/methods.h	108;"	d
ApplyCommand	magick/display.c	/^  ApplyCommand,$/;"	e	enum:__anon20	file:
ApplyEvaluateOperator	magick/statistic.c	/^static MagickRealType ApplyEvaluateOperator(RandomInfo *random_info,$/;"	f	file:
ApplyFunction	magick/statistic.c	/^static Quantum ApplyFunction(Quantum pixel,const MagickFunction function,$/;"	f	file:
ApplyMenus	magick/display.c	10962;"	d	file:
ArcDistortion	magick/distort.h	/^  ArcDistortion,$/;"	e	enum:__anon50
ArcPrimitive	magick/draw.h	/^  ArcPrimitive,$/;"	e	enum:__anon43
ArcsinFunction	magick/statistic.h	/^  ArcsinFunction,$/;"	e	enum:__anon90
ArctanFunction	magick/statistic.h	/^  ArctanFunction$/;"	e	enum:__anon90
AreaResource	magick/resource_.h	/^  AreaResource,$/;"	e	enum:__anon65
AreaValue	magick/geometry.h	/^  AreaValue = 0x20000,     \/* '@'  resize to area - special use flag *\/$/;"	e	enum:__anon14
Ascii85Encode	magick/compress.c	/^MagickExport void Ascii85Encode(Image *image,const unsigned char code)$/;"	f
Ascii85Encode	magick/methods.h	109;"	d
Ascii85Flush	magick/compress.c	/^MagickExport void Ascii85Flush(Image *image)$/;"	f
Ascii85Flush	magick/methods.h	110;"	d
Ascii85Info	magick/compress.h	/^  Ascii85Info;$/;"	t	typeref:struct:_Ascii85Info
Ascii85Initialize	magick/compress.c	/^MagickExport void Ascii85Initialize(Image *image)$/;"	f
Ascii85Initialize	magick/methods.h	111;"	d
Ascii85Tuple	magick/compress.c	/^static char *Ascii85Tuple(unsigned char *data)$/;"	f	file:
AsciiMap	magick/string.c	/^  AsciiMap[] =$/;"	v	file:
AspectValue	magick/geometry.h	/^  AspectValue = 0x2000,    \/* '!'  resize no-aspect - special use flag *\/$/;"	e	enum:__anon14
AssignImageColors	magick/quantize.c	/^static MagickBooleanType AssignImageColors(Image *image,CubeInfo *cube_info)$/;"	f	file:
AssignImageTag	magick/quantize.c	500;"	d	file:
AssociateAlphaPixel	magick/quantize.c	/^static inline void AssociateAlphaPixel(const CubeInfo *cube_info,$/;"	f	file:
AssociatedQuantumAlpha	magick/quantum.h	/^  AssociatedQuantumAlpha,$/;"	e	enum:__anon5
AsynchronousResourceComponentTerminus	magick/methods.h	112;"	d
AsynchronousResourceComponentTerminus	magick/resource.c	/^MagickExport void AsynchronousResourceComponentTerminus(void)$/;"	f
Atop	magick/composite.c	/^static inline MagickRealType Atop(const MagickRealType p,$/;"	f	file:
AtopCompositeOp	magick/composite.h	/^  AtopCompositeOp,$/;"	e	enum:__anon68
AttachBlob	magick/blob.c	/^MagickExport void AttachBlob(BlobInfo *blob_info,const void *blob,$/;"	f
AttachBlob	magick/methods.h	113;"	d
AutoGammaImage	magick/enhance.c	/^MagickExport MagickBooleanType AutoGammaImage(Image *image)$/;"	f
AutoGammaImage	magick/methods.h	115;"	d
AutoGammaImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType AutoGammaImageChannel(Image *image,$/;"	f
AutoGammaImageChannel	magick/methods.h	114;"	d
AutoLevelImage	magick/enhance.c	/^MagickExport MagickBooleanType AutoLevelImage(Image *image)$/;"	f
AutoLevelImage	magick/methods.h	117;"	d
AutoLevelImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType AutoLevelImageChannel(Image *image,$/;"	f
AutoLevelImageChannel	magick/methods.h	116;"	d
AutoOrientImage	magick/transform.c	/^MagickExport Image *AutoOrientImage(const Image *image,$/;"	f
AutoReverseAnimationState	magick/animate.c	79;"	d	file:
AutoReverseCommand	magick/animate.c	/^  AutoReverseCommand,$/;"	e	enum:__anon85	file:
Average16InterpolatePixel	magick/pixel.h	/^  Average16InterpolatePixel,         \/* Average 16 nearest neighbours *\/$/;"	e	enum:__anon52
Average9InterpolatePixel	magick/pixel.h	/^  Average9InterpolatePixel,          \/* Average 9 nearest neighbours *\/$/;"	e	enum:__anon52
AverageImages	magick/deprecate.c	/^MagickExport Image *AverageImages(const Image *images,ExceptionInfo *exception)$/;"	f
AverageImages	magick/methods.h	118;"	d
AverageInterpolatePixel	magick/pixel.h	/^  AverageInterpolatePixel,           \/* Average 4 nearest neighbours *\/$/;"	e	enum:__anon52
AveragePixelIntensityMethod	magick/pixel.h	/^  AveragePixelIntensityMethod,$/;"	e	enum:__anon54
B	magick/resample.c	/^    A, B, C,$/;"	m	struct:_ResampleFilter	file:
B44ACompression	magick/compress.h	/^  B44ACompression,$/;"	e	enum:__anon13
B44Compression	magick/compress.h	/^  B44Compression,$/;"	e	enum:__anon13
BGRAQuantum	magick/quantum.h	/^  BGRAQuantum,$/;"	e	enum:__anon7
BGROQuantum	magick/quantum.h	/^  BGROQuantum$/;"	e	enum:__anon7
BGRQuantum	magick/quantum.h	/^  BGRQuantum,$/;"	e	enum:__anon7
BZ_IMPORT	magick/nt-base-private.h	92;"	d
BZipCompression	magick/compress.h	/^  BZipCompression,$/;"	e	enum:__anon13
BZipStream	magick/blob-private.h	/^  BZipStream,$/;"	e	enum:__anon74
BackgroundAlphaChannel	magick/image.h	/^  BackgroundAlphaChannel,$/;"	e	enum:__anon77
BackgroundColor	magick/image.c	/^  BackgroundColor[] = "#ffffff",  \/* white *\/$/;"	v
BackgroundCommand	magick/display.c	/^  BackgroundCommand,$/;"	e	enum:__anon20	file:
BackgroundDispose	magick/layer.h	/^  BackgroundDispose = 2,$/;"	e	enum:__anon71
BackgroundImageTag	magick/display.c	2778;"	d	file:
BackgroundInterpolatePixel	magick/pixel.h	/^  BackgroundInterpolatePixel,        \/* just return background color *\/$/;"	e	enum:__anon52
BackgroundStencil	magick/xwindow-private.h	/^  BackgroundStencil,$/;"	e	enum:__anon26
BackgroundVirtualPixelMethod	magick/cache-view.h	/^  BackgroundVirtualPixelMethod,$/;"	e	enum:__anon63
BalanceSplayTree	magick/splay-tree.c	/^static void BalanceSplayTree(SplayTreeInfo *splay_tree)$/;"	f	file:
BarrelDistortion	magick/distort.h	/^  BarrelDistortion,$/;"	e	enum:__anon50
BarrelInverseDistortion	magick/distort.h	/^  BarrelInverseDistortion,$/;"	e	enum:__anon50
BartlettFilter	magick/resample.h	/^  BartlettFilter,$/;"	e	enum:__anon76
BarycentricColorInterpolate	magick/distort.h	/^  BarycentricColorInterpolate = AffineDistortion,$/;"	e	enum:__anon51
Base64	magick/utility.c	/^  Base64[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v	file:
Base64Decode	magick/methods.h	119;"	d
Base64Decode	magick/utility.c	/^MagickExport unsigned char *Base64Decode(const char *source,size_t *length)$/;"	f
Base64Encode	magick/methods.h	120;"	d
Base64Encode	magick/utility.c	/^MagickExport char *Base64Encode(const unsigned char *blob,$/;"	f
BasePath	magick/utility.h	/^  BasePath,$/;"	e	enum:__anon31
BesselFilter	magick/resample.h	73;"	d
BesselOrderOne	magick/resize.c	/^static MagickRealType BesselOrderOne(MagickRealType x)$/;"	f	file:
BevelJoin	magick/draw.h	/^  BevelJoin$/;"	e	enum:__anon41
BezierPrimitive	magick/draw.h	/^  BezierPrimitive,$/;"	e	enum:__anon43
BezierQuantum	magick/draw.c	94;"	d	file:
BicubicInterpolate	magick/deprecate.c	/^static void BicubicInterpolate(const MagickPixelPacket *pixels,const double dx,$/;"	f	file:
BicubicInterpolatePixel	magick/pixel.h	/^  BicubicInterpolatePixel,           \/* Catmull-Rom interpolation *\/$/;"	e	enum:__anon52
BilevelImage	magick/methods.h	122;"	d
BilevelImage	magick/threshold.c	/^MagickExport MagickBooleanType BilevelImage(Image *image,const double threshold)$/;"	f
BilevelImageChannel	magick/methods.h	121;"	d
BilevelImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType BilevelImageChannel(Image *image,$/;"	f
BilevelType	magick/image.h	/^  BilevelType,$/;"	e	enum:__anon78
BilinearColorInterpolate	magick/distort.h	/^  BilinearColorInterpolate = BilinearReverseDistortion,$/;"	e	enum:__anon51
BilinearDistortion	magick/distort.h	/^  BilinearDistortion = BilinearForwardDistortion,$/;"	e	enum:__anon50
BilinearForwardDistortion	magick/distort.h	/^  BilinearForwardDistortion,$/;"	e	enum:__anon50
BilinearInterpolatePixel	magick/pixel.h	/^  BilinearInterpolatePixel,          \/* Triangular filter interpolation *\/$/;"	e	enum:__anon52
BilinearReverseDistortion	magick/distort.h	/^  BilinearReverseDistortion,$/;"	e	enum:__anon50
BinomialKernel	magick/morphology.h	/^  BinomialKernel$/;"	e	enum:__anon69
BlackChannel	magick/magick-type.h	/^  BlackChannel = 0x0020,$/;"	e	enum:__anon9
BlackQuantum	magick/quantum.h	/^  BlackQuantum,$/;"	e	enum:__anon7
BlackThresholdImage	magick/methods.h	124;"	d
BlackThresholdImage	magick/threshold.c	/^MagickExport MagickBooleanType BlackThresholdImage(Image *image,$/;"	f
BlackThresholdImageChannel	magick/methods.h	123;"	d
BlackThresholdImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType BlackThresholdImageChannel(Image *image,$/;"	f
BlackVirtualPixelMethod	magick/cache-view.h	/^  BlackVirtualPixelMethod,$/;"	e	enum:__anon63
Blackman	magick/resize.c	/^static MagickRealType Blackman(const MagickRealType x,$/;"	f	file:
BlackmanFilter	magick/resample.h	/^  BlackmanFilter,$/;"	e	enum:__anon76
BlackmanWeightingFunction	magick/resize-private.h	/^  BlackmanWeightingFunction,$/;"	e	enum:__anon30
BlendCompositeOp	magick/composite.h	/^  BlendCompositeOp,$/;"	e	enum:__anon68
BlendInterpolatePixel	magick/pixel.h	/^  BlendInterpolatePixel,             \/* blend of nearest 1, 2 or 4 pixels *\/$/;"	e	enum:__anon52
BlobError	magick/exception.h	/^  BlobError = 435,$/;"	e	enum:__anon84
BlobEvent	magick/log.h	/^  BlobEvent = 0x00004,$/;"	e	enum:__anon93
BlobFatalError	magick/exception.h	/^  BlobFatalError = 735,$/;"	e	enum:__anon84
BlobFifo	magick/blob-private.h	/^  *(*BlobFifo)(const Image *,const void *,const size_t);$/;"	t
BlobInfo	magick/magick-type.h	/^typedef struct _BlobInfo BlobInfo;$/;"	t	typeref:struct:_BlobInfo
BlobMode	magick/blob-private.h	/^} BlobMode;$/;"	t	typeref:enum:__anon73
BlobStream	magick/blob-private.h	/^  BlobStream$/;"	e	enum:__anon74
BlobToFile	magick/blob.c	/^MagickExport MagickBooleanType BlobToFile(char *filename,const void *blob,$/;"	f
BlobToFile	magick/methods.h	125;"	d
BlobToImage	magick/blob.c	/^MagickExport Image *BlobToImage(const ImageInfo *image_info,const void *blob,$/;"	f
BlobToImage	magick/methods.h	126;"	d
BlobToStringInfo	magick/string.c	/^MagickExport StringInfo *BlobToStringInfo(const void *blob,const size_t length)$/;"	f
BlobTransmitType	magick/image.h	/^  BlobTransmitType,$/;"	e	enum:__anon82
BlobWarning	magick/exception.h	/^  BlobWarning = 335,$/;"	e	enum:__anon84
BlockFooter	magick/memory.c	71;"	d	file:
BlockHeader	magick/memory.c	73;"	d	file:
BlockSize	magick/memory.c	74;"	d	file:
BlockThreshold	magick/memory.c	75;"	d	file:
Blue	magick/segment.c	/^  Blue = 2,$/;"	v	file:
BlueChannel	magick/magick-type.h	/^  BlueChannel = 0x0004,$/;"	e	enum:__anon9
BlueQuantum	magick/quantum.h	/^  BlueQuantum,$/;"	e	enum:__anon7
BlueShift	magick/quantize.c	1439;"	d	file:
BlueShiftImage	magick/fx.c	/^MagickExport Image *BlueShiftImage(const Image *image,const double factor,$/;"	f
BlueShiftImage	magick/methods.h	127;"	d
BlueShiftImageTag	magick/fx.c	470;"	d	file:
BlurCommand	magick/display.c	/^  BlurCommand,$/;"	e	enum:__anon20	file:
BlurCompositeOp	magick/composite.h	/^  BlurCompositeOp,$/;"	e	enum:__anon68
BlurImage	magick/effect.c	/^MagickExport Image *BlurImage(const Image *image,const double radius,$/;"	f
BlurImage	magick/methods.h	129;"	d
BlurImageChannel	magick/effect.c	/^MagickExport Image *BlurImageChannel(const Image *image,$/;"	f
BlurImageChannel	magick/methods.h	128;"	d
BlurImageTag	magick/effect.c	1983;"	d	file:
BlurKernel	magick/morphology.h	/^  BlurKernel,$/;"	e	enum:__anon69
BlurPreview	magick/effect.h	/^  BlurPreview,$/;"	e	enum:__anon56
Bohman	magick/resize.c	/^static MagickRealType Bohman(const MagickRealType x,$/;"	f	file:
BohmanFilter	magick/resample.h	/^  BohmanFilter,$/;"	e	enum:__anon76
BohmanWeightingFunction	magick/resize-private.h	/^  BohmanWeightingFunction,$/;"	e	enum:__anon30
BooleanOptions	magick/option.c	/^  BooleanOptions[] =$/;"	v	file:
BorderColor	magick/image.c	/^  BorderColor[] = "#dfdfdf",  \/* gray *\/$/;"	v
BorderImage	magick/decorate.c	/^MagickExport Image *BorderImage(const Image *image,$/;"	f
BorderImage	magick/methods.h	130;"	d
BottomHatMorphology	magick/morphology.h	/^  BottomHatMorphology,          \/* Open difference from Original *\/$/;"	e	enum:__anon70
BottomLeftOrientation	magick/image.h	/^  BottomLeftOrientation,$/;"	e	enum:__anon80
BottomRightOrientation	magick/image.h	/^  BottomRightOrientation,$/;"	e	enum:__anon80
BoxFilter	magick/resample.h	/^  BoxFilter,$/;"	e	enum:__anon76
BoxWeightingFunction	magick/resize-private.h	/^  BoxWeightingFunction = 0,$/;"	e	enum:__anon30
BricksBitmap	magick/display.c	/^  BricksBitmap[] =$/;"	v	file:
BricksHeight	magick/display.c	1508;"	d	file:
BricksWidth	magick/display.c	1507;"	d	file:
BrightnessCommand	magick/display.c	/^  BrightnessCommand,$/;"	e	enum:__anon20	file:
BrightnessContastImageTag	magick/enhance.c	284;"	d	file:
BrightnessContrastImage	magick/enhance.c	/^MagickExport MagickBooleanType BrightnessContrastImage(Image *image,$/;"	f
BrightnessContrastImage	magick/methods.h	132;"	d
BrightnessContrastImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType BrightnessContrastImageChannel(Image *image,$/;"	f
BrightnessContrastImageChannel	magick/methods.h	131;"	d
BrightnessPixelIntensityMethod	magick/pixel.h	/^  BrightnessPixelIntensityMethod,$/;"	e	enum:__anon54
BrightnessPreview	magick/effect.h	/^  BrightnessPreview,$/;"	e	enum:__anon56
BrowseDocumentationCommand	magick/animate.c	/^  BrowseDocumentationCommand,$/;"	e	enum:__anon85	file:
BrowseDocumentationCommand	magick/display.c	/^  BrowseDocumentationCommand,$/;"	e	enum:__anon20	file:
BumpmapCompositeOp	magick/composite.h	/^  BumpmapCompositeOp,$/;"	e	enum:__anon68
ButtCap	magick/draw.h	/^  ButtCap,$/;"	e	enum:__anon40
ByteData	magick/mime-private.h	/^  ByteData,$/;"	e	enum:__anon16
ByteMultiply	magick/cipher.c	/^static inline unsigned char ByteMultiply(const unsigned char alpha,$/;"	f	file:
ByteSubTransform	magick/cipher.c	/^static inline unsigned int ByteSubTransform(unsigned int x,$/;"	f	file:
C	magick/resample.c	/^    A, B, C,$/;"	m	struct:_ResampleFilter	file:
CACHE_LINE_SIZE	magick/memory-private.h	26;"	d
CACHE_LINE_SIZE	magick/memory-private.h	28;"	d
CIEEpsilon	magick/gem-private.h	30;"	d
CIEK	magick/gem-private.h	31;"	d
CLCharQuantumScale	magick/opencl-private.h	297;"	d
CLCharQuantumScale	magick/opencl-private.h	304;"	d
CLCharQuantumScale	magick/opencl-private.h	311;"	d
CLCharQuantumScale	magick/opencl-private.h	318;"	d
CLCharQuantumScale	magick/opencl-private.h	325;"	d
CLK_TCK	magick/timer.c	56;"	d	file:
CLK_TCK	magick/timer.c	59;"	d	file:
CLOptions	magick/opencl-private.h	292;"	d
CLOptions	magick/opencl-private.h	299;"	d
CLOptions	magick/opencl-private.h	306;"	d
CLOptions	magick/opencl-private.h	313;"	d
CLOptions	magick/opencl-private.h	320;"	d
CLPixelPacket	magick/opencl-private.h	296;"	d
CLPixelPacket	magick/opencl-private.h	303;"	d
CLPixelPacket	magick/opencl-private.h	310;"	d
CLPixelPacket	magick/opencl-private.h	317;"	d
CLPixelPacket	magick/opencl-private.h	324;"	d
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^                 cl_uint *        num_platforms) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_command_queue command_queue) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_context context) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_event *          event) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_event *         event) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_event *        event) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_event *       event) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *                       errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *                errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *          errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *         errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *        errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_int *     errcode_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    cl_uint *        num_devices) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    const void * arg_value) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    size_t *              param_value_size_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    size_t *           param_value_size_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    size_t *         param_value_size_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    size_t *        param_value_size_ret) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^    void *               user_data) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *MAGICKpfn_clFinish)(cl_command_queue command_queue) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *MAGICKpfn_clFlush)(cl_command_queue command_queue) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *MAGICKpfn_clReleaseKernel)(cl_kernel   kernel) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *MAGICKpfn_clReleaseMemObject)(cl_mem memobj) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CL_API_SUFFIX__VERSION_1_0	magick/opencl-private.h	/^typedef CL_API_ENTRY cl_int (CL_API_CALL *MAGICKpfn_clReleaseProgram)(cl_program program) CL_API_SUFFIX__VERSION_1_0;$/;"	t
CMYColorspace	magick/colorspace.h	/^  CMYColorspace,            \/* negated linear RGB colorspace *\/$/;"	e	enum:__anon55
CMYKAQuantum	magick/quantum.h	/^  CMYKAQuantum,$/;"	e	enum:__anon7
CMYKColorspace	magick/colorspace.h	/^  CMYKColorspace,           \/* negated linear RGB with black separated *\/$/;"	e	enum:__anon55
CMYKOQuantum	magick/quantum.h	/^  CMYKOQuantum,$/;"	e	enum:__anon7
CMYKQuantum	magick/quantum.h	/^  CMYKQuantum,$/;"	e	enum:__anon7
COLORMAP	image_validator/ImageValidator.c	/^    enum { NODATA = 0, COLORMAP, TRUECOLOR, GRAYSCALE } datatypecode;$/;"	e	enum:__anon98::__anon99	file:
CRC32	magick/version.c	/^static unsigned int CRC32(const unsigned char *message,const size_t length)$/;"	f	file:
Cache	magick/cache-private.h	/^  *Cache;$/;"	t
CacheAlign	magick/memory-private.h	31;"	d
CacheComponentGenesis	magick/cache.c	/^MagickExport MagickBooleanType CacheComponentGenesis(void)$/;"	f
CacheComponentGenesis	magick/methods.h	133;"	d
CacheComponentTerminus	magick/cache.c	/^MagickExport void CacheComponentTerminus(void)$/;"	f
CacheComponentTerminus	magick/methods.h	134;"	d
CacheError	magick/exception.h	/^  CacheError = 445,$/;"	e	enum:__anon84
CacheEvent	magick/log.h	/^  CacheEvent = 0x00008,$/;"	e	enum:__anon93
CacheFatalError	magick/exception.h	/^  CacheFatalError = 745,$/;"	e	enum:__anon84
CacheInfo	magick/cache-private.h	/^} CacheInfo;$/;"	t	typeref:struct:_CacheInfo
CacheMethods	magick/cache-private.h	/^} CacheMethods;$/;"	t	typeref:struct:_CacheMethods
CacheOffset	magick/quantize.c	/^static inline ssize_t CacheOffset(CubeInfo *cube_info,$/;"	f	file:
CacheOptions	magick/option.c	/^  CacheOptions[] =$/;"	v	file:
CacheShift	magick/quantize.c	206;"	d	file:
CacheShift	magick/quantize.c	208;"	d	file:
CacheSignalHandler	magick/cache.c	/^static void CacheSignalHandler(int status)$/;"	f	file:
CacheTick	magick/cache.c	85;"	d	file:
CacheType	magick/cache.h	/^} CacheType;$/;"	t	typeref:enum:__anon8
CacheView	magick/cache-view.h	/^  CacheView;$/;"	t	typeref:struct:_CacheView
CacheView_	magick/pixel.h	/^  CacheView_;$/;"	t	typeref:struct:_CacheView
CacheWarning	magick/exception.h	/^  CacheWarning = 345,$/;"	e	enum:__anon84
CalcKernelMetaData	magick/morphology.c	/^static void CalcKernelMetaData(KernelInfo *kernel)$/;"	f	file:
CannyEdgeImage	magick/feature.c	/^MagickExport Image *CannyEdgeImage(const Image *image,const double radius,$/;"	f
CannyEdgeImageTag	magick/feature.c	245;"	d	file:
CannyInfo	magick/feature.c	/^} CannyInfo;$/;"	t	typeref:struct:_CannyInfo	file:
CanonicalPath	magick/utility.h	/^  CanonicalPath$/;"	e	enum:__anon31
CanonicalXMLContent	magick/methods.h	135;"	d
CanonicalXMLContent	magick/xml-tree.c	/^MagickExport char *CanonicalXMLContent(const char *content,$/;"	f
CatchException	magick/exception.c	/^MagickExport void CatchException(ExceptionInfo *exception)$/;"	f
CatchException	magick/methods.h	136;"	d
CatchImageException	magick/image.c	/^MagickExport ExceptionType CatchImageException(Image *image)$/;"	f
CatchImageException	magick/methods.h	137;"	d
CatromFilter	magick/resample.h	/^  CatromFilter,$/;"	e	enum:__anon76
CatromInterpolatePixel	magick/pixel.h	/^  CatromInterpolatePixel             \/* Catmull-Rom interpolation *\/$/;"	e	enum:__anon52
CatromWeights	magick/pixel.c	/^static inline void CatromWeights(const MagickRealType x,$/;"	f	file:
CbYCrAQuantum	magick/quantum.h	/^  CbYCrAQuantum,$/;"	e	enum:__anon7
CbYCrQuantum	magick/quantum.h	/^  CbYCrQuantum,$/;"	e	enum:__anon7
CbYCrYQuantum	magick/quantum.h	/^  CbYCrYQuantum,$/;"	e	enum:__anon7
CenterAlign	magick/draw.h	/^  CenterAlign,$/;"	e	enum:__anon34
CenterGravity	magick/geometry.h	/^  CenterGravity = 5,$/;"	e	enum:__anon15
CenterGravity	magick/geometry.h	69;"	d
Ch	magick/signature.c	/^static inline unsigned int Ch(unsigned int x,unsigned int y,unsigned int z)$/;"	f	file:
ChangeErrorMode	magick/nt-base.c	/^static UINT ChangeErrorMode(void)$/;"	f	file:
ChangeMaskCompositeOp	magick/composite.h	/^  ChangeMaskCompositeOp,$/;"	e	enum:__anon68
ChannelFeatures	magick/feature.h	/^} ChannelFeatures;$/;"	t	typeref:struct:_ChannelFeatures
ChannelImage	magick/deprecate.c	/^MagickExport unsigned int ChannelImage(Image *image,const ChannelType channel)$/;"	f
ChannelImage	magick/methods.h	138;"	d
ChannelMoments	magick/statistic.h	/^} ChannelMoments;$/;"	t	typeref:struct:_ChannelMoments
ChannelOptions	magick/option.c	/^  ChannelOptions[] =$/;"	v	file:
ChannelPerceptualHash	magick/statistic.h	/^} ChannelPerceptualHash;$/;"	t	typeref:struct:_ChannelPerceptualHash
ChannelStatistics	magick/statistic.h	/^} ChannelStatistics;$/;"	t	typeref:struct:_ChannelStatistics
ChannelThresholdImage	magick/deprecate.c	/^MagickExport unsigned int ChannelThresholdImage(Image *image,const char *level)$/;"	f
ChannelThresholdImage	magick/methods.h	139;"	d
ChannelType	magick/magick-type.h	/^} ChannelType;$/;"	t	typeref:enum:__anon9
CharPixel	magick/constitute.h	/^  CharPixel,$/;"	e	enum:__anon64
CharcoalDrawCommand	magick/display.c	/^  CharcoalDrawCommand,$/;"	e	enum:__anon20	file:
CharcoalDrawingPreview	magick/effect.h	/^  CharcoalDrawingPreview,$/;"	e	enum:__anon56
CharcoalImage	magick/fx.c	/^MagickExport Image *CharcoalImage(const Image *image,const double radius,$/;"	f
CharcoalImage	magick/methods.h	140;"	d
ChebyshevKernel	magick/morphology.h	/^  ChebyshevKernel,    \/* Distance Measuring Kernels *\/$/;"	e	enum:__anon69
CheckerTileVirtualPixelMethod	magick/cache-view.h	/^  CheckerTileVirtualPixelMethod$/;"	e	enum:__anon63
ChiNegative	magick/geometry.h	/^  ChiNegative = 0x0080,$/;"	e	enum:__anon14
ChiValue	magick/geometry.h	/^  ChiValue = 0x0010,$/;"	e	enum:__anon14
ChopCommand	magick/display.c	/^  ChopCommand,$/;"	e	enum:__anon20	file:
ChopDirectionCommand	magick/display.c	/^  ChopDirectionCommand,$/;"	e	enum:__anon21	file:
ChopDismissCommand	magick/display.c	/^  ChopDismissCommand,$/;"	e	enum:__anon21	file:
ChopHelpCommand	magick/display.c	/^  ChopHelpCommand,$/;"	e	enum:__anon21	file:
ChopImage	magick/methods.h	141;"	d
ChopImage	magick/transform.c	/^MagickExport Image *ChopImage(const Image *image,const RectangleInfo *chop_info,$/;"	f
ChopImageTag	magick/transform.c	190;"	d	file:
ChopLocaleComponents	magick/locale.c	/^static void ChopLocaleComponents(char *path,const size_t components)$/;"	f	file:
ChopPathComponents	magick/methods.h	142;"	d
ChopPathComponents	magick/utility.c	/^MagickExport void ChopPathComponents(char *path,const size_t components)$/;"	f
ChromaticityInfo	magick/image.h	/^} ChromaticityInfo;$/;"	t	typeref:struct:_ChromaticityInfo
CircleElement	magick/xwindow-private.h	/^  CircleElement,$/;"	e	enum:__anon27
CirclePrimitive	magick/draw.h	/^  CirclePrimitive,$/;"	e	enum:__anon43
ClampImage	magick/methods.h	144;"	d
ClampImage	magick/threshold.c	/^MagickExport MagickBooleanType ClampImage(Image *image)$/;"	f
ClampImageChannel	magick/methods.h	143;"	d
ClampImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType ClampImageChannel(Image *image,$/;"	f
ClampImageTag	magick/threshold.c	763;"	d	file:
ClampPixel	magick/attribute.c	/^static inline Quantum ClampPixel(const MagickRealType value)$/;"	f	file:
ClampPixel	magick/quantize.c	/^static inline Quantum ClampPixel(const MagickRealType value)$/;"	f	file:
ClampPixel	magick/threshold.c	/^static inline Quantum ClampPixel(const MagickRealType value)$/;"	f	file:
ClampPixelBlue	magick/pixel-accessor.h	31;"	d
ClampPixelGreen	magick/pixel-accessor.h	30;"	d
ClampPixelIndex	magick/pixel-accessor.h	32;"	d
ClampPixelOpacity	magick/pixel-accessor.h	33;"	d
ClampPixelRed	magick/pixel-accessor.h	29;"	d
ClampToQuantum	magick/quantum.h	/^static inline Quantum ClampToQuantum(const MagickRealType value)$/;"	f
ClampUpAxes	magick/resample.c	/^static inline void ClampUpAxes(const double dux,$/;"	f	file:
ClassOptions	magick/option.c	/^  ClassOptions[] =$/;"	v	file:
ClassType	magick/magick-type.h	/^} ClassType;$/;"	t	typeref:enum:__anon10
Classify	magick/segment.c	/^static MagickBooleanType Classify(Image *image,short **extrema,$/;"	f	file:
ClassifyImageColors	magick/histogram.c	/^static CubeInfo *ClassifyImageColors(const Image *image,$/;"	f	file:
ClassifyImageColors	magick/quantize.c	/^static MagickBooleanType ClassifyImageColors(CubeInfo *cube_info,$/;"	f	file:
ClassifyImageTag	magick/quantize.c	754;"	d	file:
ClearBounds	magick/layer.c	/^static void ClearBounds(Image *image,RectangleInfo *bounds)$/;"	f	file:
ClearCompositeOp	magick/composite.h	/^  ClearCompositeOp,$/;"	e	enum:__anon68
ClearDrawingWand	wand/drawing-wand.c	/^WandExport void ClearDrawingWand(DrawingWand *wand)$/;"	f
ClearLinkedList	magick/hashmap.c	/^MagickExport void ClearLinkedList(LinkedListInfo *list_info,$/;"	f
ClearLinkedList	magick/methods.h	145;"	d
ClearMagickException	magick/exception.c	/^MagickExport void ClearMagickException(ExceptionInfo *exception)$/;"	f
ClearMagickException	magick/methods.h	146;"	d
ClearMagickWand	wand/magick-wand.c	/^WandExport void ClearMagickWand(MagickWand *wand)$/;"	f
ClearPixelIterator	wand/pixel-iterator.c	/^WandExport void ClearPixelIterator(PixelIterator *iterator)$/;"	f
ClearPixelWand	wand/pixel-wand.c	/^WandExport void ClearPixelWand(PixelWand *wand)$/;"	f
ClipImage	magick/image.c	/^MagickExport MagickBooleanType ClipImage(Image *image)$/;"	f
ClipImage	magick/methods.h	148;"	d
ClipImagePath	magick/image.c	/^MagickExport MagickBooleanType ClipImagePath(Image *image,const char *pathname,$/;"	f
ClipImagePath	magick/methods.h	147;"	d
ClipImagePathTag	magick/image.c	692;"	d	file:
ClipPathImage	magick/deprecate.c	/^MagickExport MagickBooleanType ClipPathImage(Image *image,const char *pathname,$/;"	f
ClipPathImage	magick/methods.h	149;"	d
ClipPathOptions	magick/option.c	/^  ClipPathOptions[] =$/;"	v	file:
ClipPathUnits	magick/draw.h	/^} ClipPathUnits;$/;"	t	typeref:enum:__anon35
ClipPixelCacheNexus	magick/cache.c	/^static MagickBooleanType ClipPixelCacheNexus(Image *image,$/;"	f	file:
ClipboardMode	magick/display.c	/^} ClipboardMode;$/;"	t	typeref:enum:__anon19	file:
CloneBlobInfo	magick/blob.c	/^MagickExport BlobInfo *CloneBlobInfo(const BlobInfo *blob_info)$/;"	f
CloneBlobInfo	magick/methods.h	150;"	d
CloneCacheView	magick/cache-view.c	/^MagickExport CacheView *CloneCacheView(const CacheView *cache_view)$/;"	f
CloneCacheView	magick/methods.h	151;"	d
CloneDrawInfo	magick/draw.c	/^MagickExport DrawInfo *CloneDrawInfo(const ImageInfo *image_info,$/;"	f
CloneDrawInfo	magick/methods.h	152;"	d
CloneDrawingWand	wand/drawing-wand.c	/^WandExport DrawingWand *CloneDrawingWand(const DrawingWand *wand)$/;"	f
CloneExceptionInfo	magick/exception.c	/^MagickExport ExceptionInfo *CloneExceptionInfo(ExceptionInfo *exception)$/;"	f
CloneImage	magick/image.c	/^MagickExport Image *CloneImage(const Image *image,const size_t columns,$/;"	f
CloneImage	magick/methods.h	158;"	d
CloneImageArtifacts	magick/artifact.c	/^MagickExport MagickBooleanType CloneImageArtifacts(Image *image,$/;"	f
CloneImageArtifacts	magick/methods.h	153;"	d
CloneImageAttributes	magick/deprecate.c	/^MagickExport MagickBooleanType CloneImageAttributes(Image *image,$/;"	f
CloneImageAttributes	magick/methods.h	154;"	d
CloneImageInfo	magick/image.c	/^MagickExport ImageInfo *CloneImageInfo(const ImageInfo *image_info)$/;"	f
CloneImageInfo	magick/methods.h	155;"	d
CloneImageList	magick/list.c	/^MagickExport Image *CloneImageList(const Image *images,ExceptionInfo *exception)$/;"	f
CloneImageList	magick/methods.h	156;"	d
CloneImageOptions	magick/methods.h	157;"	d
CloneImageOptions	magick/option.c	/^MagickExport MagickBooleanType CloneImageOptions(ImageInfo *image_info,$/;"	f
CloneImageProfiles	magick/methods.h	159;"	d
CloneImageProfiles	magick/profile.c	/^MagickExport MagickBooleanType CloneImageProfiles(Image *image,$/;"	f
CloneImageProperties	magick/methods.h	160;"	d
CloneImageProperties	magick/property.c	/^MagickExport MagickBooleanType CloneImageProperties(Image *image,$/;"	f
CloneImages	magick/list.c	/^MagickExport Image *CloneImages(const Image *images,const char *scenes,$/;"	f
CloneImages	magick/methods.h	161;"	d
CloneKernelInfo	magick/morphology.c	/^MagickExport KernelInfo *CloneKernelInfo(const KernelInfo *kernel)$/;"	f
CloneMagickPixelPacket	magick/pixel.c	/^MagickExport MagickPixelPacket *CloneMagickPixelPacket($/;"	f
CloneMagickWand	wand/magick-wand.c	/^WandExport MagickWand *CloneMagickWand(const MagickWand *wand)$/;"	f
CloneMagickWandFromImages	wand/magick-image.c	/^static MagickWand *CloneMagickWandFromImages(const MagickWand *wand,$/;"	f	file:
CloneMemory	magick/deprecate.c	/^MagickExport void *CloneMemory(void *destination,const void *source,$/;"	f
CloneMemory	magick/methods.h	162;"	d
CloneMontageInfo	magick/methods.h	163;"	d
CloneMontageInfo	magick/montage.c	/^MagickExport MontageInfo *CloneMontageInfo(const ImageInfo *image_info,$/;"	f
ClonePixelCache	magick/cache.c	/^MagickExport Cache ClonePixelCache(const Cache cache)$/;"	f
ClonePixelCache	magick/methods.h	165;"	d
ClonePixelCacheMethods	magick/cache.c	/^MagickExport void ClonePixelCacheMethods(Cache clone,const Cache cache)$/;"	f
ClonePixelCacheMethods	magick/methods.h	164;"	d
ClonePixelCacheRepository	magick/cache.c	/^static MagickBooleanType ClonePixelCacheRepository($/;"	f	file:
ClonePixelIterator	wand/pixel-iterator.c	/^WandExport PixelIterator *ClonePixelIterator(const PixelIterator *iterator)$/;"	f
ClonePixelWand	wand/pixel-wand.c	/^WandExport PixelWand *ClonePixelWand(const PixelWand *wand)$/;"	f
ClonePixelWands	wand/pixel-wand.c	/^WandExport PixelWand **ClonePixelWands(const PixelWand **wands,$/;"	f
CloneQuantizeInfo	magick/methods.h	166;"	d
CloneQuantizeInfo	magick/quantize.c	/^MagickExport QuantizeInfo *CloneQuantizeInfo(const QuantizeInfo *quantize_info)$/;"	f
CloneSplayTree	magick/methods.h	167;"	d
CloneSplayTree	magick/splay-tree.c	/^MagickExport SplayTreeInfo *CloneSplayTree(SplayTreeInfo *splay_tree,$/;"	f
CloneString	magick/methods.h	169;"	d
CloneString	magick/string.c	/^MagickExport char *CloneString(char **destination,const char *source)$/;"	f
CloneStringInfo	magick/methods.h	168;"	d
CloneStringInfo	magick/string.c	/^MagickExport StringInfo *CloneStringInfo(const StringInfo *string_info)$/;"	f
CloseBlob	magick/blob.c	/^MagickExport MagickBooleanType CloseBlob(Image *image)$/;"	f
CloseBlob	magick/methods.h	170;"	d
CloseCacheView	magick/deprecate.c	/^MagickExport CacheView *CloseCacheView(CacheView *view_info)$/;"	f
CloseCacheView	magick/methods.h	171;"	d
CloseIntensityMorphology	magick/morphology.h	/^  CloseIntensityMorphology,     \/* Pixel Pick using GreyScale Close *\/$/;"	e	enum:__anon70
CloseMagickLog	magick/log.c	/^MagickExport void CloseMagickLog(void)$/;"	f
CloseMagickLog	magick/methods.h	172;"	d
CloseMorphology	magick/morphology.h	/^  CloseMorphology,              \/* Erode then Dilate *\/$/;"	e	enum:__anon70
ClosePixelCacheOnDisk	magick/cache.c	/^static MagickBooleanType ClosePixelCacheOnDisk(CacheInfo *cache_info)$/;"	f	file:
ClosestColor	magick/quantize.c	/^static void ClosestColor(const Image *image,CubeInfo *cube_info,$/;"	f	file:
Cluster	magick/segment.c	/^} Cluster;$/;"	t	typeref:struct:_Cluster	file:
ClutImage	magick/enhance.c	/^MagickExport MagickBooleanType ClutImage(Image *image,const Image *clut_image)$/;"	f
ClutImage	magick/methods.h	174;"	d
ClutImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType ClutImageChannel(Image *image,$/;"	f
ClutImageChannel	magick/methods.h	173;"	d
ClutImageTag	magick/enhance.c	746;"	d	file:
CoalesceImages	magick/layer.c	/^MagickExport Image *CoalesceImages(const Image *image,ExceptionInfo *exception)$/;"	f
CoalesceImages	magick/methods.h	175;"	d
CoalesceLayer	magick/layer.h	/^  CoalesceLayer,$/;"	e	enum:__anon72
CoderCompare	magick/coder.c	/^static int CoderCompare(const void *x,const void *y)$/;"	f	file:
CoderComponentGenesis	magick/coder.c	/^MagickExport MagickBooleanType CoderComponentGenesis(void)$/;"	f
CoderComponentGenesis	magick/methods.h	176;"	d
CoderComponentTerminus	magick/coder.c	/^MagickExport void CoderComponentTerminus(void)$/;"	f
CoderComponentTerminus	magick/methods.h	177;"	d
CoderError	magick/exception.h	/^  CoderError = 450,$/;"	e	enum:__anon84
CoderEvent	magick/log.h	/^  CoderEvent = 0x00010,$/;"	e	enum:__anon93
CoderFatalError	magick/exception.h	/^  CoderFatalError = 750,$/;"	e	enum:__anon84
CoderInfo	magick/coder.h	/^} CoderInfo;$/;"	t	typeref:struct:_CoderInfo
CoderInfoCompare	magick/coder.c	/^static int CoderInfoCompare(const void *x,const void *y)$/;"	f	file:
CoderMap	magick/coder.c	/^  CoderMap[] =$/;"	v	file:
CoderMapInfo	magick/coder.c	/^} CoderMapInfo;$/;"	t	typeref:struct:_CoderMapInfo	file:
CoderPolicyDomain	magick/policy.h	/^  CoderPolicyDomain,$/;"	e	enum:__anon46
CoderWarning	magick/exception.h	/^  CoderWarning = 350,$/;"	e	enum:__anon84
CoefficientsToAffineArgs	magick/distort.c	/^static inline void CoefficientsToAffineArgs(double *coeff)$/;"	f	file:
ColorBurn	magick/composite.c	/^static MagickRealType ColorBurn(const MagickRealType Sca,$/;"	f	file:
ColorBurnCompositeOp	magick/composite.h	/^  ColorBurnCompositeOp,$/;"	e	enum:__anon68
ColorCommand	magick/display.c	/^  ColorCommand,$/;"	e	enum:__anon20	file:
ColorCompare	magick/color.c	/^static int ColorCompare(const void *x,const void *y)$/;"	f	file:
ColorComponentGenesis	magick/color.c	/^MagickExport MagickBooleanType ColorComponentGenesis(void)$/;"	f
ColorComponentGenesis	magick/methods.h	178;"	d
ColorComponentTerminus	magick/color.c	/^MagickExport void ColorComponentTerminus(void)$/;"	f
ColorComponentTerminus	magick/methods.h	179;"	d
ColorDecisionListCorrectImageTag	magick/enhance.c	360;"	d	file:
ColorDecisionListImage	magick/enhance.c	/^MagickExport MagickBooleanType ColorDecisionListImage(Image *image,$/;"	f
ColorDecisionListImage	magick/methods.h	180;"	d
ColorDodge	magick/composite.c	/^static MagickRealType ColorDodge(const MagickRealType Sca,$/;"	f	file:
ColorDodgeCompositeOp	magick/composite.h	/^  ColorDodgeCompositeOp,$/;"	e	enum:__anon68
ColorEditBorderCommand	magick/display.c	/^  ColorEditBorderCommand,$/;"	e	enum:__anon21	file:
ColorEditColorCommand	magick/display.c	/^  ColorEditColorCommand,$/;"	e	enum:__anon21	file:
ColorEditDismissCommand	magick/display.c	/^  ColorEditDismissCommand,$/;"	e	enum:__anon21	file:
ColorEditFuzzCommand	magick/display.c	/^  ColorEditFuzzCommand,$/;"	e	enum:__anon21	file:
ColorEditHelpCommand	magick/display.c	/^  ColorEditHelpCommand,$/;"	e	enum:__anon21	file:
ColorEditMethodCommand	magick/display.c	/^  ColorEditMethodCommand,$/;"	e	enum:__anon21	file:
ColorEditUndoCommand	magick/display.c	/^  ColorEditUndoCommand,$/;"	e	enum:__anon21	file:
ColorElement	magick/xwindow-private.h	/^  ColorElement,$/;"	e	enum:__anon27
ColorFilename	magick/color.c	74;"	d	file:
ColorFloodfillImage	magick/deprecate.c	/^MagickExport MagickBooleanType ColorFloodfillImage(Image *image,$/;"	f
ColorFloodfillImage	magick/methods.h	181;"	d
ColorInfo	magick/color.h	/^} ColorInfo;$/;"	t	typeref:struct:_ColorInfo
ColorInfoCompare	magick/color.c	/^static int ColorInfoCompare(const void *x,const void *y)$/;"	f	file:
ColorMap	magick/color.c	/^  ColorMap[] =$/;"	v	file:
ColorMapInfo	magick/color.c	/^} ColorMapInfo;$/;"	t	typeref:struct:_ColorMapInfo	file:
ColorMatrixImage	magick/fx.c	/^MagickExport Image *ColorMatrixImage(const Image *image,$/;"	f
ColorMatrixImageTag	magick/fx.c	872;"	d	file:
ColorPacket	magick/histogram.h	/^} ColorPacket;$/;"	t	typeref:struct:_ColorPacket
ColorPrimitive	magick/draw.h	/^  ColorPrimitive,$/;"	e	enum:__anon43
ColorSeparationMatteType	magick/image.h	/^  ColorSeparationMatteType,$/;"	e	enum:__anon78
ColorSeparationType	magick/image.h	/^  ColorSeparationType,$/;"	e	enum:__anon78
ColorToNodeId	magick/histogram.c	/^static inline size_t ColorToNodeId(const Image *image,$/;"	f	file:
ColorToNodeId	magick/quantize.c	/^static inline size_t ColorToNodeId(const CubeInfo *cube_info,$/;"	f	file:
ColorizeCompositeOp	magick/composite.h	/^  ColorizeCompositeOp,$/;"	e	enum:__anon68
ColorizeImage	magick/fx.c	/^MagickExport Image *ColorizeImage(const Image *image,const char *opacity,$/;"	f
ColorizeImage	magick/methods.h	182;"	d
ColorizeImageTag	magick/fx.c	694;"	d	file:
ColorspaceOptions	magick/option.c	/^  ColorspaceOptions[] =$/;"	v	file:
ColorspaceType	magick/colorspace.h	/^} ColorspaceType;$/;"	t	typeref:enum:__anon55
ColorspaceValidate	magick/option.h	/^  ColorspaceValidate = 0x00001,$/;"	e	enum:__anon87
CombineImageTag	magick/channel.c	96;"	d	file:
CombineImages	magick/channel.c	/^MagickExport Image *CombineImages(const Image *image,const ChannelType channel,$/;"	f
CombineImages	magick/methods.h	183;"	d
CometKernel	magick/morphology.h	/^  CometKernel,$/;"	e	enum:__anon69
CommandOption	magick/option.h	/^} CommandOption;$/;"	t	typeref:enum:__anon86
CommandOptionFlags	magick/option.h	/^} CommandOptionFlags;$/;"	t	typeref:enum:__anon88
CommandOptionToMnemonic	magick/methods.h	741;"	d
CommandOptionToMnemonic	magick/option.c	/^MagickExport const char *CommandOptionToMnemonic(const CommandOption option,$/;"	f
CommandOptions	magick/option.c	/^  CommandOptions[] =$/;"	v	file:
CommandType	magick/animate.c	/^} CommandType;$/;"	t	typeref:enum:__anon85	file:
CommandType	magick/display.c	/^} CommandType;$/;"	t	typeref:enum:__anon20	file:
CommentCommand	magick/display.c	/^  CommentCommand,$/;"	e	enum:__anon20	file:
CompareAnyLayer	magick/layer.h	/^  CompareAnyLayer,$/;"	e	enum:__anon72
CompareClearLayer	magick/layer.h	/^  CompareClearLayer,$/;"	e	enum:__anon72
CompareEdges	magick/draw.c	/^static int CompareEdges(const void *x,const void *y)$/;"	f	file:
CompareHashmapString	magick/hashmap.c	/^MagickExport MagickBooleanType CompareHashmapString(const void *target,$/;"	f
CompareHashmapString	magick/methods.h	185;"	d
CompareHashmapStringInfo	magick/hashmap.c	/^MagickExport MagickBooleanType CompareHashmapStringInfo(const void *target,$/;"	f
CompareHashmapStringInfo	magick/methods.h	184;"	d
CompareImageBounds	magick/layer.c	/^static RectangleInfo CompareImageBounds(const Image *image1,const Image *image2,$/;"	f	file:
CompareImageChannels	magick/compare.c	/^MagickExport Image *CompareImageChannels(Image *image,$/;"	f
CompareImageChannels	magick/methods.h	186;"	d
CompareImageLayers	magick/layer.c	/^MagickExport Image *CompareImageLayers(const Image *image,$/;"	f
CompareImageLayers	magick/methods.h	187;"	d
CompareImages	magick/compare.c	/^MagickExport Image *CompareImages(Image *image,const Image *reconstruct_image,$/;"	f
CompareImages	magick/methods.h	188;"	d
CompareOverlayLayer	magick/layer.h	/^  CompareOverlayLayer,$/;"	e	enum:__anon72
ComparePixels	magick/layer.c	/^static MagickBooleanType ComparePixels(const ImageLayerMethod method,$/;"	f	file:
CompareSplayTreeString	magick/methods.h	190;"	d
CompareSplayTreeString	magick/splay-tree.c	/^MagickExport int CompareSplayTreeString(const void *target,const void *source)$/;"	f
CompareSplayTreeStringInfo	magick/methods.h	189;"	d
CompareSplayTreeStringInfo	magick/splay-tree.c	/^MagickExport int CompareSplayTreeStringInfo(const void *target,$/;"	f
CompareStringInfo	magick/methods.h	191;"	d
CompareStringInfo	magick/string.c	/^MagickExport int CompareStringInfo(const StringInfo *target,$/;"	f
CompareValidate	magick/option.h	/^  CompareValidate = 0x00002,$/;"	e	enum:__anon87
CompassKernel	magick/morphology.h	/^  CompassKernel,$/;"	e	enum:__anon69
ComplexImageTag	magick/fourier.c	133;"	d	file:
ComplexImages	magick/fourier.c	/^MagickExport Image *ComplexImages(const Image *images,const ComplexOperator op,$/;"	f
ComplexOperator	magick/fourier.h	/^} ComplexOperator;$/;"	t	typeref:enum:__anon2
ComplexOptions	magick/option.c	/^  ComplexOptions[] =$/;"	v	file:
ComplianceType	magick/color.h	/^} ComplianceType;$/;"	t	typeref:enum:__anon83
ComposeOptions	magick/option.c	/^  ComposeOptions[] =$/;"	v	file:
CompositeAtop	magick/composite.c	/^static inline void CompositeAtop(const MagickPixelPacket *p,$/;"	f	file:
CompositeBumpmap	magick/composite.c	/^static inline void CompositeBumpmap(const MagickPixelPacket *p,$/;"	f	file:
CompositeCanvas	magick/layer.c	/^static inline void CompositeCanvas(Image *destination,$/;"	f	file:
CompositeChannels	magick/magick-type.h	/^  CompositeChannels = 0x002F,$/;"	e	enum:__anon9
CompositeClear	magick/composite.c	/^static inline void CompositeClear(const MagickPixelPacket *q,$/;"	f	file:
CompositeColorBurn	magick/composite.c	/^static inline void CompositeColorBurn(const MagickPixelPacket *p,$/;"	f	file:
CompositeColorDodge	magick/composite.c	/^static inline void CompositeColorDodge(const MagickPixelPacket *p,$/;"	f	file:
CompositeCommand	magick/display.c	/^  CompositeCommand,$/;"	e	enum:__anon20	file:
CompositeDarken	magick/composite.c	/^static inline void CompositeDarken(const MagickPixelPacket *p,$/;"	f	file:
CompositeDarkenIntensity	magick/composite.c	/^static inline void CompositeDarkenIntensity(const MagickPixelPacket *p,$/;"	f	file:
CompositeDifference	magick/composite.c	/^static inline void CompositeDifference(const MagickPixelPacket *p,$/;"	f	file:
CompositeDismissCommand	magick/display.c	/^  CompositeDismissCommand,$/;"	e	enum:__anon21	file:
CompositeDisplaceCommand	magick/display.c	/^  CompositeDisplaceCommand,$/;"	e	enum:__anon21	file:
CompositeDissolveCommand	magick/display.c	/^  CompositeDissolveCommand,$/;"	e	enum:__anon21	file:
CompositeDivide	magick/composite.c	/^static inline void CompositeDivide(const MagickPixelPacket *p,$/;"	f	file:
CompositeExclusion	magick/composite.c	/^static inline void CompositeExclusion(const MagickPixelPacket *p,$/;"	f	file:
CompositeHCL	magick/composite.c	/^static void CompositeHCL(const MagickRealType red,const MagickRealType green,$/;"	f	file:
CompositeHardLight	magick/composite.c	/^static inline void CompositeHardLight(const MagickPixelPacket *p,$/;"	f	file:
CompositeHelpCommand	magick/display.c	/^  CompositeHelpCommand,$/;"	e	enum:__anon21	file:
CompositeImage	magick/composite.c	/^MagickExport MagickBooleanType CompositeImage(Image *image,$/;"	f
CompositeImage	magick/methods.h	193;"	d
CompositeImageChannel	magick/composite.c	/^MagickExport MagickBooleanType CompositeImageChannel(Image *image,$/;"	f
CompositeImageChannel	magick/methods.h	192;"	d
CompositeImageTag	magick/composite.c	1635;"	d	file:
CompositeIn	magick/composite.c	/^static inline void CompositeIn(const MagickPixelPacket *p,$/;"	f	file:
CompositeLayer	magick/layer.h	/^  CompositeLayer,$/;"	e	enum:__anon72
CompositeLayers	magick/layer.c	/^MagickExport void CompositeLayers(Image *destination,$/;"	f
CompositeLayers	magick/methods.h	194;"	d
CompositeLighten	magick/composite.c	/^static inline void CompositeLighten(const MagickPixelPacket *p,$/;"	f	file:
CompositeLightenIntensity	magick/composite.c	/^static inline void CompositeLightenIntensity(const MagickPixelPacket *p,$/;"	f	file:
CompositeLinearBurn	magick/composite.c	/^static inline void CompositeLinearBurn(const MagickPixelPacket *p,$/;"	f	file:
CompositeLinearDodge	magick/composite.c	/^static inline void CompositeLinearDodge(const MagickPixelPacket *p,$/;"	f	file:
CompositeLinearLight	magick/composite.c	/^static inline void CompositeLinearLight(const MagickPixelPacket *p,$/;"	f	file:
CompositeMathematics	magick/composite.c	/^static inline void CompositeMathematics(const MagickPixelPacket *p,$/;"	f	file:
CompositeMinus	magick/composite.c	/^static inline void CompositeMinus(const MagickPixelPacket *p,$/;"	f	file:
CompositeModulusAdd	magick/composite.c	/^static inline void CompositeModulusAdd(const MagickPixelPacket *p,$/;"	f	file:
CompositeModulusSubtract	magick/composite.c	/^static inline void CompositeModulusSubtract(const MagickPixelPacket *p,$/;"	f	file:
CompositeMultiply	magick/composite.c	/^static inline void CompositeMultiply(const MagickPixelPacket *p,$/;"	f	file:
CompositeOperator	magick/composite.h	/^} CompositeOperator;$/;"	t	typeref:enum:__anon68
CompositeOperatorsCommand	magick/display.c	/^  CompositeOperatorsCommand,$/;"	e	enum:__anon21	file:
CompositeOut	magick/composite.c	/^static inline void CompositeOut(const MagickPixelPacket *p,$/;"	f	file:
CompositePegtopLight	magick/composite.c	/^static inline void CompositePegtopLight(const MagickPixelPacket *p,$/;"	f	file:
CompositePinLight	magick/composite.c	/^static inline void CompositePinLight(const MagickPixelPacket *p,$/;"	f	file:
CompositePlus	magick/composite.c	/^static inline void CompositePlus(const MagickPixelPacket *p,$/;"	f	file:
CompositeScreen	magick/composite.c	/^static inline void CompositeScreen(const MagickPixelPacket *p,$/;"	f	file:
CompositeSoftLight	magick/composite.c	/^static inline void CompositeSoftLight(const MagickPixelPacket *p,$/;"	f	file:
CompositeThreshold	magick/composite.c	/^static inline void CompositeThreshold(const MagickPixelPacket *p,$/;"	f	file:
CompositeValidate	magick/option.h	/^  CompositeValidate = 0x00004,$/;"	e	enum:__anon87
CompositeVividLight	magick/composite.c	/^static inline void CompositeVividLight(const MagickPixelPacket *p,$/;"	f	file:
CompositeXor	magick/composite.c	/^static inline void CompositeXor(const MagickPixelPacket *p,$/;"	f	file:
CompressImageColormap	magick/methods.h	195;"	d
CompressImageColormap	magick/quantize.c	/^MagickExport MagickBooleanType CompressImageColormap(Image *image)$/;"	f
CompressOptions	magick/option.c	/^  CompressOptions[] =$/;"	v	file:
CompressPixelGamma	magick/deprecate.h	49;"	d
CompressionType	magick/compress.h	/^} CompressionType;$/;"	t	typeref:enum:__anon13
ComputeAddNoiseImage	magick/accelerate.c	/^static Image* ComputeAddNoiseImage(const Image* inputImage, $/;"	f	file:
ComputeAddNoiseImageOptRandomNum	magick/accelerate.c	/^static Image* ComputeAddNoiseImageOptRandomNum(const Image* inputImage, $/;"	f	file:
ComputeBlurImage	magick/accelerate.c	/^static Image* ComputeBlurImage(const Image* inputImage, const ChannelType channel, const double radius, const double sigma, ExceptionInfo *exception)$/;"	f	file:
ComputeBlurImageSection	magick/accelerate.c	/^static Image* ComputeBlurImageSection(const Image* inputImage, const ChannelType channel, const double radius, const double sigma, ExceptionInfo *exception)$/;"	f	file:
ComputeCompositeImage	magick/accelerate.c	/^static MagickBooleanType ComputeCompositeImage(Image *inputImage,$/;"	f	file:
ComputeContrastImage	magick/accelerate.c	/^static MagickBooleanType ComputeContrastImage(Image *inputImage, const MagickBooleanType sharpen, ExceptionInfo *exception)$/;"	f	file:
ComputeContrastStretchImageChannel	magick/accelerate.c	/^MagickExport MagickBooleanType ComputeContrastStretchImageChannel(Image *image,$/;"	f
ComputeConvolveImage	magick/accelerate.c	/^static Image* ComputeConvolveImage(const Image* inputImage, const ChannelType channel, const KernelInfo *kernel, ExceptionInfo *exception)$/;"	f	file:
ComputeDespeckleImage	magick/accelerate.c	/^static Image* ComputeDespeckleImage(const Image* inputImage, ExceptionInfo* exception)$/;"	f	file:
ComputeEqualizeImage	magick/accelerate.c	/^MagickExport MagickBooleanType ComputeEqualizeImage(Image *inputImage, const ChannelType channel, ExceptionInfo * _exception)$/;"	f
ComputeFunctionImage	magick/accelerate.c	/^static MagickBooleanType ComputeFunctionImage(Image *image, const ChannelType channel,const MagickFunction function,$/;"	f	file:
ComputeGrayscaleImage	magick/accelerate.c	/^MagickBooleanType ComputeGrayscaleImage(Image* image, const PixelIntensityMethod method, ExceptionInfo* exception)$/;"	f
ComputeModulateImage	magick/accelerate.c	/^MagickBooleanType ComputeModulateImage(Image* image, double percent_brightness, double percent_hue, double percent_saturation, ColorspaceType colorspace, ExceptionInfo* exception)$/;"	f
ComputeMotionBlurImage	magick/accelerate.c	/^static Image* ComputeMotionBlurImage(const Image *inputImage, $/;"	f	file:
ComputeNegateImageChannel	magick/accelerate.c	/^MagickBooleanType ComputeNegateImageChannel(Image* image, const ChannelType channel, const MagickBooleanType magick_unused(grayscale), ExceptionInfo* exception)$/;"	f
ComputeRadialBlurImage	magick/accelerate.c	/^static Image* ComputeRadialBlurImage(const Image *inputImage, const ChannelType channel, const double angle, ExceptionInfo *exception)$/;"	f	file:
ComputeRandomImage	magick/accelerate.c	/^static MagickBooleanType ComputeRandomImage(Image* inputImage, $/;"	f	file:
ComputeResizeImage	magick/accelerate.c	/^static Image* ComputeResizeImage(const Image* inputImage, const size_t resizedColumns, const size_t resizedRows$/;"	f	file:
ComputeUnsharpMaskImage	magick/accelerate.c	/^static Image* ComputeUnsharpMaskImage(const Image *inputImage, const ChannelType channel,const double radius,const double sigma, $/;"	f	file:
ComputeUnsharpMaskImageSection	magick/accelerate.c	/^static Image* ComputeUnsharpMaskImageSection(const Image *inputImage, const ChannelType channel,const double radius,const double sigma, $/;"	f	file:
ConcatenateColorComponent	magick/color.c	/^MagickExport void ConcatenateColorComponent(const MagickPixelPacket *pixel,$/;"	f
ConcatenateColorComponent	magick/methods.h	196;"	d
ConcatenateImages	wand/convert.c	/^static MagickBooleanType ConcatenateImages(int argc,char **argv,$/;"	f	file:
ConcatenateMagickString	magick/methods.h	197;"	d
ConcatenateMagickString	magick/string.c	/^MagickExport size_t ConcatenateMagickString(char *destination,$/;"	f
ConcatenateMode	magick/montage.h	/^  ConcatenateMode$/;"	e	enum:__anon3
ConcatenateString	magick/methods.h	199;"	d
ConcatenateString	magick/string.c	/^MagickExport MagickBooleanType ConcatenateString(char **destination,$/;"	f
ConcatenateStringInfo	magick/methods.h	198;"	d
ConcatenateStringInfo	magick/string.c	/^MagickExport void ConcatenateStringInfo(StringInfo *string_info,$/;"	f
ConcatentateHexColorComponent	magick/color.c	/^static void ConcatentateHexColorComponent(const MagickPixelPacket *pixel,$/;"	f	file:
CondensedStretch	magick/type.h	/^  CondensedStretch,$/;"	e	enum:__anon24
ConfigureCompare	magick/configure.c	/^static int ConfigureCompare(const void *x,const void *y)$/;"	f	file:
ConfigureComponentGenesis	magick/configure.c	/^MagickExport MagickBooleanType ConfigureComponentGenesis(void)$/;"	f
ConfigureComponentGenesis	magick/methods.h	200;"	d
ConfigureComponentTerminus	magick/configure.c	/^MagickExport void ConfigureComponentTerminus(void)$/;"	f
ConfigureComponentTerminus	magick/methods.h	201;"	d
ConfigureError	magick/exception.h	/^  ConfigureError = 495,$/;"	e	enum:__anon84
ConfigureEvent	magick/log.h	/^  ConfigureEvent = 0x00020,$/;"	e	enum:__anon93
ConfigureFatalError	magick/exception.h	/^  ConfigureFatalError = 795,$/;"	e	enum:__anon84
ConfigureFileToStringInfo	magick/methods.h	202;"	d
ConfigureFileToStringInfo	magick/string.c	/^MagickExport StringInfo *ConfigureFileToStringInfo(const char *filename)$/;"	f
ConfigureFilename	magick/configure.c	62;"	d	file:
ConfigureInfo	magick/configure.h	/^} ConfigureInfo;$/;"	t	typeref:struct:_ConfigureInfo
ConfigureInfoCompare	magick/configure.c	/^static int ConfigureInfoCompare(const void *x,const void *y)$/;"	f	file:
ConfigureMap	magick/configure.c	/^  ConfigureMap[] =$/;"	v	file:
ConfigureMapInfo	magick/configure.c	/^} ConfigureMapInfo;$/;"	t	typeref:struct:_ConfigureMapInfo	file:
ConfigureWarning	magick/exception.h	/^  ConfigureWarning = 395,$/;"	e	enum:__anon84
ConjugateComplexOperator	magick/fourier.h	/^  ConjugateComplexOperator,$/;"	e	enum:__anon2
ConnectPixelCacheServer	magick/distribute-cache.c	/^static int ConnectPixelCacheServer(const char *hostname,const int port,$/;"	f	file:
ConsoleHandler	magick/log.c	/^  ConsoleHandler = 0x0001,$/;"	e	enum:__anon57	file:
ConsolidateCMYKImages	magick/methods.h	203;"	d
ConsolidateCMYKImages	magick/transform.c	/^MagickExport Image *ConsolidateCMYKImages(const Image *images,$/;"	f
ConsolidateCrossings	magick/segment.c	/^static void ConsolidateCrossings(ZeroCrossing *zero_crossing,$/;"	f	file:
ConstantString	magick/methods.h	204;"	d
ConstantString	magick/string.c	/^MagickExport char *ConstantString(const char *source)$/;"	f
ConstantVirtualPixelMethod	magick/cache-view.h	/^  ConstantVirtualPixelMethod,  \/* deprecated *\/$/;"	e	enum:__anon63
ConstituteComponentGenesis	magick/deprecate.c	/^MagickExport MagickBooleanType ConstituteComponentGenesis(void)$/;"	f
ConstituteComponentGenesis	magick/methods.h	205;"	d
ConstituteComponentTerminus	magick/deprecate.c	/^MagickExport void ConstituteComponentTerminus(void)$/;"	f
ConstituteComponentTerminus	magick/methods.h	206;"	d
ConstituteImage	magick/constitute.c	/^MagickExport Image *ConstituteImage(const size_t columns,$/;"	f
ConstituteImage	magick/methods.h	207;"	d
ConstrainColormapIndex	magick/colormap-private.h	/^static inline IndexPacket ConstrainColormapIndex(Image *image,$/;"	f
ContinueTimer	magick/methods.h	208;"	d
ContinueTimer	magick/timer.c	/^MagickExport MagickBooleanType ContinueTimer(TimerInfo *time_info)$/;"	f
Contrast	magick/enhance.c	/^static void Contrast(const int sign,Quantum *red,Quantum *green,Quantum *blue)$/;"	f	file:
ContrastImage	magick/enhance.c	/^MagickExport MagickBooleanType ContrastImage(Image *image,$/;"	f
ContrastImage	magick/methods.h	209;"	d
ContrastImageTag	magick/enhance.c	943;"	d	file:
ContrastStretchCommand	magick/display.c	/^  ContrastStretchCommand,$/;"	e	enum:__anon20	file:
ContrastStretchImage	magick/enhance.c	/^MagickExport MagickBooleanType ContrastStretchImage(Image *image,$/;"	f
ContrastStretchImage	magick/methods.h	211;"	d
ContrastStretchImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType ContrastStretchImageChannel(Image *image,$/;"	f
ContrastStretchImageChannel	magick/methods.h	210;"	d
ContrastStretchImageTag	magick/accelerate.c	4425;"	d	file:
ContrastStretchImageTag	magick/enhance.c	1129;"	d	file:
ContributionInfo	magick/resize.c	/^} ContributionInfo;$/;"	t	typeref:struct:_ContributionInfo	file:
ControlHandler	magick/nt-base.c	/^static BOOL ControlHandler(DWORD type)$/;"	f	file:
ConvertCMYKToRGB	magick/colorspace.c	/^static inline void ConvertCMYKToRGB(MagickPixelPacket *pixel)$/;"	f	file:
ConvertCMYToRGB	magick/colorspace.c	/^static inline void ConvertCMYToRGB(const double cyan,const double magenta,$/;"	f	file:
ConvertHCLToRGB	magick/gem.c	/^MagickExport void ConvertHCLToRGB(const double hue,const double chroma,$/;"	f
ConvertHCLpToRGB	magick/gem.c	/^MagickExport void ConvertHCLpToRGB(const double hue,const double chroma,$/;"	f
ConvertHSBToRGB	magick/gem.c	/^MagickExport void ConvertHSBToRGB(const double hue,const double saturation,$/;"	f
ConvertHSBToRGB	magick/methods.h	212;"	d
ConvertHSIToRGB	magick/gem.c	/^MagickExport void ConvertHSIToRGB(const double hue,const double saturation,$/;"	f
ConvertHSLToRGB	magick/gem.c	/^MagickExport void ConvertHSLToRGB(const double hue,const double saturation,$/;"	f
ConvertHSLToRGB	magick/methods.h	213;"	d
ConvertHSVToRGB	magick/gem.c	/^MagickExport void ConvertHSVToRGB(const double hue,const double saturation,$/;"	f
ConvertHWBToRGB	magick/gem.c	/^MagickExport void ConvertHWBToRGB(const double hue,const double whiteness,$/;"	f
ConvertHWBToRGB	magick/methods.h	214;"	d
ConvertHueToRGB	magick/composite.c	/^static inline MagickRealType ConvertHueToRGB(MagickRealType m1,$/;"	f	file:
ConvertImageCommand	wand/convert.c	/^WandExport MagickBooleanType ConvertImageCommand(ImageInfo *image_info,$/;"	f
ConvertLCHabToRGB	magick/gem.c	/^MagickExport void ConvertLCHabToRGB(const double luma,const double chroma,$/;"	f
ConvertLCHabToXYZ	magick/gem.c	/^static inline void ConvertLCHabToXYZ(const double luma,const double chroma,$/;"	f	file:
ConvertLCHuvToRGB	magick/gem.c	/^MagickExport void ConvertLCHuvToRGB(const double luma,const double chroma,$/;"	f
ConvertLCHuvToXYZ	magick/gem.c	/^static inline void ConvertLCHuvToXYZ(const double luma,const double chroma,$/;"	f	file:
ConvertLMSToRGB	magick/colorspace.c	/^static inline void ConvertLMSToRGB(const double L,const double M,$/;"	f	file:
ConvertLMSToXYZ	magick/colorspace.c	/^static inline void ConvertLMSToXYZ(const double L,const double M,const double S,$/;"	f	file:
ConvertLabToRGB	magick/colorspace.c	/^static inline void ConvertLabToRGB(const double L,const double a,$/;"	f	file:
ConvertLabToXYZ	magick/gem-private.h	/^static inline void ConvertLabToXYZ(const double L,const double a,const double b,$/;"	f
ConvertLatin1ToUTF8	magick/token-private.h	/^static inline unsigned char *ConvertLatin1ToUTF8(const unsigned char *content)$/;"	f
ConvertLuvToRGB	magick/colorspace.c	/^static inline void ConvertLuvToRGB(const double L,const double u,$/;"	f	file:
ConvertLuvToXYZ	magick/gem-private.h	/^static inline void ConvertLuvToXYZ(const double L,const double u,const double v,$/;"	f
ConvertMain	utilities/convert.c	/^static int ConvertMain(int argc,char **argv)$/;"	f	file:
ConvertRGBToCMY	magick/colorspace.c	/^static inline void ConvertRGBToCMY(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToCMYK	magick/colorspace-private.h	/^static inline void ConvertRGBToCMYK(MagickPixelPacket *pixel)$/;"	f
ConvertRGBToHCL	magick/gem.c	/^MagickExport void ConvertRGBToHCL(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHCLp	magick/gem.c	/^MagickExport void ConvertRGBToHCLp(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHSB	magick/gem.c	/^MagickExport void ConvertRGBToHSB(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHSB	magick/methods.h	215;"	d
ConvertRGBToHSI	magick/gem.c	/^MagickExport void ConvertRGBToHSI(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHSL	magick/gem.c	/^MagickExport void ConvertRGBToHSL(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHSL	magick/methods.h	216;"	d
ConvertRGBToHSV	magick/gem.c	/^MagickExport void ConvertRGBToHSV(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHWB	magick/gem.c	/^MagickExport void ConvertRGBToHWB(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToHWB	magick/methods.h	217;"	d
ConvertRGBToLCHab	magick/gem.c	/^MagickExport void ConvertRGBToLCHab(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToLCHuv	magick/gem.c	/^MagickExport void ConvertRGBToLCHuv(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToLMS	magick/colorspace.c	/^static void ConvertRGBToLMS(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToLab	magick/colorspace.c	/^static void ConvertRGBToLab(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToLuv	magick/colorspace.c	/^static void ConvertRGBToLuv(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToXYZ	magick/gem-private.h	/^static inline void ConvertRGBToXYZ(const Quantum red,const Quantum green,$/;"	f
ConvertRGBToYCbCr	magick/colorspace.c	/^static void ConvertRGBToYCbCr(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToYDbDr	magick/colorspace.c	/^static void ConvertRGBToYDbDr(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToYIQ	magick/colorspace.c	/^static void ConvertRGBToYIQ(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToYPbPr	magick/colorspace.c	/^static void ConvertRGBToYPbPr(const Quantum red,const Quantum green,$/;"	f	file:
ConvertRGBToYUV	magick/colorspace.c	/^static void ConvertRGBToYUV(const Quantum red,const Quantum green,$/;"	f	file:
ConvertUTF16ToUTF8	magick/xml-tree.c	/^static char *ConvertUTF16ToUTF8(const char *content,size_t *length)$/;"	f	file:
ConvertUTF8ToUTF16	magick/deprecate.c	/^static wchar_t *ConvertUTF8ToUTF16(const unsigned char *source)$/;"	f	file:
ConvertUsage	wand/convert.c	/^static MagickBooleanType ConvertUsage(void)$/;"	f	file:
ConvertValidate	magick/option.h	/^  ConvertValidate = 0x00008,$/;"	e	enum:__anon87
ConvertXYZToLCHab	magick/gem.c	/^static inline void ConvertXYZToLCHab(const double X,const double Y,$/;"	f	file:
ConvertXYZToLCHuv	magick/gem.c	/^static inline void ConvertXYZToLCHuv(const double X,const double Y,$/;"	f	file:
ConvertXYZToLMS	magick/colorspace.c	/^static inline void ConvertXYZToLMS(const double x,const double y,$/;"	f	file:
ConvertXYZToLab	magick/gem-private.h	/^static inline void ConvertXYZToLab(const double X,const double Y,const double Z,$/;"	f
ConvertXYZToLuv	magick/gem-private.h	/^static inline void ConvertXYZToLuv(const double X,const double Y,const double Z,$/;"	f
ConvertXYZToRGB	magick/gem-private.h	/^static inline void ConvertXYZToRGB(const double X,const double Y,const double Z,$/;"	f
ConvertYCbCrToRGB	magick/colorspace.c	/^static void ConvertYCbCrToRGB(const double Y,const double Cb,$/;"	f	file:
ConvertYDbDrToRGB	magick/colorspace.c	/^static void ConvertYDbDrToRGB(const double Y,const double Db,const double Dr,$/;"	f	file:
ConvertYIQToRGB	magick/colorspace.c	/^static void ConvertYIQToRGB(const double Y,const double I,const double Q,$/;"	f	file:
ConvertYPbPrToRGB	magick/colorspace.c	/^static void ConvertYPbPrToRGB(const double Y,const double Pb,const double Pr,$/;"	f	file:
ConvertYUVToRGB	magick/colorspace.c	/^static void ConvertYUVToRGB(const double Y,const double U,const double V,$/;"	f	file:
ConvexHullKernel	magick/morphology.h	/^  ConvexHullKernel,$/;"	e	enum:__anon69
ConvolveImage	magick/effect.c	/^MagickExport Image *ConvolveImage(const Image *image,const size_t order,$/;"	f
ConvolveImage	magick/methods.h	219;"	d
ConvolveImageChannel	magick/effect.c	/^MagickExport Image *ConvolveImageChannel(const Image *image,$/;"	f
ConvolveImageChannel	magick/methods.h	218;"	d
ConvolveMorphology	magick/morphology.h	/^  ConvolveMorphology,           \/* Weighted Sum with reflected kernel *\/$/;"	e	enum:__anon70
CopyAlphaChannel	magick/image.h	/^  CopyAlphaChannel,$/;"	e	enum:__anon77
CopyBlackCompositeOp	magick/composite.h	/^  CopyBlackCompositeOp,$/;"	e	enum:__anon68
CopyBlueCompositeOp	magick/composite.h	/^  CopyBlueCompositeOp,$/;"	e	enum:__anon68
CopyCommand	magick/display.c	/^  CopyCommand,$/;"	e	enum:__anon20	file:
CopyCompositeOp	magick/composite.h	/^  CopyCompositeOp,$/;"	e	enum:__anon68
CopyCyanCompositeOp	magick/composite.h	/^  CopyCyanCompositeOp,$/;"	e	enum:__anon68
CopyDelegateFile	magick/delegate.c	/^static MagickBooleanType CopyDelegateFile(const char *source,$/;"	f	file:
CopyGreenCompositeOp	magick/composite.h	/^  CopyGreenCompositeOp,$/;"	e	enum:__anon68
CopyImageRegion	magick/transform.c	/^static inline MagickBooleanType CopyImageRegion(Image *destination,$/;"	f	file:
CopyMagentaCompositeOp	magick/composite.h	/^  CopyMagentaCompositeOp,$/;"	e	enum:__anon68
CopyMagickMemory	magick/memory.c	/^MagickExport void *CopyMagickMemory(void *destination,const void *source,$/;"	f
CopyMagickMemory	magick/methods.h	220;"	d
CopyMagickString	magick/methods.h	221;"	d
CopyMagickString	magick/string.c	/^MagickExport size_t CopyMagickString(char *destination,const char *source,$/;"	f
CopyMode	magick/display.c	/^  CopyMode,$/;"	e	enum:__anon19	file:
CopyOpacityCompositeOp	magick/composite.h	/^  CopyOpacityCompositeOp,$/;"	e	enum:__anon68
CopyPixels	magick/cache.c	/^static inline void CopyPixels(PixelPacket *destination,$/;"	f	file:
CopyRedCompositeOp	magick/composite.h	/^  CopyRedCompositeOp,$/;"	e	enum:__anon68
CopyYellowCompositeOp	magick/composite.h	/^  CopyYellowCompositeOp,$/;"	e	enum:__anon68
CornersKernel	magick/morphology.h	/^  CornersKernel,$/;"	e	enum:__anon69
CorrectPhaseLHS	magick/fourier.c	/^static void CorrectPhaseLHS(const size_t width,const size_t height,$/;"	f	file:
CorrelateMorphology	magick/morphology.h	/^  CorrelateMorphology,          \/* Weighted Sum using a sliding window *\/$/;"	e	enum:__anon70
CorrelateNormalizeValue	magick/geometry.h	/^  CorrelateNormalizeValue = 0x10000, \/* '^' see ScaleKernelValue() *\/$/;"	e	enum:__anon14
CorruptImageError	magick/exception.h	/^  CorruptImageError = 425,$/;"	e	enum:__anon84
CorruptImageFatalError	magick/exception.h	/^  CorruptImageFatalError = 725,$/;"	e	enum:__anon84
CorruptImageWarning	magick/exception.h	/^  CorruptImageWarning = 325,$/;"	e	enum:__anon84
Cosine	magick/resize.c	/^static MagickRealType Cosine(const MagickRealType x,$/;"	f	file:
CosineEvaluateOperator	magick/statistic.h	/^  CosineEvaluateOperator,$/;"	e	enum:__anon89
CosineFilter	magick/resample.h	/^  CosineFilter,$/;"	e	enum:__anon76
CosineWeightingFunction	magick/resize-private.h	/^  CosineWeightingFunction,$/;"	e	enum:__anon30
CropCommand	magick/display.c	/^  CropCommand,$/;"	e	enum:__anon20	file:
CropDismissCommand	magick/display.c	/^  CropDismissCommand,$/;"	e	enum:__anon21	file:
CropHelpCommand	magick/display.c	/^  CropHelpCommand,$/;"	e	enum:__anon21	file:
CropImage	magick/methods.h	222;"	d
CropImage	magick/transform.c	/^MagickExport Image *CropImage(const Image *image,const RectangleInfo *geometry,$/;"	f
CropImageTag	magick/transform.c	615;"	d	file:
CropImageToTiles	magick/transform.c	/^MagickExport Image *CropImageToTiles(const Image *image,$/;"	f
CropMode	magick/display.c	/^  CropMode,$/;"	e	enum:__anon19	file:
CropToFitImage	magick/shear.c	/^static MagickBooleanType CropToFitImage(Image **image,$/;"	f	file:
CrossKernel	magick/morphology.h	/^  CrossKernel,$/;"	e	enum:__anon69
CubeInfo	magick/histogram.c	/^} CubeInfo;$/;"	t	typeref:struct:_CubeInfo	file:
CubeInfo	magick/quantize.c	/^} CubeInfo;$/;"	t	typeref:struct:_CubeInfo	file:
CubicBC	magick/resize.c	/^static MagickRealType CubicBC(const MagickRealType x,$/;"	f	file:
CubicBCWeightingFunction	magick/resize-private.h	/^  CubicBCWeightingFunction,$/;"	e	enum:__anon30
CubicFilter	magick/resample.h	/^  CubicFilter,$/;"	e	enum:__anon76
CubicWeightingFunction	magick/deprecate.c	/^static inline MagickRealType CubicWeightingFunction(const MagickRealType x)$/;"	f	file:
CurrentContext	wand/drawing-wand.c	60;"	d	file:
CutCommand	magick/display.c	/^  CutCommand,$/;"	e	enum:__anon20	file:
CutMode	magick/display.c	/^  CutMode$/;"	e	enum:__anon19	file:
CyanChannel	magick/magick-type.h	/^  CyanChannel = 0x0001,$/;"	e	enum:__anon9
CyanQuantum	magick/quantum.h	/^  CyanQuantum,$/;"	e	enum:__anon7
CycleColormapImage	magick/colormap.c	/^MagickExport MagickBooleanType CycleColormapImage(Image *image,$/;"	f
CycleColormapImage	magick/methods.h	223;"	d
Cylinder2PlaneDistortion	magick/distort.h	/^  Cylinder2PlaneDistortion,$/;"	e	enum:__anon50
D65X	magick/gem-private.h	27;"	d
D65Y	magick/gem-private.h	28;"	d
D65Z	magick/gem-private.h	29;"	d
DEBUG_ELLIPSE	magick/resample.c	80;"	d	file:
DEBUG_HIT_MISS	magick/resample.c	81;"	d	file:
DEBUG_NO_PIXEL_HIT	magick/resample.c	82;"	d	file:
DEBUG_OPT_FRAME	magick/layer.c	960;"	d	file:
DIR	magick/nt-base-private.h	/^} DIR;$/;"	t	typeref:struct:_DIR
DPCHostname	magick/distribute-cache.c	90;"	d	file:
DPCPendingConnections	magick/distribute-cache.c	91;"	d	file:
DPCPort	magick/distribute-cache.c	92;"	d	file:
DPCSessionKeyLength	magick/distribute-cache.c	93;"	d	file:
DRAW_BINARY_IMPLEMENTATION	wand/drawing-wand.c	58;"	d	file:
DXT1Compression	magick/compress.h	/^  DXT1Compression,$/;"	e	enum:__anon13
DXT3Compression	magick/compress.h	/^  DXT3Compression,$/;"	e	enum:__anon13
DXT5Compression	magick/compress.h	/^  DXT5Compression,$/;"	e	enum:__anon13
Darken	magick/composite.c	/^static inline MagickRealType Darken(const MagickRealType p,$/;"	f	file:
DarkenCompositeOp	magick/composite.h	/^  DarkenCompositeOp,$/;"	e	enum:__anon68
DarkenIntensityCompositeOp	magick/composite.h	/^  DarkenIntensityCompositeOp,$/;"	e	enum:__anon68
DataSegmentInfo	magick/memory.c	/^} DataSegmentInfo;$/;"	t	typeref:struct:_DataSegmentInfo	file:
DataType	magick/mime-private.h	/^} DataType;$/;"	t	typeref:enum:__anon16
DataTypeOptions	magick/option.c	/^  DataTypeOptions[] =$/;"	v	file:
DePolarDistortion	magick/distort.h	/^  DePolarDistortion,$/;"	e	enum:__anon50
DeactivateAlphaChannel	magick/image.h	/^  DeactivateAlphaChannel,$/;"	e	enum:__anon77
DebugHandler	magick/log.c	/^  DebugHandler = 0x0010,$/;"	e	enum:__anon57	file:
DecimalValue	magick/geometry.h	/^  DecimalValue = 0x40000,  \/* '.'  floating point numbers found *\/$/;"	e	enum:__anon14
DecipherImage	magick/cipher.c	/^MagickExport MagickBooleanType DecipherImage(Image *image,$/;"	f
DecipherImage	magick/methods.h	224;"	d
DecipherImageTag	magick/cipher.c	567;"	d	file:
DecodeGamma	magick/pixel.c	/^static inline double DecodeGamma(const double x)$/;"	f	file:
DecodeImageHandler	magick/magick.h	/^  *DecodeImageHandler(const ImageInfo *,ExceptionInfo *);$/;"	t
DecodePixelGamma	magick/pixel.c	/^MagickExport MagickRealType DecodePixelGamma(const MagickRealType pixel)$/;"	f
DecoderThreadSupport	magick/magick.h	/^  DecoderThreadSupport = 0x0001,$/;"	e	enum:__anon59
DecodesRGBGamma	magick/deprecate.h	50;"	d
DeconstructImages	magick/layer.c	/^MagickExport Image *DeconstructImages(const Image *images,$/;"	f
DeconstructImages	magick/methods.h	225;"	d
DecorateOptions	magick/option.c	/^  DecorateOptions[] =$/;"	v	file:
DecorationType	magick/draw.h	/^} DecorationType;$/;"	t	typeref:enum:__anon36
DefaultChannels	magick/magick-type.h	/^  DefaultChannels = ((AllChannels | SyncChannels) &~ OpacityChannel)$/;"	e	enum:__anon9
DefaultFatalErrorHandler	magick/exception.c	/^static void DefaultFatalErrorHandler(const ExceptionType severity,$/;"	f	file:
DefaultPathMode	wand/drawing-wand.c	/^  DefaultPathMode,$/;"	e	enum:__anon95	file:
DefaultPreviewGeometry	magick/effect.c	2248;"	d	file:
DefaultResolution	magick/image.c	/^  DefaultResolution = 72.0;$/;"	v
DefaultState	magick/xwindow-private.h	/^  DefaultState = 0x0000,$/;"	e	enum:__anon29
DefaultTileFrame	magick/image.c	/^  DefaultTileFrame[] = "15x15+3+3",$/;"	v
DefaultTileGeometry	magick/image.c	/^  DefaultTileGeometry[] = "120x120+4+3>",$/;"	v
DefaultTileLabel	magick/image.c	/^  DefaultTileLabel[] = "%f\\n%G\\n%b",$/;"	v
DefineImageArtifact	magick/artifact.c	/^MagickExport MagickBooleanType DefineImageArtifact(Image *image,$/;"	f
DefineImageArtifact	magick/methods.h	226;"	d
DefineImageColormap	magick/quantize.c	/^static size_t DefineImageColormap(Image *image,CubeInfo *cube_info,$/;"	f	file:
DefineImageHistogram	magick/histogram.c	/^static void DefineImageHistogram(const Image *image,NodeInfo *node_info,$/;"	f	file:
DefineImageOption	magick/methods.h	227;"	d
DefineImageOption	magick/option.c	/^MagickExport MagickBooleanType DefineImageOption(ImageInfo *image_info,$/;"	f
DefineImageProperty	magick/methods.h	228;"	d
DefineImageProperty	magick/property.c	/^MagickExport MagickBooleanType DefineImageProperty(Image *image,$/;"	f
DefineImageRegistry	magick/methods.h	229;"	d
DefineImageRegistry	magick/registry.c	/^MagickExport MagickBooleanType DefineImageRegistry(const RegistryType type,$/;"	f
DefineRegion	magick/segment.c	/^static ssize_t DefineRegion(const short *extrema,ExtentPacket *extents)$/;"	f	file:
DegreesToRadians	magick/image-private.h	/^static inline double DegreesToRadians(const double degrees)$/;"	f
DelDispose	magick/layer.c	958;"	d	file:
DelegateCompare	magick/delegate.c	/^static int DelegateCompare(const void *x,const void *y)$/;"	f	file:
DelegateComponentGenesis	magick/delegate.c	/^MagickExport MagickBooleanType DelegateComponentGenesis(void)$/;"	f
DelegateComponentGenesis	magick/methods.h	230;"	d
DelegateComponentTerminus	magick/delegate.c	/^MagickExport void DelegateComponentTerminus(void)$/;"	f
DelegateComponentTerminus	magick/methods.h	231;"	d
DelegateError	magick/exception.h	/^  DelegateError = 415,$/;"	e	enum:__anon84
DelegateFatalError	magick/exception.h	/^  DelegateFatalError = 715,$/;"	e	enum:__anon84
DelegateFilename	magick/delegate.c	75;"	d	file:
DelegateInfo	magick/delegate.h	/^} DelegateInfo;$/;"	t	typeref:struct:_DelegateInfo
DelegateInfoCompare	magick/delegate.c	/^static int DelegateInfoCompare(const void *x,const void *y)$/;"	f	file:
DelegateMap	magick/delegate.c	/^  *DelegateMap = (const char *)$/;"	v	file:
DelegatePolicyDomain	magick/policy.h	/^  DelegatePolicyDomain,$/;"	e	enum:__anon46
DelegateWarning	magick/exception.h	/^  DelegateWarning = 315,$/;"	e	enum:__anon84
DeleteCommand	magick/display.c	/^  DeleteCommand,$/;"	e	enum:__anon20	file:
DeleteImageArtifact	magick/artifact.c	/^MagickExport MagickBooleanType DeleteImageArtifact(Image *image,$/;"	f
DeleteImageArtifact	magick/methods.h	232;"	d
DeleteImageAttribute	magick/deprecate.c	/^MagickExport MagickBooleanType DeleteImageAttribute(Image *image,$/;"	f
DeleteImageAttribute	magick/methods.h	233;"	d
DeleteImageFromList	magick/list.c	/^MagickExport void DeleteImageFromList(Image **images)$/;"	f
DeleteImageFromList	magick/methods.h	234;"	d
DeleteImageList	magick/deprecate.c	/^MagickExport unsigned int DeleteImageList(Image *images,const ssize_t offset)$/;"	f
DeleteImageList	magick/methods.h	235;"	d
DeleteImageOption	magick/methods.h	236;"	d
DeleteImageOption	magick/option.c	/^MagickExport MagickBooleanType DeleteImageOption(ImageInfo *image_info,$/;"	f
DeleteImageProfile	magick/methods.h	237;"	d
DeleteImageProfile	magick/profile.c	/^MagickExport MagickBooleanType DeleteImageProfile(Image *image,const char *name)$/;"	f
DeleteImageProperty	magick/methods.h	238;"	d
DeleteImageProperty	magick/property.c	/^MagickExport MagickBooleanType DeleteImageProperty(Image *image,$/;"	f
DeleteImageRegistry	magick/methods.h	239;"	d
DeleteImageRegistry	magick/registry.c	/^MagickExport MagickBooleanType DeleteImageRegistry(const char *key)$/;"	f
DeleteImages	magick/list.c	/^MagickExport void DeleteImages(Image **images,const char *scenes,$/;"	f
DeleteImages	magick/methods.h	240;"	d
DeleteMagickRegistry	magick/deprecate.c	/^MagickExport MagickBooleanType DeleteMagickRegistry(const ssize_t id)$/;"	f
DeleteMagickRegistry	magick/methods.h	241;"	d
DeleteNodeByValueFromSplayTree	magick/methods.h	242;"	d
DeleteNodeByValueFromSplayTree	magick/splay-tree.c	/^MagickExport MagickBooleanType DeleteNodeByValueFromSplayTree($/;"	f
DeleteNodeFromSplayTree	magick/methods.h	243;"	d
DeleteNodeFromSplayTree	magick/splay-tree.c	/^MagickExport MagickBooleanType DeleteNodeFromSplayTree($/;"	f
DeltaTau	magick/segment.c	110;"	d	file:
DeprecateEvent	magick/log.h	/^  DeprecateEvent = 0x00040,$/;"	e	enum:__anon93
DeprecateOptionFlag	magick/option.h	/^  DeprecateOptionFlag       = 0x8000   \/* Deprecate option, give warning *\/$/;"	e	enum:__anon88
DepthModulate	magick/decorate.c	69;"	d	file:
DerivativeHistogram	magick/segment.c	/^static void DerivativeHistogram(const MagickRealType *histogram,$/;"	f	file:
DescribeImage	magick/deprecate.c	/^MagickExport MagickBooleanType DescribeImage(Image *image,FILE *file,$/;"	f
DescribeImage	magick/methods.h	244;"	d
DeskewImage	magick/methods.h	245;"	d
DeskewImage	magick/shear.c	/^MagickExport Image *DeskewImage(const Image *image,const double threshold,$/;"	f
DespeckleCommand	magick/display.c	/^  DespeckleCommand,$/;"	e	enum:__anon20	file:
DespeckleImage	magick/effect.c	/^MagickExport Image *DespeckleImage(const Image *image,ExceptionInfo *exception)$/;"	f
DespeckleImage	magick/methods.h	246;"	d
DespeckleImageTag	magick/effect.c	1046;"	d	file:
DespecklePreview	magick/effect.h	/^  DespecklePreview,$/;"	e	enum:__anon56
DestroyAESInfo	magick/cipher.c	/^static AESInfo *DestroyAESInfo(AESInfo *aes_info)$/;"	f	file:
DestroyAttribute	magick/deprecate.c	/^static void *DestroyAttribute(void *attribute)$/;"	f	file:
DestroyBlob	magick/blob.c	/^MagickExport void DestroyBlob(Image *image)$/;"	f
DestroyBlob	magick/methods.h	247;"	d
DestroyCLocale	magick/locale.c	/^static void DestroyCLocale(void)$/;"	f	file:
DestroyCacheView	magick/cache-view.c	/^MagickExport CacheView *DestroyCacheView(CacheView *cache_view)$/;"	f
DestroyCacheView	magick/methods.h	248;"	d
DestroyCoderNode	magick/coder.c	/^static void *DestroyCoderNode(void *coder_info)$/;"	f	file:
DestroyColorCube	magick/histogram.c	/^static void DestroyColorCube(const Image *image,NodeInfo *node_info)$/;"	f	file:
DestroyColorElement	magick/color.c	/^static void *DestroyColorElement(void *color_info)$/;"	f	file:
DestroyConfigureElement	magick/configure.c	/^static void *DestroyConfigureElement(void *configure_info)$/;"	f	file:
DestroyConfigureOptions	magick/configure.c	/^MagickExport LinkedListInfo *DestroyConfigureOptions(LinkedListInfo *options)$/;"	f
DestroyConfigureOptions	magick/methods.h	249;"	d
DestroyConstitute	magick/deprecate.c	/^MagickExport void DestroyConstitute(void)$/;"	f
DestroyContributionThreadSet	magick/resize.c	/^static ContributionInfo **DestroyContributionThreadSet($/;"	f	file:
DestroyConvert	wand/convert.c	493;"	d	file:
DestroyCubeInfo	magick/histogram.c	/^static CubeInfo *DestroyCubeInfo(const Image *image,CubeInfo *cube_info)$/;"	f	file:
DestroyCubeInfo	magick/quantize.c	/^static void DestroyCubeInfo(CubeInfo *cube_info)$/;"	f	file:
DestroyDelegate	magick/delegate.c	/^static void *DestroyDelegate(void *delegate_info)$/;"	f	file:
DestroyDistributeCache	magick/distribute-cache.c	/^static MagickBooleanType DestroyDistributeCache(SplayTreeInfo *registry,$/;"	f	file:
DestroyDistributeCacheInfo	magick/distribute-cache.c	/^MagickPrivate DistributeCacheInfo *DestroyDistributeCacheInfo($/;"	f
DestroyDrawInfo	magick/draw.c	/^MagickExport DrawInfo *DestroyDrawInfo(DrawInfo *draw_info)$/;"	f
DestroyDrawInfo	magick/methods.h	250;"	d
DestroyDrawingWand	wand/drawing-wand.c	/^  DrawingWand *(*DestroyDrawingWand) (DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DestroyDrawingWand	wand/drawing-wand.c	/^WandExport DrawingWand *DestroyDrawingWand(DrawingWand *wand)$/;"	f
DestroyEdge	magick/draw.c	/^static size_t DestroyEdge(PolygonInfo *polygon_info,$/;"	f	file:
DestroyExceptionElement	magick/exception.c	/^static void *DestroyExceptionElement(void *exception)$/;"	f	file:
DestroyExceptionInfo	magick/exception.c	/^MagickExport ExceptionInfo *DestroyExceptionInfo(ExceptionInfo *exception)$/;"	f
DestroyExceptionInfo	magick/methods.h	251;"	d
DestroyFxInfo	magick/fx.c	/^MagickExport FxInfo *DestroyFxInfo(FxInfo *fx_info)$/;"	f
DestroyFxInfo	magick/methods.h	252;"	d
DestroyFxThreadSet	magick/fx.c	/^static FxInfo **DestroyFxThreadSet(FxInfo **fx_info)$/;"	f	file:
DestroyHashmap	magick/hashmap.c	/^MagickExport HashmapInfo *DestroyHashmap(HashmapInfo *hashmap_info)$/;"	f
DestroyHashmap	magick/methods.h	253;"	d
DestroyHistogramThreadSet	magick/paint.c	/^static size_t **DestroyHistogramThreadSet(size_t **histogram)$/;"	f	file:
DestroyImage	magick/image.c	/^MagickExport Image *DestroyImage(Image *image)$/;"	f
DestroyImage	magick/methods.h	260;"	d
DestroyImageArtifacts	magick/artifact.c	/^MagickExport void DestroyImageArtifacts(Image *image)$/;"	f
DestroyImageArtifacts	magick/methods.h	254;"	d
DestroyImageAttributes	magick/deprecate.c	/^MagickExport void DestroyImageAttributes(Image *image)$/;"	f
DestroyImageAttributes	magick/methods.h	255;"	d
DestroyImageInfo	magick/image.c	/^MagickExport ImageInfo *DestroyImageInfo(ImageInfo *image_info)$/;"	f
DestroyImageInfo	magick/methods.h	256;"	d
DestroyImageList	magick/list.c	/^MagickExport Image *DestroyImageList(Image *images)$/;"	f
DestroyImageList	magick/methods.h	257;"	d
DestroyImageOptions	magick/methods.h	258;"	d
DestroyImageOptions	magick/option.c	/^MagickExport void DestroyImageOptions(ImageInfo *image_info)$/;"	f
DestroyImagePixelCache	magick/cache.c	/^static void DestroyImagePixelCache(Image *image)$/;"	f	file:
DestroyImagePixels	magick/cache.c	/^MagickExport void DestroyImagePixels(Image *image)$/;"	f
DestroyImagePixels	magick/methods.h	259;"	d
DestroyImageProfiles	magick/methods.h	261;"	d
DestroyImageProfiles	magick/profile.c	/^MagickExport void DestroyImageProfiles(Image *image)$/;"	f
DestroyImageProperties	magick/methods.h	262;"	d
DestroyImageProperties	magick/property.c	/^MagickExport void DestroyImageProperties(Image *image)$/;"	f
DestroyImageStack	wand/mogrify-private.h	31;"	d
DestroyImages	magick/deprecate.c	/^MagickExport void DestroyImages(Image *image)$/;"	f
DestroyImages	magick/methods.h	263;"	d
DestroyKernel	magick/methods.h	264;"	d
DestroyKernelInfo	magick/morphology.c	/^MagickExport KernelInfo *DestroyKernelInfo(KernelInfo *kernel)$/;"	f
DestroyLinkedList	magick/hashmap.c	/^MagickExport LinkedListInfo *DestroyLinkedList(LinkedListInfo *list_info,$/;"	f
DestroyLinkedList	magick/methods.h	265;"	d
DestroyLocaleNode	magick/locale.c	/^static void *DestroyLocaleNode(void *locale_info)$/;"	f	file:
DestroyLocaleOptions	magick/locale.c	/^MagickExport LinkedListInfo *DestroyLocaleOptions(LinkedListInfo *messages)$/;"	f
DestroyLocaleOptions	magick/methods.h	266;"	d
DestroyLogElement	magick/log.c	/^static void *DestroyLogElement(void *log_info)$/;"	f	file:
DestroyMagicElement	magick/magic.c	/^static void *DestroyMagicElement(void *magic_info)$/;"	f	file:
DestroyMagick	magick/deprecate.c	/^MagickExport void DestroyMagick(void)$/;"	f
DestroyMagick	magick/methods.h	268;"	d
DestroyMagickMemory	magick/memory.c	/^MagickExport void DestroyMagickMemory(void)$/;"	f
DestroyMagickMemory	magick/methods.h	267;"	d
DestroyMagickMutex	magick/semaphore-private.h	/^static inline void DestroyMagickMutex(void)$/;"	f
DestroyMagickNode	magick/magick.c	/^static void *DestroyMagickNode(void *magick_info)$/;"	f	file:
DestroyMagickRegistry	magick/deprecate.c	/^MagickExport void DestroyMagickRegistry(void)$/;"	f
DestroyMagickRegistry	magick/methods.h	269;"	d
DestroyMagickWand	wand/magick-wand.c	/^WandExport MagickWand *DestroyMagickWand(MagickWand *wand)$/;"	f
DestroyMatrixInfo	magick/matrix.c	/^MagickExport MatrixInfo *DestroyMatrixInfo(MatrixInfo *matrix_info)$/;"	f
DestroyMimeElement	magick/mime.c	/^static void *DestroyMimeElement(void *mime_info)$/;"	f	file:
DestroyModuleList	magick/module.c	/^MagickExport void DestroyModuleList(void)$/;"	f
DestroyModuleNode	magick/module.c	/^static void *DestroyModuleNode(void *module_info)$/;"	f	file:
DestroyMogrify	wand/mogrify.c	3713;"	d	file:
DestroyMontageInfo	magick/methods.h	270;"	d
DestroyMontageInfo	magick/montage.c	/^MagickExport MontageInfo *DestroyMontageInfo(MontageInfo *montage_info)$/;"	f
DestroyOptions	magick/configure.c	/^static void *DestroyOptions(void *option)$/;"	f	file:
DestroyOptions	magick/locale.c	/^static void *DestroyOptions(void *message)$/;"	f	file:
DestroyPixelCache	magick/cache.c	/^MagickExport Cache DestroyPixelCache(Cache cache)$/;"	f
DestroyPixelCache	magick/methods.h	272;"	d
DestroyPixelCacheNexus	magick/cache.c	/^MagickExport NexusInfo **DestroyPixelCacheNexus(NexusInfo **nexus_info,$/;"	f
DestroyPixelCacheNexus	magick/methods.h	271;"	d
DestroyPixelHandler	magick/cache-private.h	/^  (*DestroyPixelHandler)(Image *);$/;"	t
DestroyPixelIterator	wand/pixel-iterator.c	/^WandExport PixelIterator *DestroyPixelIterator(PixelIterator *iterator)$/;"	f
DestroyPixelList	magick/statistic.c	/^static PixelList *DestroyPixelList(PixelList *pixel_list)$/;"	f	file:
DestroyPixelListThreadSet	magick/statistic.c	/^static PixelList **DestroyPixelListThreadSet(PixelList **pixel_list)$/;"	f	file:
DestroyPixelStream	magick/stream.c	/^static void DestroyPixelStream(Image *image)$/;"	f	file:
DestroyPixelThreadSet	magick/profile.c	/^static unsigned short **DestroyPixelThreadSet(unsigned short **pixels)$/;"	f	file:
DestroyPixelThreadSet	magick/quantize.c	/^static RealPixelPacket **DestroyPixelThreadSet(RealPixelPacket **pixels)$/;"	f	file:
DestroyPixelThreadSet	magick/statistic.c	/^static MagickPixelPacket **DestroyPixelThreadSet(MagickPixelPacket **pixels)$/;"	f	file:
DestroyPixelWand	wand/pixel-wand.c	/^WandExport PixelWand *DestroyPixelWand(PixelWand *wand)$/;"	f
DestroyPixelWands	wand/pixel-wand.c	/^WandExport PixelWand **DestroyPixelWands(PixelWand **wand,$/;"	f
DestroyPolicyElement	magick/policy.c	/^static void *DestroyPolicyElement(void *policy_info)$/;"	f	file:
DestroyPolygonInfo	magick/draw.c	/^static PolygonInfo *DestroyPolygonInfo(PolygonInfo *polygon_info)$/;"	f	file:
DestroyPolygonThreadSet	magick/draw.c	/^static PolygonInfo **DestroyPolygonThreadSet(PolygonInfo **polygon_info)$/;"	f	file:
DestroyProfile	magick/profile.c	/^static void *DestroyProfile(void *profile)$/;"	f	file:
DestroyQuantizeInfo	magick/methods.h	273;"	d
DestroyQuantizeInfo	magick/quantize.c	/^MagickExport QuantizeInfo *DestroyQuantizeInfo(QuantizeInfo *quantize_info)$/;"	f
DestroyQuantumInfo	magick/methods.h	274;"	d
DestroyQuantumInfo	magick/quantum.c	/^MagickExport QuantumInfo *DestroyQuantumInfo(QuantumInfo *quantum_info)$/;"	f
DestroyQuantumPixels	magick/quantum.c	/^static void DestroyQuantumPixels(QuantumInfo *quantum_info)$/;"	f	file:
DestroyRandomInfo	magick/methods.h	275;"	d
DestroyRandomInfo	magick/random.c	/^MagickExport RandomInfo *DestroyRandomInfo(RandomInfo *random_info)$/;"	f
DestroyRandomInfoThreadSet	magick/random-private.h	/^static inline RandomInfo **DestroyRandomInfoThreadSet($/;"	f
DestroyRegistryNode	magick/registry.c	/^static void *DestroyRegistryNode(void *registry_info)$/;"	f	file:
DestroyResampleFilter	magick/methods.h	276;"	d
DestroyResampleFilter	magick/resample.c	/^MagickExport ResampleFilter *DestroyResampleFilter($/;"	f
DestroyResampleFilterThreadSet	magick/resample-private.h	/^static inline ResampleFilter **DestroyResampleFilterThreadSet($/;"	f
DestroyResizeFilter	magick/methods.h	277;"	d
DestroyResizeFilter	magick/resize.c	/^MagickExport ResizeFilter *DestroyResizeFilter(ResizeFilter *resize_filter)$/;"	f
DestroySemaphoreInfo	magick/methods.h	278;"	d
DestroySemaphoreInfo	magick/semaphore.c	/^MagickExport void DestroySemaphoreInfo(SemaphoreInfo **semaphore_info)$/;"	f
DestroySignatureInfo	magick/methods.h	279;"	d
DestroySignatureInfo	magick/signature.c	/^MagickExport SignatureInfo *DestroySignatureInfo(SignatureInfo *signature_info)$/;"	f
DestroySplayTree	magick/methods.h	280;"	d
DestroySplayTree	magick/splay-tree.c	/^MagickExport SplayTreeInfo *DestroySplayTree(SplayTreeInfo *splay_tree)$/;"	f
DestroyStreamInfo	magick/methods.h	281;"	d
DestroyStreamInfo	magick/stream.c	/^MagickExport StreamInfo *DestroyStreamInfo(StreamInfo *stream_info)$/;"	f
DestroyString	magick/methods.h	284;"	d
DestroyString	magick/string.c	/^MagickExport char *DestroyString(char *string)$/;"	f
DestroyStringInfo	magick/methods.h	282;"	d
DestroyStringInfo	magick/string.c	/^MagickExport StringInfo *DestroyStringInfo(StringInfo *string_info)$/;"	f
DestroyStringList	magick/methods.h	283;"	d
DestroyStringList	magick/string.c	/^MagickExport char **DestroyStringList(char **list)$/;"	f
DestroyTemporaryResources	magick/resource.c	/^static void *DestroyTemporaryResources(void *temporary_resource)$/;"	f	file:
DestroyThresholdMap	magick/methods.h	285;"	d
DestroyThresholdMap	magick/threshold.c	/^MagickExport ThresholdMap *DestroyThresholdMap(ThresholdMap *map)$/;"	f
DestroyTimerInfo	magick/methods.h	286;"	d
DestroyTimerInfo	magick/timer.c	/^MagickExport TimerInfo *DestroyTimerInfo(TimerInfo *timer_info)$/;"	f
DestroyTokenInfo	magick/methods.h	287;"	d
DestroyTokenInfo	magick/token.c	/^MagickExport TokenInfo *DestroyTokenInfo(TokenInfo *token_info)$/;"	f
DestroyTransformThreadSet	magick/profile.c	/^static cmsHTRANSFORM *DestroyTransformThreadSet(cmsHTRANSFORM *transform)$/;"	f	file:
DestroyTypeNode	magick/type.c	/^static void *DestroyTypeNode(void *type_info)$/;"	f	file:
DestroyWandIds	wand/wand.c	/^WandExport void DestroyWandIds(void)$/;"	f
DestroyXMLTree	magick/methods.h	288;"	d
DestroyXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *DestroyXMLTree(XMLTreeInfo *xml_info)$/;"	f
DestroyXMLTreeAttributes	magick/xml-tree.c	/^static char **DestroyXMLTreeAttributes(char **attributes)$/;"	f	file:
DestroyXMLTreeChild	magick/xml-tree.c	/^static void DestroyXMLTreeChild(XMLTreeInfo *xml_info)$/;"	f	file:
DestroyXMLTreeOrdered	magick/xml-tree.c	/^static void DestroyXMLTreeOrdered(XMLTreeInfo *xml_info)$/;"	f	file:
DestroyXMLTreeRoot	magick/xml-tree.c	/^static void DestroyXMLTreeRoot(XMLTreeInfo *xml_info)$/;"	f	file:
DestroyXResources	magick/methods.h	289;"	d
DestroyXWidget	magick/methods.h	290;"	d
DetachBlob	magick/blob.c	/^MagickExport unsigned char *DetachBlob(BlobInfo *blob_info)$/;"	f
DetachBlob	magick/methods.h	291;"	d
DiagonalBitmap	magick/display.c	/^  DiagonalBitmap[] =$/;"	v	file:
DiagonalHeight	magick/display.c	1510;"	d	file:
DiagonalWidth	magick/display.c	1509;"	d	file:
DiagonalsKernel	magick/morphology.h	/^  DiagonalsKernel,$/;"	e	enum:__anon69
DiamondKernel	magick/morphology.h	/^  DiamondKernel,      \/* Shape Kernels *\/$/;"	e	enum:__anon69
Difference	magick/composite.c	/^static inline MagickRealType Difference(const MagickRealType p,$/;"	f	file:
DifferenceCompositeOp	magick/composite.h	/^  DifferenceCompositeOp,$/;"	e	enum:__anon68
DilateIntensityMorphology	magick/morphology.h	/^  DilateIntensityMorphology,    \/* Pixel Pick using GreyScale Dialate *\/$/;"	e	enum:__anon70
DilateMorphology	magick/morphology.h	/^  DilateMorphology,             \/* Maximum Value in Neighbourhood *\/$/;"	e	enum:__anon70
DirectClass	magick/magick-type.h	/^  DirectClass,$/;"	e	enum:__anon10
DirectToColormapImage	magick/quantize.c	/^static MagickBooleanType DirectToColormapImage(Image *image,$/;"	f	file:
DirectionOptions	magick/option.c	/^  DirectionOptions[] =$/;"	v	file:
DirectionType	magick/draw.h	/^} DirectionType;$/;"	t	typeref:enum:__anon37
DirectoryListSeparator	magick/studio.h	257;"	d
DirectoryListSeparator	magick/studio.h	269;"	d
DirectoryListSeparator	magick/studio.h	283;"	d
DirectoryListSeparator	magick/studio.h	296;"	d
DirectoryListSeparator	magick/studio.h	317;"	d
DirectoryListSeparator	wand/studio.h	259;"	d
DirectoryListSeparator	wand/studio.h	271;"	d
DirectoryListSeparator	wand/studio.h	285;"	d
DirectoryListSeparator	wand/studio.h	298;"	d
DirectoryListSeparator	wand/studio.h	319;"	d
DirectorySeparator	magick/studio.h	256;"	d
DirectorySeparator	magick/studio.h	268;"	d
DirectorySeparator	magick/studio.h	282;"	d
DirectorySeparator	magick/studio.h	295;"	d
DirectorySeparator	magick/studio.h	316;"	d
DirectorySeparator	wand/studio.h	258;"	d
DirectorySeparator	wand/studio.h	270;"	d
DirectorySeparator	wand/studio.h	284;"	d
DirectorySeparator	wand/studio.h	297;"	d
DirectorySeparator	wand/studio.h	318;"	d
DisableMSCWarning	magick/studio.h	367;"	d
DisableMSCWarning	magick/studio.h	371;"	d
DisableMSCWarning	wand/studio.h	359;"	d
DisableMSCWarning	wand/studio.h	363;"	d
DisassociateImageStream	magick/image.c	/^MagickExport void DisassociateImageStream(Image *image)$/;"	f
DisassociateImageStream	magick/methods.h	292;"	d
DisassociatedQuantumAlpha	magick/quantum.h	/^  DisassociatedQuantumAlpha$/;"	e	enum:__anon5
DiscardBlobBytes	magick/blob.c	/^MagickExport MagickBooleanType DiscardBlobBytes(Image *image,$/;"	f
DiskCache	magick/cache.h	/^  DiskCache,$/;"	e	enum:__anon8
DiskKernel	magick/morphology.h	/^  DiskKernel,$/;"	e	enum:__anon69
DiskResource	magick/resource_.h	/^  DiskResource,$/;"	e	enum:__anon65
DispatchImage	magick/deprecate.c	/^MagickExport unsigned int DispatchImage(const Image *image,const ssize_t x_offset,$/;"	f
DispatchImage	magick/methods.h	293;"	d
DisplaceCompositeOp	magick/composite.h	/^  DisplaceCompositeOp,$/;"	e	enum:__anon68
DisplayGamma	magick/colorspace.c	559;"	d	file:
DisplayHelp	magick/display.c	/^  *DisplayHelp[] =$/;"	v	file:
DisplayImages	magick/display.c	/^MagickExport MagickBooleanType DisplayImages(const ImageInfo *image_info,$/;"	f
DisplayImages	magick/methods.h	294;"	d
DisposeImages	magick/layer.c	/^MagickExport Image *DisposeImages(const Image *images,ExceptionInfo *exception)$/;"	f
DisposeImages	magick/methods.h	295;"	d
DisposeLayer	magick/layer.h	/^  DisposeLayer,$/;"	e	enum:__anon72
DisposeOptions	magick/option.c	/^  DisposeOptions[] =$/;"	v	file:
DisposeType	magick/layer.h	/^} DisposeType;$/;"	t	typeref:enum:__anon71
DissolveCompositeOp	magick/composite.h	/^  DissolveCompositeOp,$/;"	e	enum:__anon68
DistanceMorphology	magick/morphology.h	/^  DistanceMorphology,           \/* Add Kernel Value, take Minimum *\/$/;"	e	enum:__anon70
DistortCompositeOp	magick/composite.h	/^  DistortCompositeOp,$/;"	e	enum:__anon68
DistortImage	magick/distort.c	/^MagickExport Image *DistortImage(const Image *image,DistortImageMethod method,$/;"	f
DistortImage	magick/methods.h	296;"	d
DistortImageMethod	magick/distort.h	/^} DistortImageMethod;$/;"	t	typeref:enum:__anon50
DistortImageTag	magick/distort.c	1690;"	d	file:
DistortOptions	magick/option.c	/^  DistortOptions[] =$/;"	v	file:
DistortResizeImage	magick/distort.c	/^MagickExport Image *DistortResizeImage(const Image *image,$/;"	f
DistortResizeImageTag	magick/distort.c	1480;"	d	file:
DistributeCacheInfo	magick/distribute-cache-private.h	/^} DistributeCacheInfo;$/;"	t	typeref:struct:_DistributeCacheInfo
DistributePixelCacheClient	magick/distribute-cache.c	/^static void *DistributePixelCacheClient(void *socket)$/;"	f	file:
DistributePixelCacheServer	magick/distribute-cache.c	/^MagickExport void DistributePixelCacheServer(const int port,$/;"	f
DistributedCache	magick/cache.h	/^  DistributedCache$/;"	e	enum:__anon8
DitherImage	magick/quantize.c	/^static MagickBooleanType DitherImage(Image *image,CubeInfo *cube_info)$/;"	f	file:
DitherImageTag	magick/quantize.c	1455;"	d	file:
DitherImageTag	magick/quantize.c	1736;"	d	file:
DitherImageTag	magick/threshold.c	1440;"	d	file:
DitherMatrix	magick/cache.c	/^  DitherMatrix[64] =$/;"	v	file:
DitherMethod	magick/quantize.h	/^} DitherMethod;$/;"	t	typeref:enum:__anon66
DitherOptions	magick/option.c	/^  DitherOptions[] =$/;"	v	file:
DitherVirtualPixelMethod	magick/cache-view.h	/^  DitherVirtualPixelMethod,$/;"	e	enum:__anon63
DitherX	magick/cache.c	/^static inline ssize_t DitherX(const ssize_t x,const size_t columns)$/;"	f	file:
DitherY	magick/cache.c	/^static inline ssize_t DitherY(const ssize_t y,const size_t rows)$/;"	f	file:
Divide	magick/composite.c	/^static MagickRealType Divide(const MagickRealType Sca,const MagickRealType Sa,$/;"	f	file:
DivideComplexOperator	magick/fourier.h	/^  DivideComplexOperator,$/;"	e	enum:__anon2
DivideCompositeOp	magick/composite.h	107;"	d
DivideDstCompositeOp	magick/composite.h	/^  DivideDstCompositeOp,$/;"	e	enum:__anon68
DivideEvaluateOperator	magick/statistic.h	/^  DivideEvaluateOperator,$/;"	e	enum:__anon89
DivideSrcCompositeOp	magick/composite.h	/^  DivideSrcCompositeOp,$/;"	e	enum:__anon68
DllMain	magick/nt-base.c	/^BOOL WINAPI DllMain(HINSTANCE handle,DWORD reason,LPVOID lpvReserved)$/;"	f
DoGKernel	magick/morphology.h	/^  DoGKernel,$/;"	e	enum:__anon69
DoublePixel	magick/constitute.h	/^  DoublePixel,$/;"	e	enum:__anon64
DoublePixelPacket	magick/pixel.h	/^} DoublePixelPacket;$/;"	t	typeref:struct:_DoublePixelPacket
DoubleSizeCommand	magick/display.c	/^  DoubleSizeCommand,$/;"	e	enum:__anon20	file:
Downscale	magick/deprecate.h	47;"	d
DrawAffine	wand/drawing-wand.c	/^  void (*DrawAffine)(DrawingWand *,const AffineMatrix *);$/;"	m	struct:_DrawVTable	file:
DrawAffine	wand/drawing-wand.c	/^WandExport void DrawAffine(DrawingWand *wand,const AffineMatrix *affine)$/;"	f
DrawAffineImage	magick/draw.c	/^MagickExport MagickBooleanType DrawAffineImage(Image *image,$/;"	f
DrawAffineImage	magick/methods.h	297;"	d
DrawAllocateWand	wand/drawing-wand.c	/^WandExport DrawingWand *DrawAllocateWand(const DrawInfo *draw_info,Image *image)$/;"	f
DrawAnnotation	wand/drawing-wand.c	/^  void (*DrawAnnotation)(DrawingWand *,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawAnnotation	wand/drawing-wand.c	/^WandExport void DrawAnnotation(DrawingWand *wand,const double x,const double y,$/;"	f
DrawArc	wand/drawing-wand.c	/^  void (*DrawArc)(DrawingWand *,const double,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawArc	wand/drawing-wand.c	/^WandExport void DrawArc(DrawingWand *wand,const double sx,const double sy,$/;"	f
DrawBezier	wand/drawing-wand.c	/^  void (*DrawBezier)(DrawingWand *,const size_t,const PointInfo *);$/;"	m	struct:_DrawVTable	file:
DrawBezier	wand/drawing-wand.c	/^WandExport void DrawBezier(DrawingWand *wand,$/;"	f
DrawBoundingRectangles	magick/draw.c	/^static void DrawBoundingRectangles(Image *image,const DrawInfo *draw_info,$/;"	f	file:
DrawCircle	wand/drawing-wand.c	/^  void (*DrawCircle)(DrawingWand *,const double,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawCircle	wand/drawing-wand.c	/^WandExport void DrawCircle(DrawingWand *wand,const double ox,const double oy,$/;"	f
DrawClearException	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawClearException(DrawingWand *wand)$/;"	f
DrawClipPath	magick/draw.c	/^MagickExport MagickBooleanType DrawClipPath(Image *image,$/;"	f
DrawClipPath	magick/methods.h	298;"	d
DrawColor	wand/drawing-wand.c	/^  void (*DrawColor)(DrawingWand *,const double,const double,const PaintMethod);$/;"	m	struct:_DrawVTable	file:
DrawColor	wand/drawing-wand.c	/^WandExport void DrawColor(DrawingWand *wand,const double x,const double y,$/;"	f
DrawColorCommand	magick/display.c	/^  DrawColorCommand,$/;"	e	enum:__anon21	file:
DrawCommand	magick/display.c	/^  DrawCommand,$/;"	e	enum:__anon20	file:
DrawComment	wand/drawing-wand.c	/^  void (*DrawComment)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawComment	wand/drawing-wand.c	/^WandExport void DrawComment(DrawingWand *wand,const char *comment)$/;"	f
DrawComposite	wand/drawing-wand.c	/^  MagickBooleanType (*DrawComposite)(DrawingWand *,const CompositeOperator,$/;"	m	struct:_DrawVTable	file:
DrawComposite	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawComposite(DrawingWand *wand,$/;"	f
DrawContext	wand/deprecate.h	/^  *DrawContext;$/;"	t	typeref:struct:_DrawingWand
DrawDashPolygon	magick/draw.c	/^static MagickBooleanType DrawDashPolygon(const DrawInfo *draw_info,$/;"	f	file:
DrawDismissCommand	magick/display.c	/^  DrawDismissCommand,$/;"	e	enum:__anon21	file:
DrawElementCommand	magick/display.c	/^  DrawElementCommand,$/;"	e	enum:__anon21	file:
DrawEllipse	wand/drawing-wand.c	/^  void (*DrawEllipse)(DrawingWand *,const double,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawEllipse	wand/drawing-wand.c	/^WandExport void DrawEllipse(DrawingWand *wand,const double ox,const double oy,$/;"	f
DrawEpsilon	magick/draw.c	5799;"	d	file:
DrawEpsilonReciprocal	magick/draw.c	/^static inline double DrawEpsilonReciprocal(const double x)$/;"	f	file:
DrawError	magick/exception.h	/^  DrawError = 460,$/;"	e	enum:__anon84
DrawEvent	magick/log.h	/^  DrawEvent = 0x00080,$/;"	e	enum:__anon93
DrawFatalError	magick/exception.h	/^  DrawFatalError = 760,$/;"	e	enum:__anon84
DrawGetBorderColor	wand/drawing-wand.c	/^WandExport void DrawGetBorderColor(const DrawingWand *wand,$/;"	f
DrawGetClipPath	wand/drawing-wand.c	/^WandExport char *DrawGetClipPath(const DrawingWand *wand)$/;"	f
DrawGetClipRule	wand/drawing-wand.c	/^WandExport FillRule DrawGetClipRule(const DrawingWand *wand)$/;"	f
DrawGetClipUnits	wand/drawing-wand.c	/^WandExport ClipPathUnits DrawGetClipUnits(const DrawingWand *wand)$/;"	f
DrawGetException	wand/drawing-wand.c	/^WandExport char *DrawGetException(const DrawingWand *wand,$/;"	f
DrawGetExceptionType	wand/drawing-wand.c	/^WandExport ExceptionType DrawGetExceptionType(const DrawingWand *wand)$/;"	f
DrawGetFillColor	wand/drawing-wand.c	/^WandExport void DrawGetFillColor(const DrawingWand *wand,PixelWand *fill_color)$/;"	f
DrawGetFillOpacity	wand/drawing-wand.c	/^WandExport double DrawGetFillOpacity(const DrawingWand *wand)$/;"	f
DrawGetFillRule	wand/drawing-wand.c	/^WandExport FillRule DrawGetFillRule(const DrawingWand *wand)$/;"	f
DrawGetFont	wand/drawing-wand.c	/^WandExport char *DrawGetFont(const DrawingWand *wand)$/;"	f
DrawGetFontFamily	wand/drawing-wand.c	/^WandExport char *DrawGetFontFamily(const DrawingWand *wand)$/;"	f
DrawGetFontResolution	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawGetFontResolution(const DrawingWand *wand,$/;"	f
DrawGetFontSize	wand/drawing-wand.c	/^WandExport double DrawGetFontSize(const DrawingWand *wand)$/;"	f
DrawGetFontStretch	wand/drawing-wand.c	/^WandExport StretchType DrawGetFontStretch(const DrawingWand *wand)$/;"	f
DrawGetFontStyle	wand/drawing-wand.c	/^WandExport StyleType DrawGetFontStyle(const DrawingWand *wand)$/;"	f
DrawGetFontWeight	wand/drawing-wand.c	/^WandExport size_t DrawGetFontWeight(const DrawingWand *wand)$/;"	f
DrawGetGravity	wand/drawing-wand.c	/^WandExport GravityType DrawGetGravity(const DrawingWand *wand)$/;"	f
DrawGetOpacity	wand/drawing-wand.c	/^WandExport double DrawGetOpacity(const DrawingWand *wand)$/;"	f
DrawGetStrokeAntialias	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawGetStrokeAntialias(const DrawingWand *wand)$/;"	f
DrawGetStrokeColor	wand/drawing-wand.c	/^WandExport void DrawGetStrokeColor(const DrawingWand *wand,$/;"	f
DrawGetStrokeDashArray	wand/drawing-wand.c	/^WandExport double *DrawGetStrokeDashArray(const DrawingWand *wand,$/;"	f
DrawGetStrokeDashOffset	wand/drawing-wand.c	/^WandExport double DrawGetStrokeDashOffset(const DrawingWand *wand)$/;"	f
DrawGetStrokeLineCap	wand/drawing-wand.c	/^WandExport LineCap DrawGetStrokeLineCap(const DrawingWand *wand)$/;"	f
DrawGetStrokeLineJoin	wand/drawing-wand.c	/^WandExport LineJoin DrawGetStrokeLineJoin(const DrawingWand *wand)$/;"	f
DrawGetStrokeMiterLimit	wand/drawing-wand.c	/^WandExport size_t DrawGetStrokeMiterLimit(const DrawingWand *wand)$/;"	f
DrawGetStrokeOpacity	wand/drawing-wand.c	/^WandExport double DrawGetStrokeOpacity(const DrawingWand *wand)$/;"	f
DrawGetStrokeWidth	wand/drawing-wand.c	/^WandExport double DrawGetStrokeWidth(const DrawingWand *wand)$/;"	f
DrawGetTextAlignment	wand/drawing-wand.c	/^WandExport AlignType DrawGetTextAlignment(const DrawingWand *wand)$/;"	f
DrawGetTextAntialias	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawGetTextAntialias(const DrawingWand *wand)$/;"	f
DrawGetTextDecoration	wand/drawing-wand.c	/^WandExport DecorationType DrawGetTextDecoration(const DrawingWand *wand)$/;"	f
DrawGetTextDirection	wand/drawing-wand.c	/^WandExport DirectionType DrawGetTextDirection(const DrawingWand *wand)$/;"	f
DrawGetTextEncoding	wand/drawing-wand.c	/^WandExport char *DrawGetTextEncoding(const DrawingWand *wand)$/;"	f
DrawGetTextInterlineSpacing	wand/drawing-wand.c	/^WandExport double DrawGetTextInterlineSpacing(DrawingWand *wand)$/;"	f
DrawGetTextInterwordSpacing	wand/drawing-wand.c	/^  double (*DrawGetTextInterwordSpacing)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawGetTextInterwordSpacing	wand/drawing-wand.c	/^WandExport double DrawGetTextInterwordSpacing(DrawingWand *wand)$/;"	f
DrawGetTextKerning	wand/drawing-wand.c	/^  double (*DrawGetTextKerning)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawGetTextKerning	wand/drawing-wand.c	/^WandExport double DrawGetTextKerning(DrawingWand *wand)$/;"	f
DrawGetTextUnderColor	wand/drawing-wand.c	/^WandExport void DrawGetTextUnderColor(const DrawingWand *wand,$/;"	f
DrawGetVectorGraphics	wand/drawing-wand.c	/^WandExport char *DrawGetVectorGraphics(DrawingWand *wand)$/;"	f
DrawGradientImage	magick/draw.c	/^MagickExport MagickBooleanType DrawGradientImage(Image *image,$/;"	f
DrawGradientImage	magick/methods.h	299;"	d
DrawHelpCommand	magick/display.c	/^  DrawHelpCommand,$/;"	e	enum:__anon21	file:
DrawImage	magick/draw.c	/^MagickExport MagickBooleanType DrawImage(Image *image,const DrawInfo *draw_info)$/;"	f
DrawImage	magick/methods.h	300;"	d
DrawInfo	magick/draw.h	/^} DrawInfo;$/;"	t	typeref:struct:_DrawInfo
DrawInfoOptionFlag	magick/option.h	/^  DrawInfoOptionFlag        = 0x0004,  \/* Sets DrawInfo, no image needed *\/$/;"	e	enum:__anon88
DrawLine	wand/drawing-wand.c	/^  void (*DrawLine)(DrawingWand *,const double,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawLine	wand/drawing-wand.c	/^WandExport void DrawLine(DrawingWand *wand,const double sx,const double sy,$/;"	f
DrawMatte	wand/drawing-wand.c	/^  void (*DrawMatte)(DrawingWand *,const double,const double,const PaintMethod);$/;"	m	struct:_DrawVTable	file:
DrawMatte	wand/drawing-wand.c	/^WandExport void DrawMatte(DrawingWand *wand,const double x,const double y,$/;"	f
DrawPathClose	wand/drawing-wand.c	/^  void (*DrawPathClose)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPathClose	wand/drawing-wand.c	/^WandExport void DrawPathClose(DrawingWand *wand)$/;"	f
DrawPathCurveTo	wand/drawing-wand.c	/^static void DrawPathCurveTo(DrawingWand *wand,const PathMode mode,$/;"	f	file:
DrawPathCurveToAbsolute	wand/drawing-wand.c	/^  void (*DrawPathCurveToAbsolute)(DrawingWand *,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathCurveToAbsolute(DrawingWand *wand,const double x1,$/;"	f
DrawPathCurveToQuadraticBezier	wand/drawing-wand.c	/^static void DrawPathCurveToQuadraticBezier(DrawingWand *wand,$/;"	f	file:
DrawPathCurveToQuadraticBezierAbsolute	wand/drawing-wand.c	/^  void (*DrawPathCurveToQuadraticBezierAbsolute)(DrawingWand *,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToQuadraticBezierAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathCurveToQuadraticBezierAbsolute(DrawingWand *wand,$/;"	f
DrawPathCurveToQuadraticBezierRelative	wand/drawing-wand.c	/^  void (*DrawPathCurveToQuadraticBezierRelative)(DrawingWand *,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToQuadraticBezierRelative	wand/drawing-wand.c	/^WandExport void DrawPathCurveToQuadraticBezierRelative(DrawingWand *wand,$/;"	f
DrawPathCurveToQuadraticBezierSmooth	wand/drawing-wand.c	/^static void DrawPathCurveToQuadraticBezierSmooth(DrawingWand *wand,$/;"	f	file:
DrawPathCurveToQuadraticBezierSmoothAbsolute	wand/drawing-wand.c	/^  void (*DrawPathCurveToQuadraticBezierSmoothAbsolute)(DrawingWand *,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToQuadraticBezierSmoothAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathCurveToQuadraticBezierSmoothAbsolute(DrawingWand *wand,$/;"	f
DrawPathCurveToQuadraticBezierSmoothRelative	wand/drawing-wand.c	/^  void (*DrawPathCurveToQuadraticBezierSmoothRelative)(DrawingWand *,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToQuadraticBezierSmoothRelative	wand/drawing-wand.c	/^WandExport void DrawPathCurveToQuadraticBezierSmoothRelative(DrawingWand *wand,$/;"	f
DrawPathCurveToRelative	wand/drawing-wand.c	/^  void (*DrawPathCurveToRelative)(DrawingWand *,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToRelative	wand/drawing-wand.c	/^WandExport void DrawPathCurveToRelative(DrawingWand *wand,const double x1,$/;"	f
DrawPathCurveToSmooth	wand/drawing-wand.c	/^static void DrawPathCurveToSmooth(DrawingWand *wand,const PathMode mode,$/;"	f	file:
DrawPathCurveToSmoothAbsolute	wand/drawing-wand.c	/^  void (*DrawPathCurveToSmoothAbsolute)(DrawingWand *,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToSmoothAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathCurveToSmoothAbsolute(DrawingWand *wand,const double x2,$/;"	f
DrawPathCurveToSmoothRelative	wand/drawing-wand.c	/^  void (*DrawPathCurveToSmoothRelative)(DrawingWand *,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathCurveToSmoothRelative	wand/drawing-wand.c	/^WandExport void DrawPathCurveToSmoothRelative(DrawingWand *wand,const double x2,$/;"	f
DrawPathEllipticArc	wand/drawing-wand.c	/^static void DrawPathEllipticArc(DrawingWand *wand, const PathMode mode,$/;"	f	file:
DrawPathEllipticArcAbsolute	wand/drawing-wand.c	/^  void (*DrawPathEllipticArcAbsolute)(DrawingWand *,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathEllipticArcAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathEllipticArcAbsolute(DrawingWand *wand,const double rx,$/;"	f
DrawPathEllipticArcRelative	wand/drawing-wand.c	/^  void (*DrawPathEllipticArcRelative)(DrawingWand *,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawPathEllipticArcRelative	wand/drawing-wand.c	/^WandExport void DrawPathEllipticArcRelative(DrawingWand *wand,const double rx,$/;"	f
DrawPathFinish	wand/drawing-wand.c	/^  void (*DrawPathFinish)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPathFinish	wand/drawing-wand.c	/^WandExport void DrawPathFinish(DrawingWand *wand)$/;"	f
DrawPathLineTo	wand/drawing-wand.c	/^static void DrawPathLineTo(DrawingWand *wand,const PathMode mode,$/;"	f	file:
DrawPathLineToAbsolute	wand/drawing-wand.c	/^  void (*DrawPathLineToAbsolute)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathLineToAbsolute(DrawingWand *wand,const double x,$/;"	f
DrawPathLineToHorizontal	wand/drawing-wand.c	/^static void DrawPathLineToHorizontal(DrawingWand *wand,const PathMode mode,$/;"	f	file:
DrawPathLineToHorizontalAbsolute	wand/drawing-wand.c	/^  void (*DrawPathLineToHorizontalAbsolute)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToHorizontalAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathLineToHorizontalAbsolute(DrawingWand *wand,$/;"	f
DrawPathLineToHorizontalRelative	wand/drawing-wand.c	/^  void (*DrawPathLineToHorizontalRelative)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToHorizontalRelative	wand/drawing-wand.c	/^WandExport void DrawPathLineToHorizontalRelative(DrawingWand *wand,$/;"	f
DrawPathLineToRelative	wand/drawing-wand.c	/^  void (*DrawPathLineToRelative)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToRelative	wand/drawing-wand.c	/^WandExport void DrawPathLineToRelative(DrawingWand *wand,const double x,$/;"	f
DrawPathLineToVertical	wand/drawing-wand.c	/^static void DrawPathLineToVertical(DrawingWand *wand,const PathMode mode,$/;"	f	file:
DrawPathLineToVerticalAbsolute	wand/drawing-wand.c	/^  void (*DrawPathLineToVerticalAbsolute)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToVerticalAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathLineToVerticalAbsolute(DrawingWand *wand,const double y)$/;"	f
DrawPathLineToVerticalRelative	wand/drawing-wand.c	/^  void (*DrawPathLineToVerticalRelative)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathLineToVerticalRelative	wand/drawing-wand.c	/^WandExport void DrawPathLineToVerticalRelative(DrawingWand *wand,const double y)$/;"	f
DrawPathMoveTo	wand/drawing-wand.c	/^static void DrawPathMoveTo(DrawingWand *wand,const PathMode mode,const double x,$/;"	f	file:
DrawPathMoveToAbsolute	wand/drawing-wand.c	/^  void (*DrawPathMoveToAbsolute)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathMoveToAbsolute	wand/drawing-wand.c	/^WandExport void DrawPathMoveToAbsolute(DrawingWand *wand,const double x,$/;"	f
DrawPathMoveToRelative	wand/drawing-wand.c	/^  void (*DrawPathMoveToRelative)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawPathMoveToRelative	wand/drawing-wand.c	/^WandExport void DrawPathMoveToRelative(DrawingWand *wand,const double x,$/;"	f
DrawPathStart	wand/drawing-wand.c	/^  void (*DrawPathStart)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPathStart	wand/drawing-wand.c	/^WandExport void DrawPathStart(DrawingWand *wand)$/;"	f
DrawPatternPath	magick/draw.c	/^MagickExport MagickBooleanType DrawPatternPath(Image *image,$/;"	f
DrawPatternPath	magick/methods.h	301;"	d
DrawPoint	wand/drawing-wand.c	/^  void (*DrawPoint)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawPoint	wand/drawing-wand.c	/^WandExport void DrawPoint(DrawingWand *wand,const double x,const double y)$/;"	f
DrawPolygon	wand/drawing-wand.c	/^  void (*DrawPolygon)(DrawingWand *,const size_t,const PointInfo *);$/;"	m	struct:_DrawVTable	file:
DrawPolygon	wand/drawing-wand.c	/^WandExport void DrawPolygon(DrawingWand *wand,$/;"	f
DrawPolygonPrimitive	magick/draw.c	/^static MagickBooleanType DrawPolygonPrimitive(Image *image,$/;"	f	file:
DrawPolyline	wand/drawing-wand.c	/^  void (*DrawPolyline)(DrawingWand *,const size_t,const PointInfo *);$/;"	m	struct:_DrawVTable	file:
DrawPolyline	wand/drawing-wand.c	/^WandExport void DrawPolyline(DrawingWand *wand,$/;"	f
DrawPopClipPath	wand/drawing-wand.c	/^  void (*DrawPopClipPath)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPopClipPath	wand/drawing-wand.c	/^WandExport void DrawPopClipPath(DrawingWand *wand)$/;"	f
DrawPopDefs	wand/drawing-wand.c	/^  void (*DrawPopDefs)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPopDefs	wand/drawing-wand.c	/^WandExport void DrawPopDefs(DrawingWand *wand)$/;"	f
DrawPopPattern	wand/drawing-wand.c	/^  MagickBooleanType (*DrawPopPattern)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPopPattern	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawPopPattern(DrawingWand *wand)$/;"	f
DrawPrimitive	magick/draw.c	/^MagickExport MagickBooleanType DrawPrimitive(Image *image,$/;"	f
DrawPrimitive	magick/methods.h	302;"	d
DrawPushClipPath	wand/drawing-wand.c	/^  void (*DrawPushClipPath)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawPushClipPath	wand/drawing-wand.c	/^WandExport void DrawPushClipPath(DrawingWand *wand,const char *clip_mask_id)$/;"	f
DrawPushDefs	wand/drawing-wand.c	/^  void (*DrawPushDefs)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
DrawPushDefs	wand/drawing-wand.c	/^WandExport void DrawPushDefs(DrawingWand *wand)$/;"	f
DrawPushPattern	wand/drawing-wand.c	/^  MagickBooleanType (*DrawPushPattern)(DrawingWand *,const char *,const double,$/;"	m	struct:_DrawVTable	file:
DrawPushPattern	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawPushPattern(DrawingWand *wand,$/;"	f
DrawRectangle	wand/drawing-wand.c	/^  void (*DrawRectangle)(DrawingWand *,const double,const double,const double,$/;"	m	struct:_DrawVTable	file:
DrawRectangle	wand/drawing-wand.c	/^WandExport void DrawRectangle(DrawingWand *wand,const double x1,const double y1,$/;"	f
DrawRender	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawRender(DrawingWand *wand)$/;"	f
DrawResetVectorGraphics	wand/drawing-wand.c	/^WandExport void DrawResetVectorGraphics(DrawingWand *wand)$/;"	f
DrawRotate	wand/drawing-wand.c	/^  void (*DrawRotate)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawRotate	wand/drawing-wand.c	/^WandExport void DrawRotate(DrawingWand *wand,const double degrees)$/;"	f
DrawRoundLinecap	magick/draw.c	/^static void DrawRoundLinecap(Image *image,const DrawInfo *draw_info,$/;"	f	file:
DrawRoundRectangle	wand/drawing-wand.c	/^  void (*DrawRoundRectangle)(DrawingWand *,double,double,double,double,$/;"	m	struct:_DrawVTable	file:
DrawRoundRectangle	wand/drawing-wand.c	/^WandExport void DrawRoundRectangle(DrawingWand *wand,double x1,double y1,$/;"	f
DrawScale	wand/drawing-wand.c	/^  void (*DrawScale)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawScale	wand/drawing-wand.c	/^WandExport void DrawScale(DrawingWand *wand,const double x,const double y)$/;"	f
DrawSetBorderColor	wand/drawing-wand.c	/^  void (*DrawSetBorderColor)(DrawingWand *,const PixelWand *);$/;"	m	struct:_DrawVTable	file:
DrawSetBorderColor	wand/drawing-wand.c	/^WandExport void DrawSetBorderColor(DrawingWand *wand,const PixelWand *border_wand)$/;"	f
DrawSetClipPath	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetClipPath)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawSetClipPath	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetClipPath(DrawingWand *wand,$/;"	f
DrawSetClipRule	wand/drawing-wand.c	/^  void (*DrawSetClipRule)(DrawingWand *,const FillRule);$/;"	m	struct:_DrawVTable	file:
DrawSetClipRule	wand/drawing-wand.c	/^WandExport void DrawSetClipRule(DrawingWand *wand,const FillRule fill_rule)$/;"	f
DrawSetClipUnits	wand/drawing-wand.c	/^  void (*DrawSetClipUnits)(DrawingWand *,const ClipPathUnits);$/;"	m	struct:_DrawVTable	file:
DrawSetClipUnits	wand/drawing-wand.c	/^WandExport void DrawSetClipUnits(DrawingWand *wand,$/;"	f
DrawSetFillColor	wand/drawing-wand.c	/^  void (*DrawSetFillColor)(DrawingWand *,const PixelWand *);$/;"	m	struct:_DrawVTable	file:
DrawSetFillColor	wand/drawing-wand.c	/^WandExport void DrawSetFillColor(DrawingWand *wand,const PixelWand *fill_wand)$/;"	f
DrawSetFillOpacity	wand/drawing-wand.c	/^WandExport void DrawSetFillOpacity(DrawingWand *wand,const double fill_opacity)$/;"	f
DrawSetFillPatternURL	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetFillPatternURL)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawSetFillPatternURL	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetFillPatternURL(DrawingWand *wand,$/;"	f
DrawSetFillRule	wand/drawing-wand.c	/^  void (*DrawSetFillRule)(DrawingWand *,const FillRule);$/;"	m	struct:_DrawVTable	file:
DrawSetFillRule	wand/drawing-wand.c	/^WandExport void DrawSetFillRule(DrawingWand *wand,const FillRule fill_rule)$/;"	f
DrawSetFont	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetFont)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawSetFont	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetFont(DrawingWand *wand,$/;"	f
DrawSetFontFamily	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetFontFamily)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawSetFontFamily	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetFontFamily(DrawingWand *wand,$/;"	f
DrawSetFontResolution	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetFontResolution(DrawingWand *wand,$/;"	f
DrawSetFontSize	wand/drawing-wand.c	/^  void (*DrawSetFontSize)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSetFontSize	wand/drawing-wand.c	/^WandExport void DrawSetFontSize(DrawingWand *wand,const double pointsize)$/;"	f
DrawSetFontStretch	wand/drawing-wand.c	/^  void (*DrawSetFontStretch)(DrawingWand *,const StretchType);$/;"	m	struct:_DrawVTable	file:
DrawSetFontStretch	wand/drawing-wand.c	/^WandExport void DrawSetFontStretch(DrawingWand *wand,$/;"	f
DrawSetFontStyle	wand/drawing-wand.c	/^  void (*DrawSetFontStyle)(DrawingWand *,const StyleType);$/;"	m	struct:_DrawVTable	file:
DrawSetFontStyle	wand/drawing-wand.c	/^WandExport void DrawSetFontStyle(DrawingWand *wand,const StyleType style)$/;"	f
DrawSetFontWeight	wand/drawing-wand.c	/^  void (*DrawSetFontWeight)(DrawingWand *,const size_t);$/;"	m	struct:_DrawVTable	file:
DrawSetFontWeight	wand/drawing-wand.c	/^WandExport void DrawSetFontWeight(DrawingWand *wand,$/;"	f
DrawSetGravity	wand/drawing-wand.c	/^  void (*DrawSetGravity)(DrawingWand *,const GravityType);$/;"	m	struct:_DrawVTable	file:
DrawSetGravity	wand/drawing-wand.c	/^WandExport void DrawSetGravity(DrawingWand *wand,const GravityType gravity)$/;"	f
DrawSetOpacity	wand/drawing-wand.c	/^WandExport void DrawSetOpacity(DrawingWand *wand,const double opacity)$/;"	f
DrawSetStrokeAntialias	wand/drawing-wand.c	/^  void (*DrawSetStrokeAntialias)(DrawingWand *,const MagickBooleanType);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeAntialias	wand/drawing-wand.c	/^WandExport void DrawSetStrokeAntialias(DrawingWand *wand,$/;"	f
DrawSetStrokeColor	wand/drawing-wand.c	/^  void (*DrawSetStrokeColor)(DrawingWand *,const PixelWand *);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeColor	wand/drawing-wand.c	/^WandExport void DrawSetStrokeColor(DrawingWand *wand,$/;"	f
DrawSetStrokeDashArray	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetStrokeDashArray)(DrawingWand *,const double *);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeDashArray	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetStrokeDashArray(DrawingWand *wand,$/;"	f
DrawSetStrokeDashOffset	wand/drawing-wand.c	/^  void (*DrawSetStrokeDashOffset)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeDashOffset	wand/drawing-wand.c	/^WandExport void DrawSetStrokeDashOffset(DrawingWand *wand,$/;"	f
DrawSetStrokeLineCap	wand/drawing-wand.c	/^  void (*DrawSetStrokeLineCap)(DrawingWand *,const LineCap);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeLineCap	wand/drawing-wand.c	/^WandExport void DrawSetStrokeLineCap(DrawingWand *wand,const LineCap linecap)$/;"	f
DrawSetStrokeLineJoin	wand/drawing-wand.c	/^  void (*DrawSetStrokeLineJoin)(DrawingWand *,const LineJoin);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeLineJoin	wand/drawing-wand.c	/^WandExport void DrawSetStrokeLineJoin(DrawingWand *wand,const LineJoin linejoin)$/;"	f
DrawSetStrokeMiterLimit	wand/drawing-wand.c	/^  void (*DrawSetStrokeMiterLimit)(DrawingWand *,const size_t);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeMiterLimit	wand/drawing-wand.c	/^WandExport void DrawSetStrokeMiterLimit(DrawingWand *wand,$/;"	f
DrawSetStrokeOpacity	wand/drawing-wand.c	/^WandExport void DrawSetStrokeOpacity(DrawingWand *wand,$/;"	f
DrawSetStrokePatternURL	wand/drawing-wand.c	/^  MagickBooleanType (*DrawSetStrokePatternURL)(DrawingWand *,const char *);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokePatternURL	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetStrokePatternURL(DrawingWand *wand,$/;"	f
DrawSetStrokeWidth	wand/drawing-wand.c	/^  void (*DrawSetStrokeWidth)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSetStrokeWidth	wand/drawing-wand.c	/^WandExport void DrawSetStrokeWidth(DrawingWand *wand,const double stroke_width)$/;"	f
DrawSetTextAlignment	wand/drawing-wand.c	/^WandExport void DrawSetTextAlignment(DrawingWand *wand,$/;"	f
DrawSetTextAntialias	wand/drawing-wand.c	/^  void (*DrawSetTextAntialias)(DrawingWand *,const MagickBooleanType);$/;"	m	struct:_DrawVTable	file:
DrawSetTextAntialias	wand/drawing-wand.c	/^WandExport void DrawSetTextAntialias(DrawingWand *wand,$/;"	f
DrawSetTextDecoration	wand/drawing-wand.c	/^  void (*DrawSetTextDecoration)(DrawingWand *,const DecorationType);$/;"	m	struct:_DrawVTable	file:
DrawSetTextDecoration	wand/drawing-wand.c	/^WandExport void DrawSetTextDecoration(DrawingWand *wand,$/;"	f
DrawSetTextDirection	wand/drawing-wand.c	/^WandExport void DrawSetTextDirection(DrawingWand *wand,$/;"	f
DrawSetTextEncoding	wand/drawing-wand.c	/^WandExport void DrawSetTextEncoding(DrawingWand *wand,const char *encoding)$/;"	f
DrawSetTextInterlineSpacing	wand/drawing-wand.c	/^WandExport void DrawSetTextInterlineSpacing(DrawingWand *wand,$/;"	f
DrawSetTextInterwordSpacing	wand/drawing-wand.c	/^  void (*DrawSetTextInterwordSpacing)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSetTextInterwordSpacing	wand/drawing-wand.c	/^WandExport void DrawSetTextInterwordSpacing(DrawingWand *wand,$/;"	f
DrawSetTextKerning	wand/drawing-wand.c	/^  void (*DrawSetTextKerning)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSetTextKerning	wand/drawing-wand.c	/^WandExport void DrawSetTextKerning(DrawingWand *wand,const double kerning)$/;"	f
DrawSetTextUnderColor	wand/drawing-wand.c	/^  void (*DrawSetTextUnderColor)(DrawingWand *,const PixelWand *);$/;"	m	struct:_DrawVTable	file:
DrawSetTextUnderColor	wand/drawing-wand.c	/^WandExport void DrawSetTextUnderColor(DrawingWand *wand,$/;"	f
DrawSetVectorGraphics	wand/drawing-wand.c	/^WandExport MagickBooleanType DrawSetVectorGraphics(DrawingWand *wand,$/;"	f
DrawSetViewbox	wand/drawing-wand.c	/^  void (*DrawSetViewbox)(DrawingWand *,ssize_t,ssize_t,ssize_t,ssize_t);$/;"	m	struct:_DrawVTable	file:
DrawSetViewbox	wand/drawing-wand.c	/^WandExport void DrawSetViewbox(DrawingWand *wand,ssize_t x1,ssize_t y1,$/;"	f
DrawSkewX	wand/drawing-wand.c	/^  void (*DrawSkewX)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSkewX	wand/drawing-wand.c	/^WandExport void DrawSkewX(DrawingWand *wand,const double degrees)$/;"	f
DrawSkewY	wand/drawing-wand.c	/^  void (*DrawSkewY)(DrawingWand *,const double);$/;"	m	struct:_DrawVTable	file:
DrawSkewY	wand/drawing-wand.c	/^WandExport void DrawSkewY(DrawingWand *wand,const double degrees)$/;"	f
DrawStippleCommand	magick/display.c	/^  DrawStippleCommand,$/;"	e	enum:__anon21	file:
DrawStrokePolygon	magick/draw.c	/^static MagickBooleanType DrawStrokePolygon(Image *image,$/;"	f	file:
DrawTranslate	wand/drawing-wand.c	/^  void (*DrawTranslate)(DrawingWand *,const double,const double);$/;"	m	struct:_DrawVTable	file:
DrawTranslate	wand/drawing-wand.c	/^WandExport void DrawTranslate(DrawingWand *wand,const double x,const double y)$/;"	f
DrawUndoCommand	magick/display.c	/^  DrawUndoCommand,$/;"	e	enum:__anon21	file:
DrawWarning	magick/exception.h	/^  DrawWarning = 360,$/;"	e	enum:__anon84
DrawWidthCommand	magick/display.c	/^  DrawWidthCommand,$/;"	e	enum:__anon21	file:
DrawingWand	wand/drawing-wand.h	/^  DrawingWand;$/;"	t	typeref:struct:_DrawingWand
DrawingWandId	wand/drawing-wand.c	61;"	d	file:
DstAtopCompositeOp	magick/composite.h	/^  DstAtopCompositeOp,$/;"	e	enum:__anon68
DstCompositeOp	magick/composite.h	/^  DstCompositeOp,$/;"	e	enum:__anon68
DstInCompositeOp	magick/composite.h	/^  DstInCompositeOp,$/;"	e	enum:__anon68
DstOutCompositeOp	magick/composite.h	/^  DstOutCompositeOp,$/;"	e	enum:__anon68
DstOverCompositeOp	magick/composite.h	/^  DstOverCompositeOp,$/;"	e	enum:__anon68
DullCommand	magick/display.c	/^  DullCommand,$/;"	e	enum:__anon20	file:
DullPreview	magick/effect.h	/^  DullPreview,$/;"	e	enum:__anon56
DupDispose	magick/layer.c	954;"	d	file:
DuplexTransferImageViewMethod	magick/image-view.h	/^  (*DuplexTransferImageViewMethod)(const ImageView *,const ImageView *,$/;"	t
DuplexTransferPixelViewMethod	wand/deprecate.h	/^  (*DuplexTransferPixelViewMethod)(const PixelView *,const PixelView *,$/;"	t
DuplexTransferWandViewMethod	wand/wand-view.h	/^  (*DuplexTransferWandViewMethod)(const WandView *,const WandView *,WandView *,$/;"	t
DuplicateBlob	magick/blob.c	/^MagickExport void DuplicateBlob(Image *image,const Image *duplicate)$/;"	f
DuplicateBlob	magick/methods.h	303;"	d
DuplicateImages	magick/list.c	/^MagickExport Image *DuplicateImages(Image *images,$/;"	f
EILSEQ	magick/token-private.h	26;"	d
EOFBlob	magick/blob.c	/^MagickExport int EOFBlob(const Image *image)$/;"	f
EOFBlob	magick/methods.h	308;"	d
EWA	magick/resample.c	73;"	d	file:
EWA_CLAMP	magick/resample.c	75;"	d	file:
EXIFMultipleFractions	magick/property.c	775;"	d	file:
EXIFMultipleValues	magick/property.c	749;"	d	file:
EXIF_DELIMITER	magick/profile.c	1689;"	d	file:
EXIF_DELIMITER	magick/property.c	731;"	d	file:
EXIF_FMT_BYTE	magick/property.c	733;"	d	file:
EXIF_FMT_DOUBLE	magick/property.c	744;"	d	file:
EXIF_FMT_SBYTE	magick/property.c	738;"	d	file:
EXIF_FMT_SINGLE	magick/property.c	743;"	d	file:
EXIF_FMT_SLONG	magick/property.c	741;"	d	file:
EXIF_FMT_SRATIONAL	magick/property.c	742;"	d	file:
EXIF_FMT_SSHORT	magick/property.c	740;"	d	file:
EXIF_FMT_STRING	magick/property.c	734;"	d	file:
EXIF_FMT_ULONG	magick/property.c	736;"	d	file:
EXIF_FMT_UNDEFINED	magick/property.c	739;"	d	file:
EXIF_FMT_URATIONAL	magick/property.c	737;"	d	file:
EXIF_FMT_USHORT	magick/property.c	735;"	d	file:
EXIF_NUM_FORMATS	magick/profile.c	1690;"	d	file:
EXIF_NUM_FORMATS	magick/property.c	732;"	d	file:
EXId	magick/compress.c	98;"	d	file:
EXTable	magick/compress.c	/^  EXTable[]=$/;"	v	file:
EastGravity	magick/geometry.h	/^  EastGravity = 6,$/;"	e	enum:__anon15
EastGravity	magick/geometry.h	70;"	d
EdgeDetectCommand	magick/display.c	/^  EdgeDetectCommand,$/;"	e	enum:__anon20	file:
EdgeDetectPreview	magick/effect.h	/^  EdgeDetectPreview,$/;"	e	enum:__anon56
EdgeImage	magick/effect.c	/^MagickExport Image *EdgeImage(const Image *image,const double radius,$/;"	f
EdgeImage	magick/methods.h	304;"	d
EdgeInMorphology	magick/morphology.h	/^  EdgeInMorphology,             \/* Dilate difference from Original *\/$/;"	e	enum:__anon70
EdgeInfo	magick/draw.c	/^} EdgeInfo;$/;"	t	typeref:struct:_EdgeInfo	file:
EdgeMorphology	magick/morphology.h	/^  EdgeMorphology,               \/* Dilate difference with Erode *\/$/;"	e	enum:__anon70
EdgeOutMorphology	magick/morphology.h	/^  EdgeOutMorphology,            \/* Erode difference from Original *\/$/;"	e	enum:__anon70
EdgeVirtualPixelMethod	magick/cache-view.h	/^  EdgeVirtualPixelMethod,$/;"	e	enum:__anon63
EdgeX	magick/cache.c	/^static inline ssize_t EdgeX(const ssize_t x,const size_t columns)$/;"	f	file:
EdgeX	magick/matrix.c	/^static inline ssize_t EdgeX(const ssize_t x,const size_t columns)$/;"	f	file:
EdgeY	magick/cache.c	/^static inline ssize_t EdgeY(const ssize_t y,const size_t rows)$/;"	f	file:
EdgeY	magick/matrix.c	/^static inline ssize_t EdgeY(const ssize_t y,const size_t rows)$/;"	f	file:
EdgesKernel	magick/morphology.h	/^  EdgesKernel,$/;"	e	enum:__anon69
EditorOptions	magick/studio.h	258;"	d
EditorOptions	magick/studio.h	270;"	d
EditorOptions	magick/studio.h	284;"	d
EditorOptions	magick/studio.h	297;"	d
EditorOptions	magick/studio.h	318;"	d
EditorOptions	wand/studio.h	260;"	d
EditorOptions	wand/studio.h	272;"	d
EditorOptions	wand/studio.h	286;"	d
EditorOptions	wand/studio.h	299;"	d
EditorOptions	wand/studio.h	320;"	d
ElapsedTime	magick/timer.c	/^static double ElapsedTime(void)$/;"	f	file:
ElementInfo	magick/draw.c	/^} ElementInfo;$/;"	t	typeref:struct:_ElementInfo	file:
ElementInfo	magick/hashmap.c	/^} ElementInfo;$/;"	t	typeref:struct:_ElementInfo	file:
ElementReference	magick/draw.h	/^} ElementReference;$/;"	t	typeref:struct:_ElementReference
ElementType	magick/xwindow-private.h	/^} ElementType;$/;"	t	typeref:enum:__anon27
EllipseElement	magick/xwindow-private.h	/^  EllipseElement,$/;"	e	enum:__anon27
EllipsePrimitive	magick/draw.h	/^  EllipsePrimitive,$/;"	e	enum:__anon43
EmbossCommand	magick/display.c	/^  EmbossCommand,$/;"	e	enum:__anon20	file:
EmbossImage	magick/effect.c	/^MagickExport Image *EmbossImage(const Image *image,const double radius,$/;"	f
EmbossImage	magick/methods.h	305;"	d
EncipherAESBlock	magick/cipher.c	/^static void EncipherAESBlock(AESInfo *aes_info,const unsigned char *plaintext,$/;"	f	file:
EncipherImage	magick/cipher.c	/^MagickExport MagickBooleanType EncipherImage(Image *image,$/;"	f
EncipherImage	magick/methods.h	306;"	d
EncipherImageTag	magick/cipher.c	777;"	d	file:
EncodeGamma	magick/pixel.c	/^static inline double EncodeGamma(const double x)$/;"	f	file:
EncodeImageHandler	magick/magick.h	/^  EncodeImageHandler(const ImageInfo *,Image *);$/;"	t
EncodePixelGamma	magick/pixel.c	/^MagickExport MagickRealType EncodePixelGamma(const MagickRealType pixel)$/;"	f
EncodePredefinedEntities	magick/xml-tree.c	/^static char *EncodePredefinedEntities(const char *source,ssize_t offset,$/;"	f	file:
EncoderThreadSupport	magick/magick.h	/^  EncoderThreadSupport = 0x0002$/;"	e	enum:__anon59
EncodesRGBGamma	magick/deprecate.h	51;"	d
EndCode	magick/draw.c	/^  EndCode$/;"	e	enum:__anon17	file:
EndianOptions	magick/option.c	/^  EndianOptions[] =$/;"	v	file:
EndianType	magick/quantum.h	/^} EndianType;$/;"	t	typeref:enum:__anon4
Enhance	magick/enhance.c	1568;"	d	file:
EnhanceImage	magick/enhance.c	/^MagickExport Image *EnhanceImage(const Image *image,ExceptionInfo *exception)$/;"	f
EnhanceImage	magick/methods.h	307;"	d
EnhanceImageTag	magick/enhance.c	1594;"	d	file:
EntryInfo	magick/hashmap.c	/^} EntryInfo;$/;"	t	typeref:struct:_EntryInfo	file:
EpochFiletime	magick/nt-base.c	321;"	d	file:
EqualOperator	magick/fx.c	104;"	d	file:
EqualizeCommand	magick/display.c	/^  EqualizeCommand,$/;"	e	enum:__anon20	file:
EqualizeImage	magick/enhance.c	/^MagickExport MagickBooleanType EqualizeImage(Image *image)$/;"	f
EqualizeImage	magick/methods.h	310;"	d
EqualizeImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType EqualizeImageChannel(Image *image,$/;"	f
EqualizeImageChannel	magick/methods.h	309;"	d
EqualizeImageTag	magick/accelerate.c	3950;"	d	file:
EqualizeImageTag	magick/enhance.c	1772;"	d	file:
ErodeIntensityMorphology	magick/morphology.h	/^  ErodeIntensityMorphology,     \/* Pixel Pick using GreyScale Erode *\/$/;"	e	enum:__anon70
ErodeMorphology	magick/morphology.h	/^  ErodeMorphology,              \/* Minimum Value in Neighbourhood *\/$/;"	e	enum:__anon70
ErrorException	magick/exception.h	/^  ErrorException = 400,$/;"	e	enum:__anon84
ErrorHandler	magick/exception.h	/^  (*ErrorHandler)(const ExceptionType,const char *,const char *);$/;"	t
ErrorInfo	magick/color.h	/^} ErrorInfo;$/;"	t	typeref:struct:_ErrorInfo
ErrorQueueLength	magick/quantize.c	210;"	d	file:
EscapeParenthesis	magick/annotate.c	/^static char *EscapeParenthesis(const char *text)$/;"	f	file:
EscapeState	magick/xwindow-private.h	/^  EscapeState = 0x0001,$/;"	e	enum:__anon29
EscapeString	magick/methods.h	311;"	d
EscapeString	magick/string.c	/^MagickExport char *EscapeString(const char *source,const char escape)$/;"	f
EuclideanKernel	magick/morphology.h	/^  EuclideanKernel,$/;"	e	enum:__anon69
EvaluateImage	magick/methods.h	313;"	d
EvaluateImage	magick/statistic.c	/^MagickExport MagickBooleanType EvaluateImage(Image *image,$/;"	f
EvaluateImageChannel	magick/methods.h	312;"	d
EvaluateImageChannel	magick/statistic.c	/^MagickExport MagickBooleanType EvaluateImageChannel(Image *image,$/;"	f
EvaluateImageTag	magick/histogram.c	178;"	d	file:
EvaluateImageTag	magick/statistic.c	430;"	d	file:
EvaluateImages	magick/statistic.c	/^MagickExport Image *EvaluateImages(const Image *images,$/;"	f
EvaluateMagickPrefix	magick/methods.h	36;"	d
EvaluateMax	magick/statistic.c	/^static inline double EvaluateMax(const double x,const double y)$/;"	f	file:
EvaluateOptions	magick/option.c	/^  EvaluateOptions[] =$/;"	v	file:
EvenOddRule	magick/draw.h	/^  EvenOddRule,$/;"	e	enum:__anon38
EvenOddRule	magick/draw.h	65;"	d
EventHandler	magick/log.c	/^  EventHandler = 0x0020,$/;"	e	enum:__anon57	file:
EventInfo	magick/log.c	/^} EventInfo;$/;"	t	typeref:struct:_EventInfo	file:
ExceptionEvent	magick/log.h	/^  ExceptionEvent = 0x00100,$/;"	e	enum:__anon93
ExceptionInfo	magick/magick-type.h	/^typedef struct _ExceptionInfo ExceptionInfo;$/;"	t	typeref:struct:_ExceptionInfo
ExceptionInfo	magick/magick-type.h	174;"	d
ExceptionSeverityToTag	magick/exception.c	/^static const char *ExceptionSeverityToTag(const ExceptionType severity)$/;"	f	file:
ExceptionType	magick/exception.h	/^} ExceptionType;$/;"	t	typeref:enum:__anon84
ExcerptImage	magick/methods.h	314;"	d
ExcerptImage	magick/transform.c	/^MagickExport Image *ExcerptImage(const Image *image,$/;"	f
ExcerptImageTag	magick/transform.c	1045;"	d	file:
Exclusion	magick/composite.c	/^static MagickRealType Exclusion(const MagickRealType Sca,$/;"	f	file:
ExclusionCompositeOp	magick/composite.h	/^  ExclusionCompositeOp,$/;"	e	enum:__anon68
ExecutePolicyRights	magick/policy.h	/^  ExecutePolicyRights = 0x04$/;"	e	enum:__anon47
Exit	magick/nt-base.c	/^MagickPrivate int Exit(int status)$/;"	f
Exit	magick/studio.h	259;"	d
Exit	magick/studio.h	271;"	d
Exit	magick/studio.h	285;"	d
Exit	wand/studio.h	261;"	d
Exit	wand/studio.h	273;"	d
Exit	wand/studio.h	287;"	d
ExitState	magick/xwindow-private.h	/^  ExitState = 0x0002,$/;"	e	enum:__anon29
ExpandAffine	magick/gem.c	/^MagickExport double ExpandAffine(const AffineMatrix *affine)$/;"	f
ExpandAffine	magick/methods.h	315;"	d
ExpandBounds	magick/distort.c	1773;"	d	file:
ExpandFilename	magick/methods.h	316;"	d
ExpandFilename	magick/utility.c	/^MagickExport void ExpandFilename(char *path)$/;"	f
ExpandFilenames	magick/methods.h	317;"	d
ExpandFilenames	magick/utility.c	/^MagickExport MagickBooleanType ExpandFilenames(int *number_arguments,$/;"	f
ExpandHeap	magick/memory.c	/^static MagickBooleanType ExpandHeap(size_t size)$/;"	f	file:
ExpandMirrorKernelInfo	magick/morphology.c	/^static void ExpandMirrorKernelInfo(KernelInfo *kernel)$/;"	f	file:
ExpandPixelGamma	magick/deprecate.h	52;"	d
ExpandRotateKernelInfo	magick/morphology.c	/^static void ExpandRotateKernelInfo(KernelInfo *kernel, const double angle)$/;"	f	file:
ExpandedStretch	magick/type.h	/^  ExpandedStretch,$/;"	e	enum:__anon24
ExplicitFormatType	magick/magick.h	/^  ExplicitFormatType$/;"	e	enum:__anon58
ExponentBias	magick/quantum-private.h	102;"	d
ExponentMask	magick/quantum-private.h	103;"	d
ExponentShift	magick/quantum-private.h	104;"	d
ExponentialEvaluateOperator	magick/statistic.h	/^  ExponentialEvaluateOperator,$/;"	e	enum:__anon89
ExponentialNotation	magick/fx.c	108;"	d	file:
ExportAlphaQuantum	magick/quantum-export.c	/^static void ExportAlphaQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportBGRAQuantum	magick/quantum-export.c	/^static void ExportBGRAQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportBGRQuantum	magick/quantum-export.c	/^static void ExportBGRQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportBlackQuantum	magick/quantum-export.c	/^static void ExportBlackQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportBlueQuantum	magick/quantum-export.c	/^static void ExportBlueQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportCMYKAQuantum	magick/quantum-export.c	/^static void ExportCMYKAQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportCMYKQuantum	magick/quantum-export.c	/^static void ExportCMYKQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportCbYCrYQuantum	magick/quantum-export.c	/^static void ExportCbYCrYQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportCharPixel	magick/pixel.c	/^static void ExportCharPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportDoublePixel	magick/pixel.c	/^static void ExportDoublePixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportFloatPixel	magick/pixel.c	/^static void ExportFloatPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportGrayAlphaQuantum	magick/quantum-export.c	/^static void ExportGrayAlphaQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportGrayQuantum	magick/quantum-export.c	/^static void ExportGrayQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportGreenQuantum	magick/quantum-export.c	/^static void ExportGreenQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportImagePixels	magick/methods.h	318;"	d
ExportImagePixels	magick/pixel.c	/^MagickExport MagickBooleanType ExportImagePixels(const Image *image,$/;"	f
ExportIndexAlphaQuantum	magick/quantum-export.c	/^static void ExportIndexAlphaQuantum(const Image *image,$/;"	f	file:
ExportIndexQuantum	magick/quantum-export.c	/^static void ExportIndexQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ExportIntegerPixel	magick/pixel.c	/^static void ExportIntegerPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportLongPixel	magick/pixel.c	/^static void ExportLongPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportOpacityQuantum	magick/quantum-export.c	/^static void ExportOpacityQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportQuantumPixel	magick/pixel.c	/^static void ExportQuantumPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExportQuantumPixels	magick/methods.h	319;"	d
ExportQuantumPixels	magick/quantum-export.c	/^MagickExport size_t ExportQuantumPixels(const Image *image,$/;"	f
ExportRGBAQuantum	magick/quantum-export.c	/^static void ExportRGBAQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportRGBQuantum	magick/quantum-export.c	/^static void ExportRGBQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportRedQuantum	magick/quantum-export.c	/^static void ExportRedQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ExportShortPixel	magick/pixel.c	/^static void ExportShortPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ExtendInterpretText	magick/property.c	3217;"	d	file:
ExtendedRationalType	magick/deprecate.h	/^typedef MagickRealType ExtendedRationalType;$/;"	t
ExtendedSignedIntegralType	magick/deprecate.h	/^typedef MagickOffsetType ExtendedSignedIntegralType;$/;"	t
ExtendedUnsignedIntegralType	magick/deprecate.h	/^typedef MagickSizeType ExtendedUnsignedIntegralType;$/;"	t
ExtensionPath	magick/utility.h	/^  ExtensionPath,$/;"	e	enum:__anon31
ExtentImage	magick/methods.h	320;"	d
ExtentImage	magick/transform.c	/^MagickExport Image *ExtentImage(const Image *image,$/;"	f
ExtentPacket	magick/segment.c	/^} ExtentPacket;$/;"	t	typeref:struct:_ExtentPacket	file:
ExtraCondensedStretch	magick/type.h	/^  ExtraCondensedStretch,$/;"	e	enum:__anon24
ExtraExpandedStretch	magick/type.h	/^  ExtraExpandedStretch,$/;"	e	enum:__anon24
ExtractAlphaChannel	magick/image.h	/^  ExtractAlphaChannel,$/;"	e	enum:__anon77
ExtractSubimageFromImage	magick/deprecate.c	/^MagickExport Image *ExtractSubimageFromImage(Image *image,$/;"	f
ExtractSubimageFromImage	magick/methods.h	321;"	d
F	magick/resample.c	/^    F;$/;"	m	struct:_ResampleFilter	file:
FC_FULLNAME	magick/type.c	746;"	d	file:
FC_WEIGHT_BLACK	magick/type.c	91;"	d	file:
FC_WEIGHT_BOLD	magick/type.c	88;"	d	file:
FC_WEIGHT_BOOK	magick/type.c	82;"	d	file:
FC_WEIGHT_DEMIBOLD	magick/type.c	86;"	d	file:
FC_WEIGHT_EXTRABOLD	magick/type.c	89;"	d	file:
FC_WEIGHT_EXTRALIGHT	magick/type.c	79;"	d	file:
FC_WEIGHT_HEAVY	magick/type.c	92;"	d	file:
FC_WEIGHT_LIGHT	magick/type.c	66;"	d	file:
FC_WEIGHT_LIGHT	magick/type.c	81;"	d	file:
FC_WEIGHT_MEDIUM	magick/type.c	85;"	d	file:
FC_WEIGHT_NORMAL	magick/type.c	84;"	d	file:
FC_WEIGHT_REGULAR	magick/type.c	83;"	d	file:
FC_WEIGHT_SEMIBOLD	magick/type.c	87;"	d	file:
FC_WEIGHT_THIN	magick/type.c	78;"	d	file:
FC_WEIGHT_ULTRABOLD	magick/type.c	90;"	d	file:
FC_WEIGHT_ULTRALIGHT	magick/type.c	80;"	d	file:
FC_WIDTH	magick/type.c	67;"	d	file:
FC_WIDTH_CONDENSED	magick/type.c	70;"	d	file:
FC_WIDTH_EXPANDED	magick/type.c	74;"	d	file:
FC_WIDTH_EXTRACONDENSED	magick/type.c	69;"	d	file:
FC_WIDTH_EXTRAEXPANDED	magick/type.c	75;"	d	file:
FC_WIDTH_NORMAL	magick/type.c	72;"	d	file:
FC_WIDTH_SEMICONDENSED	magick/type.c	71;"	d	file:
FC_WIDTH_SEMIEXPANDED	magick/type.c	73;"	d	file:
FC_WIDTH_ULTRACONDENSED	magick/type.c	68;"	d	file:
FC_WIDTH_ULTRAEXPANDED	magick/type.c	76;"	d	file:
FILTER_LUT	magick/resample.c	77;"	d	file:
FT_OPEN_PATHNAME	magick/annotate.c	1021;"	d	file:
F_OK	magick/nt-base.h	50;"	d
FasterCommand	magick/animate.c	/^  FasterCommand,$/;"	e	enum:__anon85	file:
FatalErrorException	magick/exception.h	/^  FatalErrorException = 700,$/;"	e	enum:__anon84
FatalErrorHandler	magick/exception.h	/^  (*FatalErrorHandler)(const ExceptionType,const char *,const char *);$/;"	t
FaxCompression	magick/compress.h	/^  FaxCompression,$/;"	e	enum:__anon13
FeaturesFormat	magick/identify.c	245;"	d	file:
FifoStream	magick/blob-private.h	/^  FifoStream,$/;"	e	enum:__anon74
FileCompare	magick/utility.c	/^static int FileCompare(const void *x,const void *y)$/;"	f	file:
FileHandler	magick/log.c	/^  FileHandler = 0x0008,$/;"	e	enum:__anon57	file:
FileInfo	magick/blob.c	/^typedef union FileInfo$/;"	u	file:
FileInfo	magick/blob.c	/^} FileInfo;$/;"	t	typeref:union:FileInfo	file:
FileOpenError	magick/exception.h	/^  FileOpenError = 430,$/;"	e	enum:__anon84
FileOpenFatalError	magick/exception.h	/^  FileOpenFatalError = 730,$/;"	e	enum:__anon84
FileOpenWarning	magick/exception.h	/^  FileOpenWarning = 330,$/;"	e	enum:__anon84
FileResource	magick/resource_.h	/^  FileResource,$/;"	e	enum:__anon65
FileStream	magick/blob-private.h	/^  FileStream,$/;"	e	enum:__anon74
FileToBlob	magick/blob.c	/^MagickExport unsigned char *FileToBlob(const char *filename,const size_t extent,$/;"	f
FileToBlob	magick/methods.h	322;"	d
FileToImage	magick/blob.c	/^MagickExport MagickBooleanType FileToImage(Image *image,const char *filename)$/;"	f
FileToImage	magick/methods.h	323;"	d
FileToString	magick/methods.h	325;"	d
FileToString	magick/string.c	/^MagickExport char *FileToString(const char *filename,const size_t extent,$/;"	f
FileToStringInfo	magick/methods.h	324;"	d
FileToStringInfo	magick/string.c	/^MagickExport StringInfo *FileToStringInfo(const char *filename,$/;"	f
FileToXML	magick/xml-tree.c	/^MagickPrivate char *FileToXML(const char *filename,const size_t extent)$/;"	f
FileTransmitType	magick/image.h	/^  FileTransmitType,$/;"	e	enum:__anon82
FillCircleElement	magick/xwindow-private.h	/^  FillCircleElement,$/;"	e	enum:__anon27
FillEllipseElement	magick/xwindow-private.h	/^  FillEllipseElement,$/;"	e	enum:__anon27
FillPolygonElement	magick/xwindow-private.h	/^  FillPolygonElement,$/;"	e	enum:__anon27
FillRectangleElement	magick/xwindow-private.h	/^  FillRectangleElement,$/;"	e	enum:__anon27
FillRule	magick/draw.h	/^} FillRule;$/;"	t	typeref:enum:__anon38
FillRuleOptions	magick/option.c	/^  FillRuleOptions[] =$/;"	v	file:
FillToBorderMethod	magick/draw.h	/^  FillToBorderMethod,$/;"	e	enum:__anon42
FilmGamma	magick/colorspace.c	560;"	d	file:
FilterError	magick/exception.h	/^  FilterError = 452,$/;"	e	enum:__anon84
FilterFatalError	magick/exception.h	/^  FilterFatalError = 752,$/;"	e	enum:__anon84
FilterImage	magick/effect.c	/^MagickExport Image *FilterImage(const Image *image,const KernelInfo *kernel,$/;"	f
FilterImage	magick/methods.h	327;"	d
FilterImageChannel	magick/effect.c	/^MagickExport Image *FilterImageChannel(const Image *image,$/;"	f
FilterImageChannel	magick/methods.h	326;"	d
FilterImageTag	magick/effect.c	1477;"	d	file:
FilterInterpolatePixel	magick/pixel.h	/^  FilterInterpolatePixel,            \/* Use resize filter - (very slow) *\/$/;"	e	enum:__anon52
FilterOptions	magick/option.c	/^  FilterOptions[] =$/;"	v	file:
FilterPolicyDomain	magick/policy.h	/^  FilterPolicyDomain,$/;"	e	enum:__anon46
FilterTypes	magick/resample.h	/^} FilterTypes;$/;"	t	typeref:enum:__anon76
FilterWarning	magick/exception.h	/^  FilterWarning = 352,$/;"	e	enum:__anon84
FinalizeImageSettings	wand/mogrify-private.h	39;"	d
FinalizeRoundKey	magick/cipher.c	/^static void FinalizeRoundKey(const unsigned int *ciphertext,$/;"	f	file:
FinalizeSignature	magick/methods.h	328;"	d
FinalizeSignature	magick/signature.c	/^MagickExport void FinalizeSignature(SignatureInfo *signature_info)$/;"	f
FireImageStack	wand/mogrify-private.h	48;"	d
FireOptionFlag	magick/option.h	/^  FireOptionFlag            = 0x0001,  \/* Option sequence firing point *\/$/;"	e	enum:__anon88
FlattenAlphaChannel	magick/image.h	/^  FlattenAlphaChannel,$/;"	e	enum:__anon77
FlattenImages	magick/deprecate.c	/^MagickExport Image *FlattenImages(Image *image,ExceptionInfo *exception)$/;"	f
FlattenImages	magick/methods.h	329;"	d
FlattenLayer	magick/layer.h	/^  FlattenLayer,$/;"	e	enum:__anon72
FlipCommand	magick/display.c	/^  FlipCommand,$/;"	e	enum:__anon20	file:
FlipImage	magick/methods.h	330;"	d
FlipImage	magick/transform.c	/^MagickExport Image *FlipImage(const Image *image,ExceptionInfo *exception)$/;"	f
FlipImageTag	magick/transform.c	1234;"	d	file:
FloatPixel	magick/constitute.h	/^  FloatPixel,$/;"	e	enum:__anon64
FloatPixelPacket	magick/accelerate-private.h	/^} FloatPixelPacket;$/;"	t	typeref:struct:_FloatPixelPacket
FloatingPointQuantumFormat	magick/quantum.h	/^  FloatingPointQuantumFormat,$/;"	e	enum:__anon6
FloodfillMethod	magick/draw.h	/^  FloodfillMethod,$/;"	e	enum:__anon42
FloodfillPaintImage	magick/methods.h	331;"	d
FloodfillPaintImage	magick/paint.c	/^MagickExport MagickBooleanType FloodfillPaintImage(Image *image,$/;"	f
FlopCommand	magick/display.c	/^  FlopCommand,$/;"	e	enum:__anon20	file:
FlopImage	magick/methods.h	332;"	d
FlopImage	magick/transform.c	/^MagickExport Image *FlopImage(const Image *image,ExceptionInfo *exception)$/;"	f
FlopImageTag	magick/transform.c	1362;"	d	file:
FloydSteinbergDither	magick/quantize.c	/^static MagickBooleanType FloydSteinbergDither(Image *image,CubeInfo *cube_info)$/;"	f	file:
FloydSteinbergDitherMethod	magick/quantize.h	/^  FloydSteinbergDitherMethod$/;"	e	enum:__anon66
ForegroundColor	magick/image.c	/^  ForegroundColor[] = "#000",  \/* black *\/$/;"	v
ForegroundStencil	magick/xwindow-private.h	/^  ForegroundStencil,$/;"	e	enum:__anon26
ForgetGravity	magick/geometry.h	/^  ForgetGravity = 0,$/;"	e	enum:__anon15
ForgetGravity	magick/geometry.h	64;"	d
FormatImageAttribute	magick/deprecate.c	/^MagickExport MagickBooleanType FormatImageAttribute(Image *image,$/;"	f
FormatImageAttribute	magick/methods.h	334;"	d
FormatImageAttributeList	magick/deprecate.c	/^MagickExport MagickBooleanType FormatImageAttributeList(Image *image,$/;"	f
FormatImageAttributeList	magick/methods.h	333;"	d
FormatImageProperty	magick/methods.h	336;"	d
FormatImageProperty	magick/property.c	/^MagickExport MagickBooleanType FormatImageProperty(Image *image,$/;"	f
FormatImagePropertyList	magick/deprecate.c	/^MagickExport MagickBooleanType FormatImagePropertyList(Image *image,$/;"	f
FormatImagePropertyList	magick/methods.h	335;"	d
FormatLocaleFile	magick/locale.c	/^MagickExport ssize_t FormatLocaleFile(FILE *file,const char *restrict format,$/;"	f
FormatLocaleFileList	magick/locale.c	/^MagickExport ssize_t FormatLocaleFileList(FILE *file,$/;"	f
FormatLocaleString	magick/locale.c	/^MagickExport ssize_t FormatLocaleString(char *restrict string,$/;"	f
FormatLocaleString	magick/methods.h	340;"	d
FormatLocaleStringList	magick/locale.c	/^MagickExport ssize_t FormatLocaleStringList(char *restrict string,$/;"	f
FormatLocaleStringList	magick/methods.h	339;"	d
FormatMagickCaption	magick/annotate.c	/^MagickExport ssize_t FormatMagickCaption(Image *image,DrawInfo *draw_info,$/;"	f
FormatMagickCaption	magick/methods.h	337;"	d
FormatMagickSize	magick/methods.h	338;"	d
FormatMagickSize	magick/string.c	/^MagickExport ssize_t FormatMagickSize(const MagickSizeType size,$/;"	f
FormatMagickString	magick/deprecate.c	/^MagickExport ssize_t FormatMagickString(char *string,const size_t length,$/;"	f
FormatMagickStringList	magick/deprecate.c	/^MagickExport ssize_t FormatMagickStringList(char *string,const size_t length,$/;"	f
FormatMagickTime	magick/methods.h	341;"	d
FormatMagickTime	magick/string.c	/^MagickExport ssize_t FormatMagickTime(const time_t time,const size_t length,$/;"	f
FormatString	magick/deprecate.c	/^MagickExport void FormatString(char *string,const char *format,...)$/;"	f
FormatString	magick/methods.h	343;"	d
FormatStringList	magick/deprecate.c	/^MagickExport void FormatStringList(char *string,const char *format,$/;"	f
FormatStringList	magick/methods.h	342;"	d
FormatsDiskValidate	magick/option.h	/^  FormatsDiskValidate = 0x00010,$/;"	e	enum:__anon87
FormatsMapValidate	magick/option.h	/^  FormatsMapValidate = 0x00020,$/;"	e	enum:__anon87
FormatsMemoryValidate	magick/option.h	/^  FormatsMemoryValidate = 0x00040,$/;"	e	enum:__anon87
FormerCommand	magick/display.c	/^  FormerCommand,$/;"	e	enum:__anon20	file:
FormerImageState	magick/xwindow-private.h	/^  FormerImageState = 0x0004,$/;"	e	enum:__anon29
ForwardAnimationState	magick/animate.c	80;"	d	file:
ForwardCommand	magick/animate.c	/^  ForwardCommand,$/;"	e	enum:__anon85	file:
ForwardFourier	magick/fourier.c	/^static MagickBooleanType ForwardFourier(const FourierInfo *fourier_info,$/;"	f	file:
ForwardFourierTransform	magick/fourier.c	/^static MagickBooleanType ForwardFourierTransform(FourierInfo *fourier_info,$/;"	f	file:
ForwardFourierTransformChannel	magick/fourier.c	/^static MagickBooleanType ForwardFourierTransformChannel(const Image *image,$/;"	f	file:
ForwardFourierTransformImage	magick/fourier.c	/^MagickExport Image *ForwardFourierTransformImage(const Image *image,$/;"	f
ForwardFourierTransformImage	magick/methods.h	344;"	d
ForwardQuadrantSwap	magick/fourier.c	/^static MagickBooleanType ForwardQuadrantSwap(const size_t width,$/;"	f	file:
FourierInfo	magick/fourier.c	/^} FourierInfo;$/;"	t	typeref:struct:_FourierInfo	file:
FrameImage	magick/decorate.c	/^MagickExport Image *FrameImage(const Image *image,const FrameInfo *frame_info,$/;"	f
FrameImage	magick/methods.h	345;"	d
FrameImageTag	magick/decorate.c	168;"	d	file:
FrameInfo	magick/decorate.h	/^} FrameInfo;$/;"	t	typeref:struct:_FrameInfo
FrameMode	magick/montage.h	/^  FrameMode,$/;"	e	enum:__anon3
FreeBuffersCommand	magick/display.c	/^  FreeBuffersCommand,$/;"	e	enum:__anon20	file:
FreeNodes	magick/segment.c	/^static void FreeNodes(IntervalTree *node)$/;"	f	file:
FreiChenKernel	magick/morphology.h	/^  FreiChenKernel,$/;"	e	enum:__anon69
FunctionImage	magick/methods.h	347;"	d
FunctionImage	magick/statistic.c	/^MagickExport MagickBooleanType FunctionImage(Image *image,$/;"	f
FunctionImageChannel	magick/methods.h	346;"	d
FunctionImageChannel	magick/statistic.c	/^MagickExport MagickBooleanType FunctionImageChannel(Image *image,$/;"	f
FunctionImageTag	magick/statistic.c	999;"	d	file:
FunctionOptions	magick/option.c	/^  FunctionOptions[] =$/;"	v	file:
FuzzErrorMetric	magick/compare.h	/^  FuzzErrorMetric,$/;"	e	enum:__anon92
FuzzyColorCompare	magick/deprecate.c	/^MagickExport MagickBooleanType FuzzyColorCompare(const Image *image,$/;"	f
FuzzyColorCompare	magick/methods.h	348;"	d
FuzzyColorMatch	magick/deprecate.c	/^MagickExport unsigned int FuzzyColorMatch(const PixelPacket *p,$/;"	f
FuzzyColorMatch	magick/methods.h	349;"	d
FuzzyOpacityCompare	magick/deprecate.c	/^MagickExport MagickBooleanType FuzzyOpacityCompare(const Image *image,$/;"	f
FuzzyOpacityCompare	magick/methods.h	350;"	d
FxChannelStatistics	magick/fx.c	/^static double FxChannelStatistics(FxInfo *fx_info,const Image *image,$/;"	f	file:
FxEvaluateChannelExpression	magick/fx.c	/^MagickExport MagickBooleanType FxEvaluateChannelExpression(FxInfo *fx_info,$/;"	f
FxEvaluateChannelExpression	magick/methods.h	351;"	d
FxEvaluateExpression	magick/fx.c	/^MagickExport MagickBooleanType FxEvaluateExpression(FxInfo *fx_info,$/;"	f
FxEvaluateExpression	magick/methods.h	352;"	d
FxEvaluateSubexpression	magick/fx.c	/^static double FxEvaluateSubexpression(FxInfo *fx_info,const ChannelType channel,$/;"	f	file:
FxGCD	magick/fx.c	/^static MagickOffsetType FxGCD(MagickOffsetType alpha,MagickOffsetType beta)$/;"	f	file:
FxGetSymbol	magick/fx.c	/^static double FxGetSymbol(FxInfo *fx_info,const ChannelType channel,$/;"	f	file:
FxImage	magick/fx.c	/^MagickExport Image *FxImage(const Image *image,const char *expression,$/;"	f
FxImage	magick/methods.h	354;"	d
FxImageChannel	magick/fx.c	/^MagickExport Image *FxImageChannel(const Image *image,const ChannelType channel,$/;"	f
FxImageChannel	magick/methods.h	353;"	d
FxImageTag	magick/fx.c	3043;"	d	file:
FxInfo	magick/fx-private.h	/^  FxInfo;$/;"	t	typeref:struct:_FxInfo
FxOperatorPrecedence	magick/fx.c	/^static const char *FxOperatorPrecedence(const char *expression,$/;"	f	file:
FxPreprocessExpression	magick/fx.c	/^MagickExport MagickBooleanType FxPreprocessExpression(FxInfo *fx_info,$/;"	f
FxPreprocessExpression	magick/methods.h	355;"	d
FxSubexpression	magick/fx.c	/^static inline const char *FxSubexpression(const char *expression,$/;"	f	file:
GIFInterlace	magick/image.h	/^  GIFInterlace,$/;"	e	enum:__anon79
GRAYColorspace	magick/colorspace.h	/^  GRAYColorspace,           \/* greyscale (linear) image (faked 1 channel) *\/$/;"	e	enum:__anon55
GRAYSCALE	image_validator/ImageValidator.c	/^    enum { NODATA = 0, COLORMAP, TRUECOLOR, GRAYSCALE } datatypecode;$/;"	e	enum:__anon98::__anon99	file:
GammaCommand	magick/display.c	/^  GammaCommand,$/;"	e	enum:__anon20	file:
GammaCorrectImageTag	magick/enhance.c	2150;"	d	file:
GammaImage	magick/enhance.c	/^MagickExport MagickBooleanType GammaImage(Image *image,const char *level)$/;"	f
GammaImage	magick/methods.h	357;"	d
GammaImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType GammaImageChannel(Image *image,$/;"	f
GammaImageChannel	magick/methods.h	356;"	d
GammaPreview	magick/effect.h	/^  GammaPreview,$/;"	e	enum:__anon56
GaussJordanElimination	magick/matrix.c	/^MagickExport MagickBooleanType GaussJordanElimination(double **matrix,$/;"	f
GaussJordanElimination	magick/methods.h	360;"	d
GaussJordanSwap	magick/matrix.c	498;"	d	file:
Gaussian	magick/resize.c	/^static MagickRealType Gaussian(const MagickRealType x,$/;"	f	file:
GaussianBlurImage	magick/effect.c	/^MagickExport Image *GaussianBlurImage(const Image *image,const double radius,$/;"	f
GaussianBlurImage	magick/methods.h	359;"	d
GaussianBlurImageChannel	magick/effect.c	/^MagickExport Image *GaussianBlurImageChannel(const Image *image,$/;"	f
GaussianBlurImageChannel	magick/methods.h	358;"	d
GaussianFilter	magick/resample.h	/^  GaussianFilter,$/;"	e	enum:__anon76
GaussianKernel	magick/morphology.h	/^  GaussianKernel,     \/* Convolution Kernels, Gaussian Based *\/$/;"	e	enum:__anon69
GaussianNoise	magick/fx.h	/^  GaussianNoise,$/;"	e	enum:__anon67
GaussianNoiseEvaluateOperator	magick/statistic.h	/^  GaussianNoiseEvaluateOperator,$/;"	e	enum:__anon89
GaussianWeightingFunction	magick/resize-private.h	/^  GaussianWeightingFunction,$/;"	e	enum:__anon30
GenerateCoefficients	magick/distort.c	/^static double *GenerateCoefficients(const Image *image,$/;"	f	file:
GenerateDifferentialNoise	magick/gem.c	/^MagickExport double GenerateDifferentialNoise(RandomInfo *random_info,$/;"	f
GenerateDifferentialNoise	magick/methods.h	361;"	d
GenerateEntropicChaos	magick/random.c	/^static StringInfo *GenerateEntropicChaos(RandomInfo *random_info)$/;"	f	file:
GenesisOptionFlag	magick/option.h	/^  GenesisOptionFlag         = 0x0400,  \/* Genesis Command Wrapper Option  *\/$/;"	e	enum:__anon88
GeometryFlags	magick/geometry.h	/^} GeometryFlags;$/;"	t	typeref:enum:__anon14
GeometryInfo	magick/geometry.h	/^} GeometryInfo;$/;"	t	typeref:struct:_GeometryInfo
Get8BIMProperty	magick/property.c	/^static MagickBooleanType Get8BIMProperty(const Image *image,const char *key)$/;"	f	file:
GetAbsoluteDistortion	magick/compare.c	/^static MagickBooleanType GetAbsoluteDistortion(const Image *image,$/;"	f	file:
GetAffineMatrix	magick/draw.c	/^MagickExport void GetAffineMatrix(AffineMatrix *affine_matrix)$/;"	f
GetAffineMatrix	magick/methods.h	362;"	d
GetAuthenticIndexQueue	magick/cache.c	/^MagickExport IndexPacket *GetAuthenticIndexQueue(const Image *image)$/;"	f
GetAuthenticIndexQueue	magick/methods.h	363;"	d
GetAuthenticIndexesFromCache	magick/cache.c	/^static IndexPacket *GetAuthenticIndexesFromCache(const Image *image)$/;"	f	file:
GetAuthenticIndexesFromHandler	magick/cache-private.h	/^  *(*GetAuthenticIndexesFromHandler)(const Image *);$/;"	t
GetAuthenticIndexesFromStream	magick/stream.c	/^static IndexPacket *GetAuthenticIndexesFromStream(const Image *image)$/;"	f	file:
GetAuthenticPixelCacheNexus	magick/cache.c	/^MagickExport PixelPacket *GetAuthenticPixelCacheNexus(Image *image,$/;"	f
GetAuthenticPixelCacheNexus	magick/methods.h	364;"	d
GetAuthenticPixelQueue	magick/cache.c	/^MagickExport PixelPacket *GetAuthenticPixelQueue(const Image *image)$/;"	f
GetAuthenticPixelQueue	magick/methods.h	365;"	d
GetAuthenticPixels	magick/cache.c	/^MagickExport PixelPacket *GetAuthenticPixels(Image *image,const ssize_t x,$/;"	f
GetAuthenticPixels	magick/methods.h	366;"	d
GetAuthenticPixelsCache	magick/cache.c	/^static PixelPacket *GetAuthenticPixelsCache(Image *image,const ssize_t x,$/;"	f	file:
GetAuthenticPixelsFromCache	magick/cache.c	/^static PixelPacket *GetAuthenticPixelsFromCache(const Image *image)$/;"	f	file:
GetAuthenticPixelsFromHandler	magick/cache-private.h	/^  *(*GetAuthenticPixelsFromHandler)(const Image *);$/;"	t
GetAuthenticPixelsFromStream	magick/stream.c	/^static PixelPacket *GetAuthenticPixelsFromStream(const Image *image)$/;"	f	file:
GetAuthenticPixelsHandler	magick/cache-private.h	/^  *(*GetAuthenticPixelsHandler)(Image *,const ssize_t,const ssize_t,$/;"	t
GetAuthenticPixelsStream	magick/stream.c	/^static PixelPacket *GetAuthenticPixelsStream(Image *image,const ssize_t x,$/;"	f	file:
GetBit	magick/fx.c	4705;"	d	file:
GetBlobError	magick/blob.c	/^MagickExport MagickBooleanType GetBlobError(const Image *image)$/;"	f
GetBlobError	magick/methods.h	367;"	d
GetBlobFileHandle	magick/blob.c	/^MagickExport FILE *GetBlobFileHandle(const Image *image)$/;"	f
GetBlobFileHandle	magick/methods.h	368;"	d
GetBlobInfo	magick/blob.c	/^MagickExport void GetBlobInfo(BlobInfo *blob_info)$/;"	f
GetBlobInfo	magick/methods.h	369;"	d
GetBlobProperties	magick/blob.c	/^MagickExport const struct stat *GetBlobProperties(const Image *image)$/;"	f
GetBlobProperties	magick/methods.h	370;"	d
GetBlobSize	magick/blob.c	/^MagickExport MagickSizeType GetBlobSize(const Image *image)$/;"	f
GetBlobSize	magick/methods.h	371;"	d
GetBlobStreamData	magick/blob.c	/^MagickExport unsigned char *GetBlobStreamData(const Image *image)$/;"	f
GetBlobStreamData	magick/methods.h	372;"	d
GetBlobStreamHandler	magick/blob.c	/^MagickExport StreamHandler GetBlobStreamHandler(const Image *image)$/;"	f
GetBlobStreamHandler	magick/methods.h	373;"	d
GetCacheView	magick/deprecate.c	/^MagickExport PixelPacket *GetCacheView(CacheView *cache_view,const ssize_t x,$/;"	f
GetCacheView	magick/methods.h	382;"	d
GetCacheViewAuthenticIndexQueue	magick/cache-view.c	/^MagickExport IndexPacket *GetCacheViewAuthenticIndexQueue(CacheView *cache_view)$/;"	f
GetCacheViewAuthenticIndexQueue	magick/methods.h	374;"	d
GetCacheViewAuthenticPixelQueue	magick/cache-view.c	/^MagickExport PixelPacket *GetCacheViewAuthenticPixelQueue(CacheView *cache_view)$/;"	f
GetCacheViewAuthenticPixelQueue	magick/methods.h	375;"	d
GetCacheViewAuthenticPixels	magick/cache-view.c	/^MagickExport PixelPacket *GetCacheViewAuthenticPixels(CacheView *cache_view,$/;"	f
GetCacheViewAuthenticPixels	magick/methods.h	376;"	d
GetCacheViewChannels	magick/cache-view.c	/^MagickExport size_t GetCacheViewChannels(const CacheView *cache_view)$/;"	f
GetCacheViewColorspace	magick/cache-view.c	/^MagickExport ColorspaceType GetCacheViewColorspace(const CacheView *cache_view)$/;"	f
GetCacheViewColorspace	magick/methods.h	377;"	d
GetCacheViewException	magick/cache-view.c	/^MagickExport ExceptionInfo *GetCacheViewException(const CacheView *cache_view)$/;"	f
GetCacheViewException	magick/methods.h	378;"	d
GetCacheViewExtent	magick/cache-view.c	/^MagickExport MagickSizeType GetCacheViewExtent(const CacheView *cache_view)$/;"	f
GetCacheViewExtent	magick/methods.h	379;"	d
GetCacheViewIndexes	magick/deprecate.c	/^MagickExport IndexPacket *GetCacheViewIndexes(CacheView *cache_view)$/;"	f
GetCacheViewIndexes	magick/methods.h	380;"	d
GetCacheViewPixels	magick/deprecate.c	/^MagickExport PixelPacket *GetCacheViewPixels(CacheView *cache_view,const ssize_t x,$/;"	f
GetCacheViewPixels	magick/methods.h	381;"	d
GetCacheViewStorageClass	magick/cache-view.c	/^MagickExport ClassType GetCacheViewStorageClass(const CacheView *cache_view)$/;"	f
GetCacheViewStorageClass	magick/methods.h	383;"	d
GetCacheViewVirtualIndexQueue	magick/cache-view.c	/^MagickExport const IndexPacket *GetCacheViewVirtualIndexQueue($/;"	f
GetCacheViewVirtualIndexQueue	magick/methods.h	384;"	d
GetCacheViewVirtualPixelQueue	magick/cache-view.c	/^MagickExport const PixelPacket *GetCacheViewVirtualPixelQueue($/;"	f
GetCacheViewVirtualPixelQueue	magick/methods.h	385;"	d
GetCacheViewVirtualPixels	magick/cache-view.c	/^MagickExport const PixelPacket *GetCacheViewVirtualPixels($/;"	f
GetCacheViewVirtualPixels	magick/methods.h	386;"	d
GetClientName	magick/client.c	/^MagickExport const char *GetClientName(void)$/;"	f
GetClientName	magick/methods.h	387;"	d
GetClientPath	magick/client.c	/^MagickExport const char *GetClientPath(void)$/;"	f
GetClientPath	magick/methods.h	388;"	d
GetCoderInfo	magick/coder.c	/^MagickExport const CoderInfo *GetCoderInfo(const char *name,$/;"	f
GetCoderInfo	magick/methods.h	390;"	d
GetCoderInfoList	magick/coder.c	/^MagickExport const CoderInfo **GetCoderInfoList(const char *pattern,$/;"	f
GetCoderInfoList	magick/methods.h	389;"	d
GetCoderList	magick/coder.c	/^MagickExport char **GetCoderList(const char *pattern,$/;"	f
GetCoderList	magick/methods.h	391;"	d
GetColorCompliance	magick/color.c	/^MagickExport const ColorInfo *GetColorCompliance(const char *name,$/;"	f
GetColorInfo	magick/color.c	/^MagickExport const ColorInfo *GetColorInfo(const char *name,$/;"	f
GetColorInfo	magick/methods.h	393;"	d
GetColorInfoList	magick/color.c	/^MagickExport const ColorInfo **GetColorInfoList(const char *pattern,$/;"	f
GetColorInfoList	magick/methods.h	392;"	d
GetColorList	magick/color.c	/^MagickExport char **GetColorList(const char *pattern,$/;"	f
GetColorList	magick/methods.h	394;"	d
GetColorTuple	magick/color.c	/^MagickExport void GetColorTuple(const MagickPixelPacket *pixel,$/;"	f
GetColorTuple	magick/methods.h	395;"	d
GetCommandOptionFlags	magick/option.c	/^MagickExport ssize_t GetCommandOptionFlags(const CommandOption option,$/;"	f
GetCommandOptions	magick/methods.h	496;"	d
GetCommandOptions	magick/option.c	/^MagickExport char **GetCommandOptions(const CommandOption value)$/;"	f
GetConfigureBlob	magick/deprecate.c	/^MagickExport void *GetConfigureBlob(const char *filename,char *path,$/;"	f
GetConfigureBlob	magick/methods.h	396;"	d
GetConfigureInfo	magick/configure.c	/^MagickExport const ConfigureInfo *GetConfigureInfo(const char *name,$/;"	f
GetConfigureInfo	magick/methods.h	398;"	d
GetConfigureInfoList	magick/configure.c	/^MagickExport const ConfigureInfo **GetConfigureInfoList(const char *pattern,$/;"	f
GetConfigureInfoList	magick/methods.h	397;"	d
GetConfigureList	magick/configure.c	/^MagickExport char **GetConfigureList(const char *pattern,$/;"	f
GetConfigureList	magick/methods.h	399;"	d
GetConfigureOption	magick/configure.c	/^MagickExport char *GetConfigureOption(const char *option)$/;"	f
GetConfigureOption	magick/methods.h	400;"	d
GetConfigureOptions	magick/configure.c	/^MagickExport LinkedListInfo *GetConfigureOptions(const char *filename,$/;"	f
GetConfigureOptions	magick/methods.h	401;"	d
GetConfigurePaths	magick/configure.c	/^MagickExport LinkedListInfo *GetConfigurePaths(const char *filename,$/;"	f
GetConfigurePaths	magick/methods.h	402;"	d
GetConfigureValue	magick/configure.c	/^MagickExport const char *GetConfigureValue(const ConfigureInfo *configure_info)$/;"	f
GetConfigureValue	magick/methods.h	403;"	d
GetCubeInfo	magick/histogram.c	/^static CubeInfo *GetCubeInfo(void)$/;"	f	file:
GetCubeInfo	magick/quantize.c	/^static CubeInfo *GetCubeInfo(const QuantizeInfo *quantize_info,$/;"	f	file:
GetDelegateCommand	magick/delegate.c	/^MagickExport char *GetDelegateCommand(const ImageInfo *image_info,Image *image,$/;"	f
GetDelegateCommand	magick/methods.h	404;"	d
GetDelegateCommands	magick/delegate.c	/^MagickExport const char *GetDelegateCommands(const DelegateInfo *delegate_info)$/;"	f
GetDelegateCommands	magick/methods.h	405;"	d
GetDelegateInfo	magick/delegate.c	/^MagickExport const DelegateInfo *GetDelegateInfo(const char *decode,$/;"	f
GetDelegateInfo	magick/methods.h	407;"	d
GetDelegateInfoList	magick/delegate.c	/^MagickExport const DelegateInfo **GetDelegateInfoList(const char *pattern,$/;"	f
GetDelegateInfoList	magick/methods.h	406;"	d
GetDelegateList	magick/delegate.c	/^MagickExport char **GetDelegateList(const char *pattern,$/;"	f
GetDelegateList	magick/methods.h	408;"	d
GetDelegateMode	magick/delegate.c	/^MagickExport ssize_t GetDelegateMode(const DelegateInfo *delegate_info)$/;"	f
GetDelegateMode	magick/methods.h	409;"	d
GetDelegateThreadSupport	magick/delegate.c	/^MagickExport MagickBooleanType GetDelegateThreadSupport($/;"	f
GetDelegateThreadSupport	magick/methods.h	410;"	d
GetDistributeCacheFile	magick/distribute-cache.c	/^MagickPrivate int GetDistributeCacheFile(const DistributeCacheInfo *server_info)$/;"	f
GetDistributeCacheHostname	magick/distribute-cache.c	/^MagickPrivate const char *GetDistributeCacheHostname($/;"	f
GetDistributeCachePort	magick/distribute-cache.c	/^MagickPrivate int GetDistributeCachePort(const DistributeCacheInfo *server_info)$/;"	f
GetDrawInfo	magick/draw.c	/^MagickExport void GetDrawInfo(const ImageInfo *image_info,DrawInfo *draw_info)$/;"	f
GetDrawInfo	magick/methods.h	411;"	d
GetEXIFProperty	magick/property.c	/^static MagickBooleanType GetEXIFProperty(const Image *image,$/;"	f	file:
GetElapsedTime	magick/methods.h	412;"	d
GetElapsedTime	magick/timer.c	/^MagickExport double GetElapsedTime(TimerInfo *time_info)$/;"	f
GetEnvironmentValue	magick/methods.h	413;"	d
GetEnvironmentValue	magick/string.c	/^MagickExport char *GetEnvironmentValue(const char *name)$/;"	f
GetExceptionInfo	magick/exception.c	/^MagickExport void GetExceptionInfo(ExceptionInfo *exception)$/;"	f
GetExceptionInfo	magick/methods.h	414;"	d
GetExceptionMessage	magick/exception.c	/^MagickExport char *GetExceptionMessage(const int error)$/;"	f
GetExceptionMessage	magick/methods.h	415;"	d
GetExecutionPath	magick/methods.h	416;"	d
GetExecutionPath	magick/utility.c	/^MagickExport MagickBooleanType GetExecutionPath(char *path,const size_t extent)$/;"	f
GetFillColor	magick/draw-private.h	/^static inline MagickBooleanType GetFillColor(const DrawInfo *draw_info,$/;"	f
GetFirstImageInList	magick/list.c	/^MagickExport Image *GetFirstImageInList(const Image *images)$/;"	f
GetFirstImageInList	magick/methods.h	417;"	d
GetFirstSplayTreeNode	magick/splay-tree.c	/^static inline void *GetFirstSplayTreeNode(SplayTreeInfo *splay_tree)$/;"	f	file:
GetFuzzDistortion	magick/compare.c	/^static MagickBooleanType GetFuzzDistortion(const Image *image,$/;"	f	file:
GetGeometry	magick/geometry.c	/^MagickExport MagickStatusType GetGeometry(const char *geometry,ssize_t *x,$/;"	f
GetGeometry	magick/methods.h	418;"	d
GetHostname	magick/distribute-cache.c	/^static char *GetHostname(int *port,ExceptionInfo *exception)$/;"	f	file:
GetICCProperty	magick/property.c	/^static MagickBooleanType GetICCProperty(const Image *image,const char *property)$/;"	f	file:
GetIPTCProperty	magick/property.c	/^static MagickBooleanType GetIPTCProperty(const Image *image,const char *key)$/;"	f	file:
GetImageAlphaChannel	magick/channel.c	/^MagickExport MagickBooleanType GetImageAlphaChannel(const Image *image)$/;"	f
GetImageAlphaChannel	magick/methods.h	419;"	d
GetImageArtifact	magick/artifact.c	/^MagickExport const char *GetImageArtifact(const Image *image,$/;"	f
GetImageArtifact	magick/methods.h	420;"	d
GetImageAttribute	magick/deprecate.c	/^MagickExport const ImageAttribute *GetImageAttribute(const Image *image,$/;"	f
GetImageAttribute	magick/methods.h	421;"	d
GetImageBackgroundColor	magick/shear.c	/^static void GetImageBackgroundColor(Image *image,const ssize_t offset,$/;"	f	file:
GetImageBoundingBox	magick/attribute.c	/^MagickExport RectangleInfo GetImageBoundingBox(const Image *image,$/;"	f
GetImageBoundingBox	magick/methods.h	422;"	d
GetImageCache	wand/mogrify.c	/^static inline Image *GetImageCache(const ImageInfo *image_info,const char *path,$/;"	f	file:
GetImageChannelDepth	magick/attribute.c	/^MagickExport size_t GetImageChannelDepth(const Image *image,$/;"	f
GetImageChannelDepth	magick/methods.h	423;"	d
GetImageChannelDistortion	magick/compare.c	/^MagickExport MagickBooleanType GetImageChannelDistortion(Image *image,$/;"	f
GetImageChannelDistortion	magick/methods.h	424;"	d
GetImageChannelDistortions	magick/compare.c	/^MagickExport double *GetImageChannelDistortions(Image *image,$/;"	f
GetImageChannelDistortions	magick/methods.h	425;"	d
GetImageChannelExtrema	magick/methods.h	426;"	d
GetImageChannelExtrema	magick/statistic.c	/^MagickExport MagickBooleanType GetImageChannelExtrema(const Image *image,$/;"	f
GetImageChannelFeatures	magick/feature.c	/^MagickExport ChannelFeatures *GetImageChannelFeatures(const Image *image,$/;"	f
GetImageChannelKurtosis	magick/methods.h	427;"	d
GetImageChannelKurtosis	magick/statistic.c	/^MagickExport MagickBooleanType GetImageChannelKurtosis(const Image *image,$/;"	f
GetImageChannelMean	magick/methods.h	428;"	d
GetImageChannelMean	magick/statistic.c	/^MagickExport MagickBooleanType GetImageChannelMean(const Image *image,$/;"	f
GetImageChannelMoments	magick/statistic.c	/^MagickExport ChannelMoments *GetImageChannelMoments(const Image *image,$/;"	f
GetImageChannelPerceptualHash	magick/statistic.c	/^MagickExport ChannelPerceptualHash *GetImageChannelPerceptualHash($/;"	f
GetImageChannelRange	magick/methods.h	429;"	d
GetImageChannelRange	magick/statistic.c	/^MagickExport MagickBooleanType GetImageChannelRange(const Image *image,$/;"	f
GetImageChannelStatistics	magick/methods.h	430;"	d
GetImageChannelStatistics	magick/statistic.c	/^MagickExport ChannelStatistics *GetImageChannelStatistics(const Image *image,$/;"	f
GetImageChannels	magick/image.c	/^MagickExport size_t GetImageChannels(Image *image)$/;"	f
GetImageClipMask	magick/image.c	/^MagickExport Image *GetImageClipMask(const Image *image,$/;"	f
GetImageClipMask	magick/methods.h	431;"	d
GetImageClippingPathAttribute	magick/deprecate.c	/^MagickExport const ImageAttribute *GetImageClippingPathAttribute(Image *image)$/;"	f
GetImageClippingPathAttribute	magick/methods.h	432;"	d
GetImageDecoder	magick/magick.c	/^MagickExport DecodeImageHandler *GetImageDecoder(const MagickInfo *magick_info)$/;"	f
GetImageDecoder	magick/methods.h	433;"	d
GetImageDepth	magick/attribute.c	/^MagickExport size_t GetImageDepth(const Image *image,ExceptionInfo *exception)$/;"	f
GetImageDepth	magick/methods.h	434;"	d
GetImageDistortion	magick/compare.c	/^MagickExport MagickBooleanType GetImageDistortion(Image *image,$/;"	f
GetImageDistortion	magick/methods.h	435;"	d
GetImageDynamicThreshold	magick/methods.h	436;"	d
GetImageDynamicThreshold	magick/segment.c	/^MagickExport MagickBooleanType GetImageDynamicThreshold(const Image *image,$/;"	f
GetImageEncoder	magick/magick.c	/^MagickExport EncodeImageHandler *GetImageEncoder(const MagickInfo *magick_info)$/;"	f
GetImageEncoder	magick/methods.h	437;"	d
GetImageException	magick/image.c	/^MagickExport void GetImageException(Image *image,ExceptionInfo *exception)$/;"	f
GetImageException	magick/methods.h	438;"	d
GetImageExtent	magick/cache.c	/^MagickExport MagickSizeType GetImageExtent(const Image *image)$/;"	f
GetImageExtent	magick/methods.h	439;"	d
GetImageExtrema	magick/methods.h	440;"	d
GetImageExtrema	magick/statistic.c	/^MagickExport MagickBooleanType GetImageExtrema(const Image *image,$/;"	f
GetImageFromList	magick/list.c	/^MagickExport Image *GetImageFromList(const Image *images,const ssize_t index)$/;"	f
GetImageFromList	magick/methods.h	441;"	d
GetImageFromMagickRegistry	magick/deprecate.c	/^MagickExport Image *GetImageFromMagickRegistry(const char *name,ssize_t *id,$/;"	f
GetImageFromMagickRegistry	magick/methods.h	442;"	d
GetImageFromMagickWand	wand/magick-image.c	/^WandExport Image *GetImageFromMagickWand(const MagickWand *wand)$/;"	f
GetImageGeometry	magick/deprecate.c	/^MagickExport int GetImageGeometry(Image *image,const char *geometry,$/;"	f
GetImageGeometry	magick/methods.h	443;"	d
GetImageHistogram	magick/histogram.c	/^MagickExport ColorPacket *GetImageHistogram(const Image *image,$/;"	f
GetImageHistogram	magick/methods.h	444;"	d
GetImageIndexInList	magick/list.c	/^MagickExport ssize_t GetImageIndexInList(const Image *images)$/;"	f
GetImageIndexInList	magick/methods.h	445;"	d
GetImageInfo	magick/image.c	/^MagickExport void GetImageInfo(ImageInfo *image_info)$/;"	f
GetImageInfo	magick/methods.h	447;"	d
GetImageInfoFile	magick/image.c	/^MagickExport FILE *GetImageInfoFile(const ImageInfo *image_info)$/;"	f
GetImageInfoFile	magick/methods.h	446;"	d
GetImageKurtosis	magick/methods.h	448;"	d
GetImageKurtosis	magick/statistic.c	/^MagickExport MagickBooleanType GetImageKurtosis(const Image *image,$/;"	f
GetImageList	magick/deprecate.c	/^MagickExport Image *GetImageList(const Image *images,const ssize_t offset,$/;"	f
GetImageList	magick/methods.h	451;"	d
GetImageListIndex	magick/deprecate.c	/^MagickExport ssize_t GetImageListIndex(const Image *images)$/;"	f
GetImageListIndex	magick/methods.h	449;"	d
GetImageListLength	magick/list.c	/^MagickExport size_t GetImageListLength(const Image *images)$/;"	f
GetImageListLength	magick/methods.h	450;"	d
GetImageListSize	magick/deprecate.c	/^MagickExport size_t GetImageListSize(const Image *images)$/;"	f
GetImageListSize	magick/methods.h	452;"	d
GetImageMagick	magick/magick.c	/^MagickExport MagickBooleanType GetImageMagick(const unsigned char *magick,$/;"	f
GetImageMagick	magick/methods.h	453;"	d
GetImageMask	magick/image.c	/^MagickExport Image *GetImageMask(const Image *image,ExceptionInfo *exception)$/;"	f
GetImageMask	magick/methods.h	454;"	d
GetImageMean	magick/methods.h	455;"	d
GetImageMean	magick/statistic.c	/^MagickExport MagickBooleanType GetImageMean(const Image *image,double *mean,$/;"	f
GetImageOption	magick/methods.h	456;"	d
GetImageOption	magick/option.c	/^MagickExport const char *GetImageOption(const ImageInfo *image_info,$/;"	f
GetImagePixelCache	magick/cache.c	/^static Cache GetImagePixelCache(Image *image,const MagickBooleanType clone,$/;"	f	file:
GetImagePixelCache	magick/methods.h	457;"	d
GetImagePixelCacheType	magick/cache.c	/^MagickExport CacheType GetImagePixelCacheType(const Image *image)$/;"	f
GetImagePixels	magick/deprecate.c	/^MagickExport PixelPacket *GetImagePixels(Image *image,const ssize_t x,const ssize_t y,$/;"	f
GetImagePixels	magick/methods.h	458;"	d
GetImageProfile	magick/methods.h	459;"	d
GetImageProfile	magick/profile.c	/^MagickExport const StringInfo *GetImageProfile(const Image *image,$/;"	f
GetImageProperty	magick/methods.h	460;"	d
GetImageProperty	magick/property.c	/^MagickExport const char *GetImageProperty(const Image *image,$/;"	f
GetImageQuantizeError	magick/methods.h	461;"	d
GetImageQuantizeError	magick/quantize.c	/^MagickExport MagickBooleanType GetImageQuantizeError(Image *image)$/;"	f
GetImageQuantumDepth	magick/attribute.c	/^MagickExport size_t GetImageQuantumDepth(const Image *image,$/;"	f
GetImageQuantumDepth	magick/methods.h	462;"	d
GetImageRange	magick/methods.h	463;"	d
GetImageRange	magick/statistic.c	/^MagickExport MagickBooleanType GetImageRange(const Image *image,$/;"	f
GetImageReferenceCount	magick/image.c	/^MagickExport ssize_t GetImageReferenceCount(Image *image)$/;"	f
GetImageReferenceCount	magick/methods.h	464;"	d
GetImageRegistry	magick/methods.h	465;"	d
GetImageRegistry	magick/registry.c	/^MagickExport void *GetImageRegistry(const RegistryType type,const char *key,$/;"	f
GetImageTotalInkDensity	magick/methods.h	466;"	d
GetImageTotalInkDensity	magick/prepress.c	/^MagickExport double GetImageTotalInkDensity(Image *image)$/;"	f
GetImageType	magick/attribute.c	/^MagickExport ImageType GetImageType(const Image *image,ExceptionInfo *exception)$/;"	f
GetImageType	magick/methods.h	467;"	d
GetImageViewMethod	magick/image-view.h	/^  (*GetImageViewMethod)(const ImageView *,const ssize_t,const int,void *),$/;"	t
GetImageVirtualPixelMethod	magick/image.c	/^MagickExport VirtualPixelMethod GetImageVirtualPixelMethod(const Image *image)$/;"	f
GetImageVirtualPixelMethod	magick/methods.h	468;"	d
GetIndexes	magick/deprecate.c	/^MagickExport IndexPacket *GetIndexes(const Image *image)$/;"	f
GetIndexes	magick/methods.h	469;"	d
GetLastImageInList	magick/list.c	/^MagickExport Image *GetLastImageInList(const Image *images)$/;"	f
GetLastImageInList	magick/methods.h	470;"	d
GetLastValueInLinkedList	magick/hashmap.c	/^MagickExport void *GetLastValueInLinkedList(LinkedListInfo *list_info)$/;"	f
GetLastValueInLinkedList	magick/methods.h	471;"	d
GetLocaleExceptionMessage	magick/exception.c	/^MagickExport const char *GetLocaleExceptionMessage(const ExceptionType severity,$/;"	f
GetLocaleExceptionMessage	magick/methods.h	472;"	d
GetLocaleInfoList	magick/locale.c	/^MagickExport const LocaleInfo **GetLocaleInfoList(const char *pattern,$/;"	f
GetLocaleInfoList	magick/methods.h	473;"	d
GetLocaleInfo_	magick/locale.c	/^MagickExport const LocaleInfo *GetLocaleInfo_(const char *tag,$/;"	f
GetLocaleInfo_	magick/methods.h	474;"	d
GetLocaleList	magick/locale.c	/^MagickExport char **GetLocaleList(const char *pattern,$/;"	f
GetLocaleList	magick/methods.h	475;"	d
GetLocaleMessage	magick/locale.c	/^MagickExport const char *GetLocaleMessage(const char *tag)$/;"	f
GetLocaleMessage	magick/methods.h	476;"	d
GetLocaleOptions	magick/locale.c	/^MagickExport LinkedListInfo *GetLocaleOptions(const char *filename,$/;"	f
GetLocaleOptions	magick/methods.h	477;"	d
GetLocaleValue	magick/locale.c	/^MagickExport const char *GetLocaleValue(const LocaleInfo *locale_info)$/;"	f
GetLocaleValue	magick/methods.h	478;"	d
GetLocationStatistics	magick/identify.c	/^static ChannelStatistics *GetLocationStatistics(const Image *image,$/;"	f	file:
GetLogInfo	magick/log.c	/^static LogInfo *GetLogInfo(const char *name,ExceptionInfo *exception)$/;"	f	file:
GetLogInfoList	magick/log.c	/^MagickExport const LogInfo **GetLogInfoList(const char *pattern,$/;"	f
GetLogInfoList	magick/methods.h	479;"	d
GetLogList	magick/log.c	/^MagickExport char **GetLogList(const char *pattern,$/;"	f
GetLogList	magick/methods.h	480;"	d
GetLogName	magick/log.c	/^MagickExport const char *GetLogName(void)$/;"	f
GetLogName	magick/methods.h	481;"	d
GetMagicInfo	magick/magic.c	/^MagickExport const MagicInfo *GetMagicInfo(const unsigned char *magic,$/;"	f
GetMagicInfo	magick/methods.h	483;"	d
GetMagicInfoList	magick/magic.c	/^MagickExport const MagicInfo **GetMagicInfoList(const char *pattern,$/;"	f
GetMagicInfoList	magick/methods.h	482;"	d
GetMagicList	magick/magic.c	/^MagickExport char **GetMagicList(const char *pattern,size_t *number_aliases,$/;"	f
GetMagicList	magick/methods.h	512;"	d
GetMagicName	magick/magic.c	/^MagickExport const char *GetMagicName(const MagicInfo *magic_info)$/;"	f
GetMagicName	magick/methods.h	513;"	d
GetMagickAdjoin	magick/magick.c	/^MagickExport MagickBooleanType GetMagickAdjoin(const MagickInfo *magick_info)$/;"	f
GetMagickAdjoin	magick/methods.h	484;"	d
GetMagickBlobSupport	magick/magick.c	/^MagickExport MagickBooleanType GetMagickBlobSupport($/;"	f
GetMagickBlobSupport	magick/methods.h	485;"	d
GetMagickCopyright	magick/methods.h	486;"	d
GetMagickCopyright	magick/version.c	/^MagickExport const char *GetMagickCopyright(void)$/;"	f
GetMagickDelegates	magick/version.c	/^MagickExport const char *GetMagickDelegates(void)$/;"	f
GetMagickDescription	magick/magick.c	/^MagickExport const char *GetMagickDescription(const MagickInfo *magick_info)$/;"	f
GetMagickDescription	magick/methods.h	487;"	d
GetMagickEndianSupport	magick/magick.c	/^MagickExport MagickBooleanType GetMagickEndianSupport($/;"	f
GetMagickEndianSupport	magick/methods.h	488;"	d
GetMagickFeatures	magick/methods.h	489;"	d
GetMagickFeatures	magick/version.c	/^MagickExport const char *GetMagickFeatures(void)$/;"	f
GetMagickGeometry	magick/deprecate.c	/^MagickExport unsigned int GetMagickGeometry(const char *geometry,ssize_t *x,$/;"	f
GetMagickGeometry	magick/methods.h	490;"	d
GetMagickHomeURL	magick/methods.h	491;"	d
GetMagickHomeURL	magick/version.c	/^MagickExport char *GetMagickHomeURL(void)$/;"	f
GetMagickInfo	magick/magick.c	/^MagickExport const MagickInfo *GetMagickInfo(const char *name,$/;"	f
GetMagickInfo	magick/methods.h	493;"	d
GetMagickInfoList	magick/magick.c	/^MagickExport const MagickInfo **GetMagickInfoList(const char *pattern,$/;"	f
GetMagickInfoList	magick/methods.h	492;"	d
GetMagickList	magick/magick.c	/^MagickExport char **GetMagickList(const char *pattern,$/;"	f
GetMagickList	magick/methods.h	494;"	d
GetMagickMemoryMethods	magick/memory.c	/^MagickExport void GetMagickMemoryMethods($/;"	f
GetMagickMemoryMethods	magick/methods.h	495;"	d
GetMagickMimeType	magick/magick.c	/^MagickExport const char *GetMagickMimeType(const MagickInfo *magick_info)$/;"	f
GetMagickModule	magick/log.h	29;"	d
GetMagickModulePath	magick/module.c	/^static MagickBooleanType GetMagickModulePath(const char *filename,$/;"	f	file:
GetMagickPackageName	magick/methods.h	497;"	d
GetMagickPackageName	magick/version.c	/^MagickExport const char *GetMagickPackageName(void)$/;"	f
GetMagickPageSize	magick/methods.h	498;"	d
GetMagickPageSize	magick/utility.c	/^MagickExport ssize_t GetMagickPageSize(void)$/;"	f
GetMagickPixelPacket	magick/methods.h	499;"	d
GetMagickPixelPacket	magick/pixel.c	/^MagickExport void GetMagickPixelPacket(const Image *image,$/;"	f
GetMagickPrecision	magick/magick.c	/^MagickExport int GetMagickPrecision(void)$/;"	f
GetMagickProperty	magick/methods.h	500;"	d
GetMagickProperty	magick/property.c	/^MagickExport const char *GetMagickProperty(const ImageInfo *image_info,$/;"	f
GetMagickPropertyLetter	magick/property.c	/^static const char *GetMagickPropertyLetter(const ImageInfo *image_info,$/;"	f	file:
GetMagickQuantumDepth	magick/methods.h	501;"	d
GetMagickQuantumDepth	magick/version.c	/^MagickExport const char *GetMagickQuantumDepth(size_t *depth)$/;"	f
GetMagickQuantumRange	magick/methods.h	502;"	d
GetMagickQuantumRange	magick/version.c	/^MagickExport const char *GetMagickQuantumRange(size_t *range)$/;"	f
GetMagickRawSupport	magick/magick.c	/^MagickExport MagickBooleanType GetMagickRawSupport($/;"	f
GetMagickRawSupport	magick/methods.h	503;"	d
GetMagickRegistry	magick/deprecate.c	/^MagickExport void *GetMagickRegistry(const ssize_t id,RegistryType *type,$/;"	f
GetMagickRegistry	magick/methods.h	504;"	d
GetMagickReleaseDate	magick/methods.h	505;"	d
GetMagickReleaseDate	magick/version.c	/^MagickExport const char *GetMagickReleaseDate(void)$/;"	f
GetMagickResource	magick/methods.h	507;"	d
GetMagickResource	magick/resource.c	/^MagickExport MagickSizeType GetMagickResource(const ResourceType type)$/;"	f
GetMagickResourceLimit	magick/methods.h	506;"	d
GetMagickResourceLimit	magick/resource.c	/^MagickExport MagickSizeType GetMagickResourceLimit(const ResourceType type)$/;"	f
GetMagickSeekableStream	magick/magick.c	/^MagickExport MagickBooleanType GetMagickSeekableStream($/;"	f
GetMagickSeekableStream	magick/methods.h	508;"	d
GetMagickSignature	magick/version.c	/^MagickExport unsigned int GetMagickSignature(const StringInfo *nonce)$/;"	f
GetMagickThreadId	magick/thread-private.h	/^static inline MagickThreadType GetMagickThreadId(void)$/;"	f
GetMagickThreadSignature	magick/thread-private.h	/^static inline size_t GetMagickThreadSignature(void)$/;"	f
GetMagickThreadSupport	magick/magick.c	/^MagickExport MagickStatusType GetMagickThreadSupport($/;"	f
GetMagickThreadSupport	magick/methods.h	509;"	d
GetMagickToken	magick/methods.h	510;"	d
GetMagickToken	magick/token.c	/^MagickExport void GetMagickToken(const char *start,const char **end,char *token)$/;"	f
GetMagickVersion	magick/methods.h	511;"	d
GetMagickVersion	magick/version.c	/^MagickExport const char *GetMagickVersion(size_t *version)$/;"	f
GetMatrixColumns	magick/matrix.c	/^MagickExport size_t GetMatrixColumns(const MatrixInfo *matrix_info)$/;"	f
GetMatrixElement	magick/matrix.c	/^MagickExport MagickBooleanType GetMatrixElement(const MatrixInfo *matrix_info,$/;"	f
GetMatrixRows	magick/matrix.c	/^MagickExport size_t GetMatrixRows(const MatrixInfo *matrix_info)$/;"	f
GetMaximumPixelList	magick/statistic.c	/^static void GetMaximumPixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetMeanAbsoluteDistortion	magick/compare.c	/^static MagickBooleanType GetMeanAbsoluteDistortion(const Image *image,$/;"	f	file:
GetMeanErrorPerPixel	magick/compare.c	/^static MagickBooleanType GetMeanErrorPerPixel(Image *image,$/;"	f	file:
GetMeanPixelList	magick/statistic.c	/^static void GetMeanPixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetMeanSquaredDistortion	magick/compare.c	/^static MagickBooleanType GetMeanSquaredDistortion(const Image *image,$/;"	f	file:
GetMedianPixelList	magick/statistic.c	/^static void GetMedianPixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetMimeDescription	magick/methods.h	514;"	d
GetMimeDescription	magick/mime.c	/^MagickExport const char *GetMimeDescription(const MimeInfo *mime_info)$/;"	f
GetMimeInfo	magick/methods.h	516;"	d
GetMimeInfo	magick/mime.c	/^MagickExport const MimeInfo *GetMimeInfo(const char *filename,$/;"	f
GetMimeInfoList	magick/methods.h	515;"	d
GetMimeInfoList	magick/mime.c	/^MagickExport const MimeInfo **GetMimeInfoList(const char *pattern,$/;"	f
GetMimeList	magick/methods.h	517;"	d
GetMimeList	magick/mime.c	/^MagickExport char **GetMimeList(const char *pattern,$/;"	f
GetMimeType	magick/methods.h	518;"	d
GetMimeType	magick/mime.c	/^MagickExport const char *GetMimeType(const MimeInfo *mime_info)$/;"	f
GetMinimumPixelList	magick/statistic.c	/^static void GetMinimumPixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetModePixelList	magick/statistic.c	/^static void GetModePixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetModuleInfo	magick/module.c	/^MagickExport ModuleInfo *GetModuleInfo(const char *tag,ExceptionInfo *exception)$/;"	f
GetModuleInfoList	magick/module.c	/^MagickExport const ModuleInfo **GetModuleInfoList(const char *pattern,$/;"	f
GetModuleList	magick/module.c	/^MagickExport char **GetModuleList(const char *pattern,$/;"	f
GetMonitorHandler	magick/deprecate.c	/^MagickExport MonitorHandler GetMonitorHandler(void)$/;"	f
GetMonitorHandler	magick/methods.h	519;"	d
GetMontageGeometry	magick/montage.c	/^static void GetMontageGeometry(char *geometry,const size_t number_images,$/;"	f	file:
GetMontageInfo	magick/methods.h	520;"	d
GetMontageInfo	magick/montage.c	/^MagickExport void GetMontageInfo(const ImageInfo *image_info,$/;"	f
GetMotionBlurKernel	magick/effect.c	/^static double *GetMotionBlurKernel(const size_t width,const double sigma)$/;"	f	file:
GetMultilineTypeMetrics	magick/annotate.c	/^MagickExport MagickBooleanType GetMultilineTypeMetrics(Image *image,$/;"	f
GetMultilineTypeMetrics	magick/methods.h	521;"	d
GetNextImage	magick/deprecate.c	/^MagickExport Image *GetNextImage(const Image *images)$/;"	f
GetNextImage	magick/methods.h	526;"	d
GetNextImageArtifact	magick/artifact.c	/^MagickExport char *GetNextImageArtifact(const Image *image)$/;"	f
GetNextImageArtifact	magick/methods.h	522;"	d
GetNextImageAttribute	magick/deprecate.c	/^MagickExport const ImageAttribute *GetNextImageAttribute(const Image *image)$/;"	f
GetNextImageAttribute	magick/methods.h	523;"	d
GetNextImageInList	magick/list.c	/^MagickExport Image *GetNextImageInList(const Image *images)$/;"	f
GetNextImageInList	magick/methods.h	524;"	d
GetNextImageOption	magick/methods.h	525;"	d
GetNextImageOption	magick/option.c	/^MagickExport char *GetNextImageOption(const ImageInfo *image_info)$/;"	f
GetNextImageProfile	magick/methods.h	527;"	d
GetNextImageProfile	magick/profile.c	/^MagickExport char *GetNextImageProfile(const Image *image)$/;"	f
GetNextImageProperty	magick/methods.h	528;"	d
GetNextImageProperty	magick/property.c	/^MagickExport char *GetNextImageProperty(const Image *image)$/;"	f
GetNextImageRegistry	magick/methods.h	529;"	d
GetNextImageRegistry	magick/registry.c	/^MagickExport char *GetNextImageRegistry(void)$/;"	f
GetNextKeyInHashmap	magick/hashmap.c	/^MagickExport void *GetNextKeyInHashmap(HashmapInfo *hashmap_info)$/;"	f
GetNextKeyInHashmap	magick/methods.h	530;"	d
GetNextKeyInSplayTree	magick/methods.h	531;"	d
GetNextKeyInSplayTree	magick/splay-tree.c	/^MagickExport const void *GetNextKeyInSplayTree(SplayTreeInfo *splay_tree)$/;"	f
GetNextUTFCode	magick/token-private.h	/^static inline int GetNextUTFCode(const char *text,unsigned int *octets)$/;"	f
GetNextValueInHashmap	magick/hashmap.c	/^MagickExport void *GetNextValueInHashmap(HashmapInfo *hashmap_info)$/;"	f
GetNextValueInHashmap	magick/methods.h	532;"	d
GetNextValueInLinkedList	magick/hashmap.c	/^MagickExport void *GetNextValueInLinkedList(LinkedListInfo *list_info)$/;"	f
GetNextValueInLinkedList	magick/methods.h	533;"	d
GetNextValueInSplayTree	magick/methods.h	534;"	d
GetNextValueInSplayTree	magick/splay-tree.c	/^MagickExport const void *GetNextValueInSplayTree(SplayTreeInfo *splay_tree)$/;"	f
GetNextXMLTreeTag	magick/methods.h	535;"	d
GetNextXMLTreeTag	magick/xml-tree.c	/^MagickExport XMLTreeInfo *GetNextXMLTreeTag(XMLTreeInfo *xml_info)$/;"	f
GetNodeInfo	magick/histogram.c	/^static NodeInfo *GetNodeInfo(CubeInfo *cube_info,const size_t level)$/;"	f	file:
GetNodeInfo	magick/quantize.c	/^static NodeInfo *GetNodeInfo(CubeInfo *cube_info,const size_t id,$/;"	f	file:
GetNonpeakPixelList	magick/statistic.c	/^static void GetNonpeakPixelList(PixelList *pixel_list,MagickPixelPacket *pixel)$/;"	f	file:
GetNormalizedCrossCorrelationDistortion	magick/compare.c	/^static MagickBooleanType GetNormalizedCrossCorrelationDistortion($/;"	f	file:
GetNumberChannels	magick/compare.c	/^static size_t GetNumberChannels(const Image *image,$/;"	f	file:
GetNumberColors	magick/histogram.c	/^MagickExport size_t GetNumberColors(const Image *image,FILE *file,$/;"	f
GetNumberColors	magick/methods.h	536;"	d
GetNumberOfElementsInLinkedList	magick/hashmap.c	/^MagickExport size_t GetNumberOfElementsInLinkedList($/;"	f
GetNumberOfElementsInLinkedList	magick/methods.h	537;"	d
GetNumberOfEntriesInHashmap	magick/hashmap.c	/^MagickExport size_t GetNumberOfEntriesInHashmap($/;"	f
GetNumberOfEntriesInHashmap	magick/methods.h	538;"	d
GetNumberOfNodesInSplayTree	magick/methods.h	539;"	d
GetNumberOfNodesInSplayTree	magick/splay-tree.c	/^MagickExport size_t GetNumberOfNodesInSplayTree($/;"	f
GetNumberScenes	magick/deprecate.c	/^MagickExport unsigned int GetNumberScenes(const Image *image)$/;"	f
GetNumberScenes	magick/methods.h	540;"	d
GetOneAuthenticPixel	magick/cache.c	/^MagickExport MagickBooleanType GetOneAuthenticPixel(Image *image,$/;"	f
GetOneAuthenticPixel	magick/methods.h	541;"	d
GetOneAuthenticPixelFromCache	magick/cache.c	/^static MagickBooleanType GetOneAuthenticPixelFromCache(Image *image,$/;"	f	file:
GetOneAuthenticPixelFromHandler	magick/cache-private.h	/^  (*GetOneAuthenticPixelFromHandler)(Image *,const ssize_t,const ssize_t,$/;"	t
GetOneAuthenticPixelFromStream	magick/stream.c	/^static MagickBooleanType GetOneAuthenticPixelFromStream(Image *image,$/;"	f	file:
GetOneCacheViewAuthenticPixel	magick/cache-view.c	/^MagickExport MagickBooleanType GetOneCacheViewAuthenticPixel($/;"	f
GetOneCacheViewAuthenticPixel	magick/methods.h	542;"	d
GetOneCacheViewVirtualMethodPixel	magick/cache-view.c	/^MagickExport MagickBooleanType GetOneCacheViewVirtualMethodPixel($/;"	f
GetOneCacheViewVirtualMethodPixel	magick/methods.h	543;"	d
GetOneCacheViewVirtualPixel	magick/cache-view.c	/^MagickExport MagickBooleanType GetOneCacheViewVirtualPixel($/;"	f
GetOneCacheViewVirtualPixel	magick/methods.h	544;"	d
GetOnePixel	magick/deprecate.c	/^MagickExport PixelPacket GetOnePixel(Image *image,const ssize_t x,const ssize_t y)$/;"	f
GetOnePixel	magick/methods.h	545;"	d
GetOneVirtualMagickPixel	magick/cache.c	/^MagickExport MagickBooleanType GetOneVirtualMagickPixel(const Image *image,$/;"	f
GetOneVirtualMagickPixel	magick/methods.h	546;"	d
GetOneVirtualMethodPixel	magick/cache.c	/^MagickExport MagickBooleanType GetOneVirtualMethodPixel(const Image *image,$/;"	f
GetOneVirtualMethodPixel	magick/methods.h	547;"	d
GetOneVirtualPixel	magick/cache.c	/^MagickExport MagickBooleanType GetOneVirtualPixel(const Image *image,$/;"	f
GetOneVirtualPixel	magick/methods.h	548;"	d
GetOneVirtualPixelFromCache	magick/cache.c	/^static MagickBooleanType GetOneVirtualPixelFromCache(const Image *image,$/;"	f	file:
GetOneVirtualPixelFromHandler	magick/cache-private.h	/^  (*GetOneVirtualPixelFromHandler)(const Image *,const VirtualPixelMethod,$/;"	t
GetOneVirtualPixelFromStream	magick/stream.c	/^static MagickBooleanType GetOneVirtualPixelFromStream(const Image *image,$/;"	f	file:
GetOpacityPixel	magick/draw.c	/^static double GetOpacityPixel(PolygonInfo *polygon_info,const double mid,$/;"	f	file:
GetOpenMPMaximumThreads	magick/thread-private.h	/^static inline size_t GetOpenMPMaximumThreads(void)$/;"	f
GetOpenMPThreadId	magick/thread-private.h	/^static inline int GetOpenMPThreadId(void)$/;"	f
GetOptimalKernelWidth	magick/gem.c	/^MagickExport size_t  GetOptimalKernelWidth(const double radius,$/;"	f
GetOptimalKernelWidth	magick/methods.h	551;"	d
GetOptimalKernelWidth1D	magick/gem.c	/^MagickExport size_t GetOptimalKernelWidth1D(const double radius,$/;"	f
GetOptimalKernelWidth1D	magick/methods.h	549;"	d
GetOptimalKernelWidth2D	magick/gem.c	/^MagickExport size_t GetOptimalKernelWidth2D(const double radius,$/;"	f
GetOptimalKernelWidth2D	magick/methods.h	550;"	d
GetOptionInfo	magick/option.c	/^static const OptionInfo *GetOptionInfo(const CommandOption option)$/;"	f	file:
GetPageGeometry	magick/geometry.c	/^MagickExport char *GetPageGeometry(const char *page_geometry)$/;"	f
GetPageGeometry	magick/methods.h	552;"	d
GetPathAttributes	magick/methods.h	553;"	d
GetPathAttributes	magick/utility.c	/^MagickExport MagickBooleanType GetPathAttributes(const char *path,$/;"	f
GetPathComponent	magick/methods.h	554;"	d
GetPathComponent	magick/utility.c	/^MagickExport void GetPathComponent(const char *path,PathType type,$/;"	f
GetPathComponents	magick/methods.h	555;"	d
GetPathComponents	magick/utility.c	/^MagickExport char **GetPathComponents(const char *path,$/;"	f
GetPathTemplate	magick/resource.c	/^MagickExport MagickBooleanType GetPathTemplate(char *path)$/;"	f
GetPeakAbsoluteDistortion	magick/compare.c	/^static MagickBooleanType GetPeakAbsoluteDistortion(const Image *image,$/;"	f	file:
GetPeakSignalToNoiseRatio	magick/compare.c	/^static MagickBooleanType GetPeakSignalToNoiseRatio(const Image *image,$/;"	f	file:
GetPerceptualHashDistortion	magick/compare.c	/^static MagickBooleanType GetPerceptualHashDistortion(const Image *image,$/;"	f	file:
GetPixelAlpha	magick/pixel-accessor.h	36;"	d
GetPixelBlack	magick/pixel-accessor.h	37;"	d
GetPixelBlue	magick/pixel-accessor.h	38;"	d
GetPixelCacheChannels	magick/cache.c	/^MagickExport size_t GetPixelCacheChannels(const Cache cache)$/;"	f
GetPixelCacheColorspace	magick/cache.c	/^MagickExport ColorspaceType GetPixelCacheColorspace(const Cache cache)$/;"	f
GetPixelCacheColorspace	magick/methods.h	556;"	d
GetPixelCacheMethods	magick/cache.c	/^MagickExport void GetPixelCacheMethods(CacheMethods *cache_methods)$/;"	f
GetPixelCacheMethods	magick/methods.h	557;"	d
GetPixelCacheNexusExtent	magick/cache.c	/^MagickExport MagickSizeType GetPixelCacheNexusExtent(const Cache cache,$/;"	f
GetPixelCacheNexusExtent	magick/methods.h	558;"	d
GetPixelCacheNexusIndexes	magick/methods.h	559;"	d
GetPixelCacheNexusPixels	magick/methods.h	560;"	d
GetPixelCachePixels	magick/cache.c	/^MagickExport void *GetPixelCachePixels(Image *image,MagickSizeType *length,$/;"	f
GetPixelCachePixels	magick/methods.h	561;"	d
GetPixelCacheStorageClass	magick/cache.c	/^MagickExport ClassType GetPixelCacheStorageClass(const Cache cache)$/;"	f
GetPixelCacheStorageClass	magick/methods.h	562;"	d
GetPixelCacheTileSize	magick/cache.c	/^MagickExport void GetPixelCacheTileSize(const Image *image,size_t *width,$/;"	f
GetPixelCacheTileSize	magick/methods.h	563;"	d
GetPixelCacheType	magick/cache.c	/^MagickExport CacheType GetPixelCacheType(const Image *image)$/;"	f
GetPixelCacheType	magick/methods.h	564;"	d
GetPixelCacheVirtualMethod	magick/cache.c	/^MagickExport VirtualPixelMethod GetPixelCacheVirtualMethod(const Image *image)$/;"	f
GetPixelCacheVirtualMethod	magick/methods.h	565;"	d
GetPixelCb	magick/pixel-accessor.h	39;"	d
GetPixelCr	magick/pixel-accessor.h	40;"	d
GetPixelCyan	magick/pixel-accessor.h	41;"	d
GetPixelGray	magick/pixel-accessor.h	42;"	d
GetPixelGreen	magick/pixel-accessor.h	43;"	d
GetPixelIndex	magick/pixel-accessor.h	44;"	d
GetPixelIntensity	magick/pixel.c	/^MagickExport MagickRealType GetPixelIntensity(const Image *image,$/;"	f
GetPixelL	magick/pixel-accessor.h	46;"	d
GetPixelLuma	magick/pixel-accessor.h	/^static inline MagickRealType GetPixelLuma(const Image *restrict image,$/;"	f
GetPixelLuminance	magick/pixel-accessor.h	/^static inline MagickRealType GetPixelLuminance(const Image *restrict image,$/;"	f
GetPixelMagenta	magick/pixel-accessor.h	47;"	d
GetPixelNext	magick/pixel-accessor.h	48;"	d
GetPixelOpacity	magick/pixel-accessor.h	49;"	d
GetPixelRGB	magick/pixel-accessor.h	51;"	d
GetPixelRGBO	magick/pixel-accessor.h	57;"	d
GetPixelRed	magick/pixel-accessor.h	50;"	d
GetPixelViewMethod	wand/deprecate.h	/^  (*GetPixelViewMethod)(const PixelView *,void *),$/;"	t
GetPixelY	magick/pixel-accessor.h	64;"	d
GetPixelYellow	magick/pixel-accessor.h	65;"	d
GetPixela	magick/pixel-accessor.h	34;"	d
GetPixelb	magick/pixel-accessor.h	35;"	d
GetPixels	magick/deprecate.c	/^MagickExport PixelPacket *GetPixels(const Image *image)$/;"	f
GetPixels	magick/methods.h	566;"	d
GetPolicyInfo	magick/policy.c	/^static PolicyInfo *GetPolicyInfo(const char *name,ExceptionInfo *exception)$/;"	f	file:
GetPolicyInfoList	magick/methods.h	567;"	d
GetPolicyInfoList	magick/policy.c	/^MagickExport const PolicyInfo **GetPolicyInfoList(const char *pattern,$/;"	f
GetPolicyList	magick/methods.h	568;"	d
GetPolicyList	magick/policy.c	/^MagickExport char **GetPolicyList(const char *pattern,$/;"	f
GetPolicyValue	magick/methods.h	569;"	d
GetPolicyValue	magick/policy.c	/^MagickExport char *GetPolicyValue(const char *name)$/;"	f
GetPreviousImage	magick/deprecate.c	/^MagickExport Image *GetPreviousImage(const Image *images)$/;"	f
GetPreviousImage	magick/methods.h	571;"	d
GetPreviousImageInList	magick/list.c	/^MagickExport Image *GetPreviousImageInList(const Image *images)$/;"	f
GetPreviousImageInList	magick/methods.h	570;"	d
GetProfilesFromResourceBlock	magick/profile.c	/^static void GetProfilesFromResourceBlock(Image *image,$/;"	f	file:
GetPseudoRandomValue	magick/methods.h	572;"	d
GetPseudoRandomValue	magick/random.c	/^MagickExport double GetPseudoRandomValue(RandomInfo *random_info)$/;"	f
GetQuantizeInfo	magick/methods.h	573;"	d
GetQuantizeInfo	magick/quantize.c	/^MagickExport void GetQuantizeInfo(QuantizeInfo *quantize_info)$/;"	f
GetQuantumEndian	magick/quantum.c	/^MagickExport EndianType GetQuantumEndian(const QuantumInfo *quantum_info)$/;"	f
GetQuantumExtent	magick/methods.h	574;"	d
GetQuantumExtent	magick/quantum.c	/^MagickExport size_t GetQuantumExtent(const Image *image,$/;"	f
GetQuantumFormat	magick/quantum.c	/^MagickExport QuantumFormatType GetQuantumFormat(const QuantumInfo *quantum_info)$/;"	f
GetQuantumInfo	magick/methods.h	575;"	d
GetQuantumInfo	magick/quantum.c	/^MagickExport void GetQuantumInfo(const ImageInfo *image_info,$/;"	f
GetQuantumPixels	magick/methods.h	576;"	d
GetQuantumPixels	magick/quantum.c	/^MagickExport unsigned char *GetQuantumPixels(const QuantumInfo *quantum_info)$/;"	f
GetQuantumRange	magick/quantum-private.h	/^static inline MagickSizeType GetQuantumRange(const size_t depth)$/;"	f
GetQuantumType	magick/methods.h	577;"	d
GetQuantumType	magick/quantum.c	/^MagickExport QuantumType GetQuantumType(Image *image,ExceptionInfo *exception)$/;"	f
GetRandomInfoNormalize	magick/random.c	/^MagickPrivate double GetRandomInfoNormalize(RandomInfo *random_info)$/;"	f
GetRandomInfoSeed	magick/random.c	/^MagickPrivate unsigned long* GetRandomInfoSeed(RandomInfo *random_info)$/;"	f
GetRandomKey	magick/methods.h	578;"	d
GetRandomKey	magick/random.c	/^MagickExport StringInfo *GetRandomKey(RandomInfo *random_info,$/;"	f
GetRandomSecretKey	magick/random.c	/^MagickExport unsigned long GetRandomSecretKey(const RandomInfo *random_info)$/;"	f
GetRandomValue	magick/methods.h	579;"	d
GetRandomValue	magick/random.c	/^MagickExport double GetRandomValue(RandomInfo *random_info)$/;"	f
GetResizeFilterBlur	magick/resize.c	/^MagickExport MagickRealType GetResizeFilterBlur($/;"	f
GetResizeFilterCoefficient	magick/resize.c	/^MagickExport MagickRealType *GetResizeFilterCoefficient($/;"	f
GetResizeFilterScale	magick/resize.c	/^MagickExport MagickRealType GetResizeFilterScale($/;"	f
GetResizeFilterSupport	magick/methods.h	580;"	d
GetResizeFilterSupport	magick/resize.c	/^MagickExport MagickRealType GetResizeFilterSupport($/;"	f
GetResizeFilterWeight	magick/methods.h	581;"	d
GetResizeFilterWeight	magick/resize.c	/^MagickExport MagickRealType GetResizeFilterWeight($/;"	f
GetResizeFilterWeightingType	magick/resize.c	/^MagickExport ResizeWeightingFunctionType GetResizeFilterWeightingType($/;"	f
GetResizeFilterWindowSupport	magick/resize.c	/^MagickExport MagickRealType GetResizeFilterWindowSupport($/;"	f
GetResizeFilterWindowWeightingType	magick/resize.c	/^MagickExport ResizeWeightingFunctionType GetResizeFilterWindowWeightingType($/;"	f
GetRootMeanSquaredDistortion	magick/compare.c	/^static MagickBooleanType GetRootMeanSquaredDistortion(const Image *image,$/;"	f	file:
GetSearchPath	magick/nt-base.c	/^static inline const char *GetSearchPath(void)$/;"	f	file:
GetSignatureBlocksize	magick/methods.h	582;"	d
GetSignatureBlocksize	magick/signature.c	/^MagickExport unsigned int GetSignatureBlocksize($/;"	f
GetSignatureDigest	magick/methods.h	583;"	d
GetSignatureDigest	magick/signature.c	/^MagickExport const StringInfo *GetSignatureDigest($/;"	f
GetSignatureDigestsize	magick/methods.h	584;"	d
GetSignatureDigestsize	magick/signature.c	/^MagickExport unsigned int GetSignatureDigestsize($/;"	f
GetSimilarityMetric	magick/compare.c	/^static double GetSimilarityMetric(const Image *image,const Image *reference,$/;"	f	file:
GetSimilarityMetric	magick/deprecate.c	/^static double GetSimilarityMetric(const Image *image,const Image *reference,$/;"	f	file:
GetStandardDeviationPixelList	magick/statistic.c	/^static void GetStandardDeviationPixelList(PixelList *pixel_list,$/;"	f	file:
GetStopColorOffset	magick/draw.c	/^static inline double GetStopColorOffset(const GradientInfo *gradient,$/;"	f	file:
GetStreamInfoClientData	magick/methods.h	585;"	d
GetStreamInfoClientData	magick/stream.c	/^MagickExport const void *GetStreamInfoClientData(StreamInfo *stream_info)$/;"	f
GetStringInfoDatum	magick/methods.h	586;"	d
GetStringInfoDatum	magick/string.c	/^MagickExport unsigned char *GetStringInfoDatum(const StringInfo *string_info)$/;"	f
GetStringInfoLength	magick/methods.h	587;"	d
GetStringInfoLength	magick/string.c	/^MagickExport size_t GetStringInfoLength(const StringInfo *string_info)$/;"	f
GetStringInfoPath	magick/methods.h	588;"	d
GetStringInfoPath	magick/string.c	/^MagickExport const char *GetStringInfoPath(const StringInfo *string_info)$/;"	f
GetStrokeColor	magick/draw-private.h	/^static inline MagickBooleanType GetStrokeColor(const DrawInfo *draw_info,$/;"	f
GetThresholdMap	magick/methods.h	590;"	d
GetThresholdMap	magick/threshold.c	/^MagickExport ThresholdMap *GetThresholdMap(const char *map_id,$/;"	f
GetThresholdMapFile	magick/methods.h	589;"	d
GetThresholdMapFile	magick/threshold.c	/^MagickExport ThresholdMap *GetThresholdMapFile(const char *xml,$/;"	f
GetTimerInfo	magick/methods.h	591;"	d
GetTimerInfo	magick/timer.c	/^MagickExport void GetTimerInfo(TimerInfo *time_info)$/;"	f
GetTypeInfo	magick/methods.h	594;"	d
GetTypeInfo	magick/type.c	/^MagickExport const TypeInfo *GetTypeInfo(const char *name,$/;"	f
GetTypeInfoByFamily	magick/methods.h	592;"	d
GetTypeInfoByFamily	magick/type.c	/^MagickExport const TypeInfo *GetTypeInfoByFamily(const char *family,$/;"	f
GetTypeInfoList	magick/methods.h	593;"	d
GetTypeInfoList	magick/type.c	/^MagickExport const TypeInfo **GetTypeInfoList(const char *pattern,$/;"	f
GetTypeList	magick/methods.h	595;"	d
GetTypeList	magick/type.c	/^MagickExport char **GetTypeList(const char *pattern,size_t *number_fonts,$/;"	f
GetTypeMetrics	magick/annotate.c	/^MagickExport MagickBooleanType GetTypeMetrics(Image *image,$/;"	f
GetTypeMetrics	magick/methods.h	596;"	d
GetUTFCode	magick/token-private.h	/^static inline int GetUTFCode(const char *text)$/;"	f
GetUTFOctets	magick/token-private.h	/^static inline unsigned int GetUTFOctets(const char *text)$/;"	f
GetUserTime	magick/methods.h	597;"	d
GetUserTime	magick/timer.c	/^MagickExport double GetUserTime(TimerInfo *time_info)$/;"	f
GetValueFromHashmap	magick/hashmap.c	/^MagickExport void *GetValueFromHashmap(HashmapInfo *hashmap_info,$/;"	f
GetValueFromHashmap	magick/methods.h	598;"	d
GetValueFromLinkedList	magick/hashmap.c	/^MagickExport void *GetValueFromLinkedList(LinkedListInfo *list_info,$/;"	f
GetValueFromLinkedList	magick/methods.h	599;"	d
GetValueFromSplayTree	magick/methods.h	600;"	d
GetValueFromSplayTree	magick/splay-tree.c	/^MagickExport const void *GetValueFromSplayTree(SplayTreeInfo *splay_tree,$/;"	f
GetVirtualIndexQueue	magick/cache.c	/^MagickExport const IndexPacket *GetVirtualIndexQueue(const Image *image)$/;"	f
GetVirtualIndexQueue	magick/methods.h	602;"	d
GetVirtualIndexesFromCache	magick/cache.c	/^static const IndexPacket *GetVirtualIndexesFromCache(const Image *image)$/;"	f	file:
GetVirtualIndexesFromHandler	magick/cache-private.h	/^  *(*GetVirtualIndexesFromHandler)(const Image *);$/;"	t
GetVirtualIndexesFromNexus	magick/cache.c	/^MagickExport const IndexPacket *GetVirtualIndexesFromNexus(const Cache cache,$/;"	f
GetVirtualIndexesFromNexus	magick/methods.h	601;"	d
GetVirtualIndexesFromStream	magick/stream.c	/^static const IndexPacket *GetVirtualIndexesFromStream(const Image *image)$/;"	f	file:
GetVirtualMemoryBlob	magick/memory.c	/^MagickExport void *GetVirtualMemoryBlob(const MemoryInfo *memory_info)$/;"	f
GetVirtualPixelCache	magick/cache.c	/^static const PixelPacket *GetVirtualPixelCache(const Image *image,$/;"	f	file:
GetVirtualPixelHandler	magick/cache-private.h	/^  *(*GetVirtualPixelHandler)(const Image *,const VirtualPixelMethod,$/;"	t
GetVirtualPixelQueue	magick/cache.c	/^MagickExport const PixelPacket *GetVirtualPixelQueue(const Image *image)$/;"	f
GetVirtualPixelQueue	magick/methods.h	603;"	d
GetVirtualPixelStream	magick/stream.c	/^static const PixelPacket *GetVirtualPixelStream(const Image *image,$/;"	f	file:
GetVirtualPixels	magick/cache.c	/^MagickExport const PixelPacket *GetVirtualPixels(const Image *image,$/;"	f
GetVirtualPixels	magick/methods.h	606;"	d
GetVirtualPixelsCache	magick/cache.c	/^static const PixelPacket *GetVirtualPixelsCache(const Image *image)$/;"	f	file:
GetVirtualPixelsFromNexus	magick/cache.c	/^MagickExport const PixelPacket *GetVirtualPixelsFromNexus(const Image *image,$/;"	f
GetVirtualPixelsFromNexus	magick/methods.h	604;"	d
GetVirtualPixelsHandler	magick/cache-private.h	/^  *(*GetVirtualPixelsHandler)(const Image *);$/;"	t
GetVirtualPixelsNexus	magick/cache.c	/^MagickExport const PixelPacket *GetVirtualPixelsNexus(const Cache cache,$/;"	f
GetVirtualPixelsNexus	magick/methods.h	605;"	d
GetVirtualPixelsStream	magick/stream.c	/^static const PixelPacket *GetVirtualPixelsStream(const Image *image)$/;"	f	file:
GetWandViewMethod	wand/wand-view.h	/^  (*GetWandViewMethod)(const WandView *,const ssize_t,const int,void *),$/;"	t
GetXMLTreeAttribute	magick/methods.h	607;"	d
GetXMLTreeAttribute	magick/xml-tree.c	/^MagickExport const char *GetXMLTreeAttribute(XMLTreeInfo *xml_info,$/;"	f
GetXMLTreeAttributes	magick/methods.h	608;"	d
GetXMLTreeAttributes	magick/xml-tree.c	/^MagickExport MagickBooleanType GetXMLTreeAttributes(const XMLTreeInfo *xml_info,$/;"	f
GetXMLTreeChild	magick/methods.h	609;"	d
GetXMLTreeChild	magick/xml-tree.c	/^MagickExport XMLTreeInfo *GetXMLTreeChild(XMLTreeInfo *xml_info,const char *tag)$/;"	f
GetXMLTreeContent	magick/methods.h	610;"	d
GetXMLTreeContent	magick/xml-tree.c	/^MagickExport const char *GetXMLTreeContent(XMLTreeInfo *xml_info)$/;"	f
GetXMLTreeOrdered	magick/methods.h	611;"	d
GetXMLTreeOrdered	magick/xml-tree.c	/^MagickExport XMLTreeInfo *GetXMLTreeOrdered(XMLTreeInfo *xml_info)$/;"	f
GetXMLTreePath	magick/methods.h	612;"	d
GetXMLTreePath	magick/xml-tree.c	/^MagickExport XMLTreeInfo *GetXMLTreePath(XMLTreeInfo *xml_info,const char *path)$/;"	f
GetXMLTreeProcessingInstructions	magick/methods.h	613;"	d
GetXMLTreeProcessingInstructions	magick/xml-tree.c	/^MagickExport const char **GetXMLTreeProcessingInstructions($/;"	f
GetXMLTreeSibling	magick/methods.h	614;"	d
GetXMLTreeSibling	magick/xml-tree.c	/^MagickExport XMLTreeInfo *GetXMLTreeSibling(XMLTreeInfo *xml_info)$/;"	f
GetXMLTreeTag	magick/methods.h	615;"	d
GetXMLTreeTag	magick/xml-tree.c	/^MagickExport const char *GetXMLTreeTag(XMLTreeInfo *xml_info)$/;"	f
GetXMPProperty	magick/property.c	/^static MagickBooleanType GetXMPProperty(const Image *image,const char *property)$/;"	f	file:
GhostInfo	magick/delegate-private.h	/^} GhostInfo;$/;"	t	typeref:struct:_GhostInfo
GhostInfo_	magick/nt-base.h	/^  GhostInfo_;$/;"	t	typeref:struct:_GhostInfo
GhostlineCode	magick/draw.c	/^  GhostlineCode,$/;"	e	enum:__anon17	file:
GlobExpression	magick/methods.h	616;"	d
GlobExpression	magick/token.c	/^MagickExport MagickBooleanType GlobExpression(const char *expression,$/;"	f
GlobalOptionFlag	magick/option.h	/^  GlobalOptionFlag          = 0x0010,  \/* Sets Global Option, no image needed *\/$/;"	e	enum:__anon88
GradientImage	magick/methods.h	617;"	d
GradientImage	magick/paint.c	/^MagickExport MagickBooleanType GradientImage(Image *image,$/;"	f
GradientInfo	magick/draw.h	/^} GradientInfo;$/;"	t	typeref:struct:_GradientInfo
GradientReference	magick/draw.h	/^  GradientReference$/;"	e	enum:__anon44
GradientStatistic	magick/statistic.h	/^  GradientStatistic,$/;"	e	enum:__anon91
GradientType	magick/draw.h	/^} GradientType;$/;"	t	typeref:enum:__anon39
GravityAdjustGeometry	magick/geometry.c	/^MagickExport void GravityAdjustGeometry(const size_t width,$/;"	f
GravityAdjustGeometry	magick/methods.h	618;"	d
GravityOptions	magick/option.c	/^  GravityOptions[] =$/;"	v	file:
GravityType	magick/geometry.h	/^} GravityType;$/;"	t	typeref:enum:__anon15
GrayAlphaQuantum	magick/quantum.h	/^  GrayAlphaQuantum,$/;"	e	enum:__anon7
GrayChannel	magick/magick-type.h	/^  GrayChannel = 0x0001,$/;"	e	enum:__anon9
GrayChannels	magick/magick-type.h	/^  GrayChannels = 0x0080,$/;"	e	enum:__anon9
GrayPadQuantum	magick/quantum.h	/^  GrayPadQuantum,  \/* deprecated *\/$/;"	e	enum:__anon7
GrayQuantum	magick/quantum.h	/^  GrayQuantum,$/;"	e	enum:__anon7
GrayVirtualPixelMethod	magick/cache-view.h	/^  GrayVirtualPixelMethod,$/;"	e	enum:__anon63
GrayscaleCommand	magick/display.c	/^  GrayscaleCommand,$/;"	e	enum:__anon20	file:
GrayscaleImage	magick/enhance.c	/^MagickExport MagickBooleanType GrayscaleImage(Image *image,$/;"	f
GrayscaleImageTag	magick/enhance.c	2406;"	d	file:
GrayscaleMatteType	magick/image.h	/^  GrayscaleMatteType,$/;"	e	enum:__anon78
GrayscalePreview	magick/effect.h	/^  GrayscalePreview,$/;"	e	enum:__anon56
GrayscaleType	magick/image.h	/^  GrayscaleType,$/;"	e	enum:__anon78
GreaterThanEqualOperator	magick/fx.c	103;"	d	file:
GreaterValue	magick/geometry.h	/^  GreaterValue = 0x8000,   \/* '>'  resize larger - spacial use flag *\/$/;"	e	enum:__anon14
Green	magick/segment.c	/^  Green = 1,$/;"	v	file:
GreenChannel	magick/magick-type.h	/^  GreenChannel = 0x0002,$/;"	e	enum:__anon9
GreenQuantum	magick/quantum.h	/^  GreenQuantum,$/;"	e	enum:__anon7
GreenShift	magick/quantize.c	1438;"	d	file:
Group4Compression	magick/compress.h	/^  Group4Compression,$/;"	e	enum:__anon13
HAVE_CONFIG_H	magick/studio.h	246;"	d
HAVE_CONFIG_H	wand/studio.h	248;"	d
HAVE_STRERROR	magick/studio.h	103;"	d
HAVE_STRERROR	wand/studio.h	108;"	d
HAVE_TIFFCONF_H	magick/studio.h	332;"	d
HAVE_TIFFCONF_H	wand/studio.h	334;"	d
HCLColorspace	magick/colorspace.h	/^  HCLColorspace,$/;"	e	enum:__anon55
HCLComposite	magick/composite.c	/^static void HCLComposite(const double hue,const double chroma,const double luma,$/;"	f	file:
HCLpColorspace	magick/colorspace.h	/^  HCLpColorspace,$/;"	e	enum:__anon55
HSBColorspace	magick/colorspace.h	/^  HSBColorspace,$/;"	e	enum:__anon55
HSIColorspace	magick/colorspace.h	/^  HSIColorspace,$/;"	e	enum:__anon55
HSLColorspace	magick/colorspace.h	/^  HSLColorspace,$/;"	e	enum:__anon55
HSLTransform	magick/deprecate.c	/^MagickExport void HSLTransform(const double hue,const double saturation,$/;"	f
HSLTransform	magick/methods.h	624;"	d
HSP	image_validator/ImageValidator.c	/^    enum { REC709, REC601, HSP } conversion;$/;"	e	enum:__anon100::__anon101	file:
HSVColorspace	magick/colorspace.h	/^  HSVColorspace,            \/* alias for HSB *\/$/;"	e	enum:__anon55
HWBColorspace	magick/colorspace.h	/^  HWBColorspace,$/;"	e	enum:__anon55
HaldClutImage	magick/enhance.c	/^MagickExport MagickBooleanType HaldClutImage(Image *image,$/;"	f
HaldClutImage	magick/methods.h	620;"	d
HaldClutImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType HaldClutImageChannel(Image *image,$/;"	f
HaldClutImageChannel	magick/methods.h	619;"	d
HaldClutImageTag	magick/enhance.c	2623;"	d	file:
HalfSizeCommand	magick/display.c	/^  HalfSizeCommand,$/;"	e	enum:__anon20	file:
HalfToSinglePrecision	magick/quantum-private.h	/^static inline float HalfToSinglePrecision(const unsigned short half)$/;"	f
Hamming	magick/resize.c	/^static MagickRealType Hamming(const MagickRealType x,$/;"	f	file:
HammingFilter	magick/resample.h	/^  HammingFilter,$/;"	e	enum:__anon76
HammingWeightingFunction	magick/resize-private.h	/^  HammingWeightingFunction,$/;"	e	enum:__anon30
HandlerInfo	magick/log.c	/^} HandlerInfo;$/;"	t	typeref:struct:_HandlerInfo	file:
Hanning	magick/resize.c	/^static MagickRealType Hanning(const MagickRealType x,$/;"	f	file:
HanningFilter	magick/resample.h	/^  HanningFilter,$/;"	e	enum:__anon76
HanningWeightingFunction	magick/resize-private.h	/^  HanningWeightingFunction,$/;"	e	enum:__anon30
HardLight	magick/composite.c	/^static MagickRealType HardLight(const MagickRealType Sca,$/;"	f	file:
HardLightCompositeOp	magick/composite.h	/^  HardLightCompositeOp,$/;"	e	enum:__anon68
HashPointerType	magick/hashmap.c	/^MagickExport size_t HashPointerType(const void *pointer)$/;"	f
HashPointerType	magick/methods.h	621;"	d
HashSize	magick/compress.c	385;"	d	file:
HashStringInfoType	magick/hashmap.c	/^MagickExport size_t HashStringInfoType(const void *string_info)$/;"	f
HashStringInfoType	magick/methods.h	622;"	d
HashStringType	magick/hashmap.c	/^MagickExport size_t HashStringType(const void *string)$/;"	f
HashStringType	magick/methods.h	623;"	d
HashmapInfo	magick/hashmap.h	/^  HashmapInfo;$/;"	t	typeref:struct:_HashmapInfo
HeadPath	magick/utility.h	/^  HeadPath,$/;"	e	enum:__anon31
HeightValue	magick/geometry.h	/^  HeightValue = 0x0008,$/;"	e	enum:__anon14
HeightValue	magick/geometry.h	38;"	d
HelpCommand	magick/animate.c	/^  HelpCommand,$/;"	e	enum:__anon85	file:
HelpCommand	magick/display.c	/^  HelpCommand,$/;"	e	enum:__anon20	file:
HermiteFilter	magick/resample.h	/^  HermiteFilter,$/;"	e	enum:__anon76
HighlightBitmap	magick/animate.c	/^  HighlightBitmap[8] =$/;"	v	file:
HighlightBitmap	magick/display.c	/^  HighlightBitmap[8] =$/;"	v	file:
HighlightFactor	magick/decorate.c	690;"	d	file:
HighlightHeight	magick/animate.c	233;"	d	file:
HighlightHeight	magick/display.c	1512;"	d	file:
HighlightModulate	magick/decorate.c	67;"	d	file:
HighlightState	magick/animate.c	81;"	d	file:
HighlightWidth	magick/animate.c	232;"	d	file:
HighlightWidth	magick/display.c	1511;"	d	file:
HistogramCompare	magick/histogram.c	/^static int HistogramCompare(const void *x,const void *y)$/;"	f	file:
HistogramImageTag	magick/histogram.c	1120;"	d	file:
HitAndMissMorphology	magick/morphology.h	/^  HitAndMissMorphology,         \/* Foreground\/Background pattern matching *\/$/;"	e	enum:__anon70
HorizontalChopCommand	magick/display.c	/^  HorizontalChopCommand,$/;"	e	enum:__anon21	file:
HorizontalFilter	magick/resize.c	/^static MagickBooleanType HorizontalFilter(const ResizeFilter *resize_filter,$/;"	f	file:
HorizontalRotateCommand	magick/display.c	/^  HorizontalRotateCommand,$/;"	e	enum:__anon21	file:
HorizontalTileEdgeVirtualPixelMethod	magick/cache-view.h	/^  HorizontalTileEdgeVirtualPixelMethod,$/;"	e	enum:__anon63
HorizontalTileVirtualPixelMethod	magick/cache-view.h	/^  HorizontalTileVirtualPixelMethod,$/;"	e	enum:__anon63
HoughLineImage	magick/feature.c	/^MagickExport Image *HoughLineImage(const Image *image,const size_t width,$/;"	f
HoughLineImageTag	magick/feature.c	1792;"	d	file:
HueCommand	magick/display.c	/^  HueCommand,$/;"	e	enum:__anon20	file:
HueCompositeOp	magick/composite.h	/^  HueCompositeOp,$/;"	e	enum:__anon68
HuePreview	magick/effect.h	/^  HuePreview,$/;"	e	enum:__anon56
HueToRGB	magick/deprecate.c	/^static inline MagickRealType HueToRGB(MagickRealType m1,MagickRealType m2,$/;"	f	file:
HuffmanDecodeImage	magick/compress.c	/^MagickExport MagickBooleanType HuffmanDecodeImage(Image *image)$/;"	f
HuffmanDecodeImage	magick/methods.h	625;"	d
HuffmanEncodeImage	magick/compress.c	/^MagickExport MagickBooleanType HuffmanEncodeImage(const ImageInfo *image_info,$/;"	f
HuffmanEncodeImage	magick/methods.h	626;"	d
HuffmanOutputCode	magick/compress.c	691;"	d	file:
HuffmanTable	magick/compress.c	/^typedef struct HuffmanTable$/;"	s	file:
HuffmanTable	magick/compress.c	/^} HuffmanTable;$/;"	t	typeref:struct:HuffmanTable	file:
HugeHashmapSize	magick/hashmap.h	28;"	d
Hull	magick/effect.c	/^static void Hull(const Image *image,const ssize_t x_offset,$/;"	f	file:
I	magick/statistic.h	/^    I[32];$/;"	m	struct:_ChannelMoments
I0	magick/resize.c	/^static MagickRealType I0(MagickRealType x)$/;"	f	file:
I0	magick/resize.c	1301;"	d	file:
IN_OZONE	magick/token.c	826;"	d	file:
IN_QUOTE	magick/token.c	825;"	d	file:
IN_TOKEN	magick/token.c	824;"	d	file:
IN_WHITE	magick/token.c	823;"	d	file:
IOMode	magick/blob.h	/^  IOMode$/;"	e	enum:__anon18
IdentifyImage	magick/identify.c	/^MagickExport MagickBooleanType IdentifyImage(Image *image,FILE *file,$/;"	f
IdentifyImage	magick/methods.h	627;"	d
IdentifyValidate	magick/option.h	/^  IdentifyValidate = 0x00080,$/;"	e	enum:__anon87
IdentityAffine	magick/deprecate.c	/^MagickExport void IdentityAffine(AffineMatrix *affine)$/;"	f
IdentityAffine	magick/methods.h	628;"	d
Image	magick/magick-type.h	/^typedef struct _Image Image;$/;"	t	typeref:struct:_Image
ImageAnnotateHelp	magick/display.c	/^  *ImageAnnotateHelp[] =$/;"	v	file:
ImageAttribute	magick/deprecate.h	/^} ImageAttribute;$/;"	t	typeref:struct:_ImageAttribute
ImageChopHelp	magick/display.c	/^  *ImageChopHelp[] =$/;"	v	file:
ImageColorEditHelp	magick/display.c	/^  *ImageColorEditHelp[] =$/;"	v	file:
ImageCompositeHelp	magick/display.c	/^  *ImageCompositeHelp[] =$/;"	v	file:
ImageCopyHelp	magick/display.c	/^  *ImageCopyHelp[] =$/;"	v	file:
ImageCropHelp	magick/display.c	/^  *ImageCropHelp[] =$/;"	v	file:
ImageCutHelp	magick/display.c	/^  *ImageCutHelp[] =$/;"	v	file:
ImageDrawHelp	magick/display.c	/^  *ImageDrawHelp[] =$/;"	v	file:
ImageElement	magick/xwindow-private.h	/^  ImageElement$/;"	e	enum:__anon27
ImageError	magick/exception.h	/^  ImageError = 465,$/;"	e	enum:__anon84
ImageEvent	magick/log.h	/^  ImageEvent = 0x00200,$/;"	e	enum:__anon93
ImageFatalError	magick/exception.h	/^  ImageFatalError = 765,$/;"	e	enum:__anon84
ImageFilterHandler	magick/module.h	/^  ImageFilterHandler(Image **,const int,const char **,ExceptionInfo *);$/;"	t
ImageInfo	magick/magick-type.h	/^typedef struct _ImageInfo ImageInfo;$/;"	t	typeref:struct:_ImageInfo
ImageInfoOptionFlag	magick/option.h	/^  ImageInfoOptionFlag       = 0x0002,  \/* Sets ImageInfo, no image needed *\/$/;"	e	enum:__anon88
ImageInfoRegistryType	magick/registry.h	/^  ImageInfoRegistryType,$/;"	e	enum:__anon32
ImageLayerMethod	magick/layer.h	/^} ImageLayerMethod;$/;"	t	typeref:enum:__anon72
ImageListToArray	magick/list.c	/^MagickExport Image **ImageListToArray(const Image *images,$/;"	f
ImageListToArray	magick/methods.h	629;"	d
ImageMagickOpenCLMode	magick/opencl.h	/^} ImageMagickOpenCLMode ;$/;"	t	typeref:enum:__anon62
ImageMatteEditHelp	magick/display.c	/^  *ImageMatteEditHelp[] =$/;"	v	file:
ImagePanHelp	magick/display.c	/^  *ImagePanHelp[] =$/;"	v	file:
ImagePasteHelp	magick/display.c	/^  *ImagePasteHelp[] =$/;"	v	file:
ImagePrimitive	magick/draw.h	/^  ImagePrimitive,$/;"	e	enum:__anon43
ImageROIHelp	magick/display.c	/^  *ImageROIHelp[] =$/;"	v	file:
ImageRegistryType	magick/registry.h	/^  ImageRegistryType,$/;"	e	enum:__anon32
ImageRotateHelp	magick/display.c	/^  *ImageRotateHelp[] =$/;"	v	file:
ImageStack	wand/mogrify-private.h	/^} ImageStack;$/;"	t	typeref:struct:_ImageStack
ImageToBlob	magick/blob.c	/^MagickExport unsigned char *ImageToBlob(const ImageInfo *image_info,$/;"	f
ImageToBlob	magick/methods.h	631;"	d
ImageToFile	magick/blob.c	/^MagickExport MagickBooleanType ImageToFile(Image *image,char *filename,$/;"	f
ImageToFile	magick/methods.h	632;"	d
ImageTransmitType	magick/image.h	/^  ImageTransmitType$/;"	e	enum:__anon82
ImageType	magick/image.h	/^} ImageType;$/;"	t	typeref:enum:__anon78
ImageView	magick/image-view.h	/^  ImageView;$/;"	t	typeref:struct:_ImageView
ImageWarning	magick/exception.h	/^  ImageWarning = 365,$/;"	e	enum:__anon84
ImagesToBlob	magick/blob.c	/^MagickExport unsigned char *ImagesToBlob(const ImageInfo *image_info,$/;"	f
ImagesToBlob	magick/methods.h	630;"	d
ImplicitFormatType	magick/magick.h	/^  ImplicitFormatType,$/;"	e	enum:__anon58
ImplodeCommand	magick/display.c	/^  ImplodeCommand,$/;"	e	enum:__anon20	file:
ImplodeImage	magick/fx.c	/^MagickExport Image *ImplodeImage(const Image *image,const double amount,$/;"	f
ImplodeImage	magick/methods.h	633;"	d
ImplodeImageTag	magick/fx.c	3220;"	d	file:
ImplodePreview	magick/effect.h	/^  ImplodePreview,$/;"	e	enum:__anon56
ImportAlphaQuantum	magick/quantum-import.c	/^static void ImportAlphaQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportBGRAQuantum	magick/quantum-import.c	/^static void ImportBGRAQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportBGRQuantum	magick/quantum-import.c	/^static void ImportBGRQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportBlackQuantum	magick/quantum-import.c	/^static void ImportBlackQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportBlueQuantum	magick/quantum-import.c	/^static void ImportBlueQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportCMYKAQuantum	magick/quantum-import.c	/^static void ImportCMYKAQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportCMYKQuantum	magick/quantum-import.c	/^static void ImportCMYKQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportCbYCrYQuantum	magick/quantum-import.c	/^static void ImportCbYCrYQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportCharPixel	magick/pixel.c	/^static void ImportCharPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportDoublePixel	magick/pixel.c	/^static void ImportDoublePixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportExportValidate	magick/option.h	/^  ImportExportValidate = 0x00100,$/;"	e	enum:__anon87
ImportFloatPixel	magick/pixel.c	/^static void ImportFloatPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportGrayAlphaQuantum	magick/quantum-import.c	/^static void ImportGrayAlphaQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportGrayQuantum	magick/quantum-import.c	/^static void ImportGrayQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportGreenQuantum	magick/quantum-import.c	/^static void ImportGreenQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportImagePixels	magick/methods.h	634;"	d
ImportImagePixels	magick/pixel.c	/^MagickExport MagickBooleanType ImportImagePixels(Image *image,const ssize_t x,$/;"	f
ImportIndexAlphaQuantum	magick/quantum-import.c	/^static void ImportIndexAlphaQuantum(const Image *image,$/;"	f	file:
ImportIndexQuantum	magick/quantum-import.c	/^static void ImportIndexQuantum(const Image *image,QuantumInfo *quantum_info,$/;"	f	file:
ImportIntegerPixel	magick/pixel.c	/^static void ImportIntegerPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportLongPixel	magick/pixel.c	/^static void ImportLongPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportQuantumPixel	magick/pixel.c	/^static void ImportQuantumPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImportQuantumPixels	magick/methods.h	635;"	d
ImportQuantumPixels	magick/quantum-import.c	/^MagickExport size_t ImportQuantumPixels(Image *image,CacheView *image_view,$/;"	f
ImportRGBAQuantum	magick/quantum-import.c	/^static void ImportRGBAQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportRGBQuantum	magick/quantum-import.c	/^static void ImportRGBQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportRedQuantum	magick/quantum-import.c	/^static void ImportRedQuantum(QuantumInfo *quantum_info,$/;"	f	file:
ImportShortPixel	magick/pixel.c	/^static void ImportShortPixel(Image *image,const RectangleInfo *roi,$/;"	f	file:
ImpulseNoise	magick/fx.h	/^  ImpulseNoise,$/;"	e	enum:__anon67
ImpulseNoiseEvaluateOperator	magick/statistic.h	/^  ImpulseNoiseEvaluateOperator,$/;"	e	enum:__anon89
In	magick/composite.c	/^static inline MagickRealType In(const MagickRealType p,const MagickRealType Sa,$/;"	f	file:
InCompositeOp	magick/composite.h	/^  InCompositeOp,$/;"	e	enum:__anon68
IncreaseHashmapCapacity	magick/hashmap.c	/^static MagickBooleanType IncreaseHashmapCapacity(HashmapInfo *hashmap_info)$/;"	f	file:
IncrementCipherNonce	magick/cipher.c	/^static inline void IncrementCipherNonce(const size_t length,$/;"	f	file:
IncrementRandomNonce	magick/random.c	/^static inline void IncrementRandomNonce(StringInfo *nonce)$/;"	f	file:
IndexAlphaQuantum	magick/quantum.h	/^  IndexAlphaQuantum,$/;"	e	enum:__anon7
IndexChannel	magick/magick-type.h	/^  IndexChannel = 0x0020,$/;"	e	enum:__anon9
IndexPacket	magick/pixel.h	/^typedef Quantum IndexPacket;$/;"	t
IndexQuantum	magick/quantum.h	/^  IndexQuantum,$/;"	e	enum:__anon7
InfoCommand	magick/animate.c	/^  InfoCommand,$/;"	e	enum:__anon85	file:
InfoCommand	magick/display.c	/^  InfoCommand,$/;"	e	enum:__anon20	file:
InheritException	magick/exception.c	/^MagickExport void InheritException(ExceptionInfo *exception,$/;"	f
InheritException	magick/methods.h	637;"	d
InitalBounds	magick/distort.c	1767;"	d	file:
InitializeHashTable	magick/compress.c	391;"	d	file:
InitializeHistogram	magick/segment.c	/^static void InitializeHistogram(const Image *image,ssize_t **histogram,$/;"	f	file:
InitializeIntervalTree	magick/segment.c	/^static IntervalTree *InitializeIntervalTree(const ZeroCrossing *zero_crossing,$/;"	f	file:
InitializeList	magick/segment.c	/^static void InitializeList(IntervalTree **list,ssize_t *number_nodes,$/;"	f	file:
InitializeMagick	magick/deprecate.c	/^MagickExport void InitializeMagick(const char *path)$/;"	f
InitializeMagick	magick/methods.h	638;"	d
InitializeMagickMutex	magick/semaphore-private.h	/^static inline void InitializeMagickMutex(void)$/;"	f
InitializeModuleList	magick/module.c	/^MagickExport MagickBooleanType InitializeModuleList(ExceptionInfo *exception)$/;"	f
InitializeRoundKey	magick/cipher.c	/^static void InitializeRoundKey(const unsigned char *ciphertext,$/;"	f	file:
InitializeSignature	magick/methods.h	639;"	d
InitializeSignature	magick/signature.c	/^MagickExport void InitializeSignature(SignatureInfo *signature_info)$/;"	f
InjectImageBlob	magick/blob.c	/^MagickExport MagickBooleanType InjectImageBlob(const ImageInfo *image_info,$/;"	f
InjectImageBlob	magick/methods.h	640;"	d
InputBit	magick/compress.c	401;"	d	file:
InsertFreeBlock	magick/memory.c	/^static inline void InsertFreeBlock(void *block,const size_t i)$/;"	f	file:
InsertImageInList	magick/list.c	/^MagickExport void InsertImageInList(Image **images,Image *insert)$/;"	f
InsertImageInList	magick/methods.h	641;"	d
InsertImageInWand	wand/magick-image.c	/^static inline MagickBooleanType InsertImageInWand(MagickWand *wand,$/;"	f	file:
InsertPixelList	magick/statistic.c	/^static inline void InsertPixelList(const Image *image,const PixelPacket *pixel,$/;"	f	file:
InsertTagIntoXMLTree	magick/methods.h	642;"	d
InsertTagIntoXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *InsertTagIntoXMLTree(XMLTreeInfo *xml_info,$/;"	f
InsertValueInLinkedList	magick/hashmap.c	/^MagickExport MagickBooleanType InsertValueInLinkedList($/;"	f
InsertValueInLinkedList	magick/methods.h	643;"	d
InsertValueInSortedLinkedList	magick/hashmap.c	/^MagickExport MagickBooleanType InsertValueInSortedLinkedList($/;"	f
InsertValueInSortedLinkedList	magick/methods.h	644;"	d
IntegerInterpolatePixel	magick/pixel.h	/^  IntegerInterpolatePixel,           \/* Integer (floor) interpolation *\/$/;"	e	enum:__anon52
IntegerPixel	magick/constitute.h	/^  IntegerPixel,$/;"	e	enum:__anon64
IntegralRotateImage	magick/shear.c	/^MagickExport Image *IntegralRotateImage(const Image *image,size_t rotations,$/;"	f
Intensity	magick/deprecate.h	53;"	d
IntensityCompare	magick/colormap.c	/^static int IntensityCompare(const void *x,const void *y)$/;"	f	file:
IntensityCompare	magick/quantize.c	/^static int IntensityCompare(const void *x,const void *y)$/;"	f	file:
IntensityCompare	magick/statistic.c	/^static int IntensityCompare(const void *x,const void *y)$/;"	f	file:
IntentOptions	magick/option.c	/^  IntentOptions[] =$/;"	v	file:
InterlaceOptions	magick/option.c	/^  InterlaceOptions[] =$/;"	v	file:
InterlaceType	magick/image.h	/^} InterlaceType;$/;"	t	typeref:enum:__anon79
InterpolateMagickPixelPacket	magick/pixel.c	/^MagickExport MagickBooleanType InterpolateMagickPixelPacket(const Image *image,$/;"	f
InterpolateOptions	magick/option.c	/^  InterpolateOptions[] =$/;"	v	file:
InterpolatePixelColor	magick/deprecate.c	/^MagickExport MagickPixelPacket InterpolatePixelColor(const Image *image,$/;"	f
InterpolatePixelColor	magick/methods.h	645;"	d
InterpolatePixelMethod	magick/pixel.h	/^} InterpolatePixelMethod;$/;"	t	typeref:enum:__anon52
InterpolativeResizeImage	magick/resize.c	/^MagickExport Image *InterpolativeResizeImage(const Image *image,$/;"	f
InterpolativeResizeImageTag	magick/resize.c	1674;"	d	file:
InterpretImageAttributes	magick/deprecate.c	/^MagickExport char *InterpretImageAttributes(const ImageInfo *image_info,$/;"	f
InterpretImageAttributes	magick/methods.h	646;"	d
InterpretImageFilename	magick/image.c	/^MagickExport size_t InterpretImageFilename(const ImageInfo *image_info,$/;"	f
InterpretImageFilename	magick/methods.h	647;"	d
InterpretImageProperties	magick/methods.h	648;"	d
InterpretImageProperties	magick/property.c	/^MagickExport char *InterpretImageProperties(const ImageInfo *image_info,$/;"	f
InterpretLocaleValue	magick/locale.c	/^MagickExport double InterpretLocaleValue(const char *restrict string,$/;"	f
InterpretSiPrefixValue	magick/string.c	/^MagickExport double InterpretSiPrefixValue(const char *restrict string,$/;"	f
IntervalTree	magick/segment.c	/^} IntervalTree;$/;"	t	typeref:struct:_IntervalTree	file:
InverseAddRoundKey	magick/cipher.c	/^static inline void InverseAddRoundKey(const unsigned int *alpha,$/;"	f	file:
InverseAffineMatrix	magick/draw.c	/^static AffineMatrix InverseAffineMatrix(const AffineMatrix *affine)$/;"	f	file:
InverseColorInterpolate	magick/distort.h	/^  InverseColorInterpolate$/;"	e	enum:__anon51
InverseFourier	magick/fourier.c	/^static MagickBooleanType InverseFourier(FourierInfo *fourier_info,$/;"	f	file:
InverseFourierTransform	magick/fourier.c	/^static MagickBooleanType InverseFourierTransform(FourierInfo *fourier_info,$/;"	f	file:
InverseFourierTransformChannel	magick/fourier.c	/^static MagickBooleanType InverseFourierTransformChannel($/;"	f	file:
InverseFourierTransformImage	magick/fourier.c	/^MagickExport Image *InverseFourierTransformImage(const Image *magnitude_image,$/;"	f
InverseFourierTransformImage	magick/methods.h	649;"	d
InverseLog	magick/cipher.c	/^  InverseLog[256] =$/;"	v	file:
InverseQuadrantSwap	magick/fourier.c	/^static MagickBooleanType InverseQuadrantSwap(const size_t width,$/;"	f	file:
InverseScaledSigmoidal	magick/enhance.c	/^static inline double InverseScaledSigmoidal(const double a,const double b,$/;"	f	file:
InversesRGBCompandor	magick/deprecate.c	/^MagickExport MagickRealType InversesRGBCompandor(const MagickRealType pixel)$/;"	f
InvertAffineCoefficients	magick/distort.c	/^static void InvertAffineCoefficients(const double *coeff,double *inverse)$/;"	f	file:
InvertPerspectiveCoefficients	magick/distort.c	/^static void InvertPerspectiveCoefficients(const double *coeff,$/;"	f	file:
InvokeDelegate	magick/delegate.c	/^MagickExport MagickBooleanType InvokeDelegate(ImageInfo *image_info,$/;"	f
InvokeDelegate	magick/methods.h	650;"	d
InvokeDynamicImageFilter	magick/methods.h	651;"	d
InvokeDynamicImageFilter	magick/module.c	/^MagickExport MagickBooleanType InvokeDynamicImageFilter(const char *tag,$/;"	f
InvokeStaticImageFilter	magick/static.c	/^MagickExport MagickBooleanType InvokeStaticImageFilter(const char *tag,$/;"	f
IsAuthenticPixel	magick/feature.c	/^static inline MagickBooleanType IsAuthenticPixel(const Image *image,$/;"	f	file:
IsAuthenticPixelCache	magick/cache.c	/^static inline MagickBooleanType IsAuthenticPixelCache($/;"	f	file:
IsBasenameSeparator	magick/studio.h	260;"	d
IsBasenameSeparator	magick/studio.h	272;"	d
IsBasenameSeparator	magick/studio.h	286;"	d
IsBasenameSeparator	magick/studio.h	298;"	d
IsBasenameSeparator	magick/studio.h	319;"	d
IsBasenameSeparator	wand/studio.h	262;"	d
IsBasenameSeparator	wand/studio.h	274;"	d
IsBasenameSeparator	wand/studio.h	288;"	d
IsBasenameSeparator	wand/studio.h	300;"	d
IsBasenameSeparator	wand/studio.h	321;"	d
IsBlobExempt	magick/blob.c	/^MagickExport MagickBooleanType IsBlobExempt(const Image *image)$/;"	f
IsBlobExempt	magick/methods.h	652;"	d
IsBlobSeekable	magick/blob.c	/^MagickExport MagickBooleanType IsBlobSeekable(const Image *image)$/;"	f
IsBlobSeekable	magick/methods.h	653;"	d
IsBlobTemporary	magick/blob.c	/^MagickExport MagickBooleanType IsBlobTemporary(const Image *image)$/;"	f
IsBlobTemporary	magick/methods.h	654;"	d
IsBoundsCleared	magick/layer.c	/^static MagickBooleanType IsBoundsCleared(const Image *image1,$/;"	f	file:
IsCMYKColorspace	magick/colorspace-private.h	/^static inline MagickBooleanType IsCMYKColorspace($/;"	f
IsCoderTreeInstantiated	magick/coder.c	/^static MagickBooleanType IsCoderTreeInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsColorCacheInstantiated	magick/color.c	/^static MagickBooleanType IsColorCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsColorEqual	magick/color-private.h	/^static inline MagickBooleanType IsColorEqual(const PixelPacket *p,$/;"	f
IsColorEqual	wand/drawing-wand.c	/^static inline MagickBooleanType IsColorEqual(const PixelPacket *p,$/;"	f	file:
IsColorSimilar	magick/color.c	/^MagickExport MagickBooleanType IsColorSimilar(const Image *image,$/;"	f
IsColorSimilar	magick/methods.h	655;"	d
IsCommandOption	magick/methods.h	670;"	d
IsCommandOption	magick/option.c	/^MagickExport MagickBooleanType IsCommandOption(const char *option)$/;"	f
IsConfigureCacheInstantiated	magick/configure.c	/^static MagickBooleanType IsConfigureCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsDelegateCacheInstantiated	magick/delegate.c	/^static MagickBooleanType IsDelegateCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsDrawingWand	wand/drawing-wand.c	/^WandExport MagickBooleanType IsDrawingWand(const DrawingWand *wand)$/;"	f
IsEventLogging	magick/log.c	/^MagickExport MagickBooleanType IsEventLogging(void)$/;"	f
IsEventLogging	magick/methods.h	656;"	d
IsFileDescriptorLimitExceeded	magick/cache.c	86;"	d	file:
IsGeometry	magick/geometry.c	/^MagickExport MagickBooleanType IsGeometry(const char *geometry)$/;"	f
IsGeometry	magick/methods.h	657;"	d
IsGlob	magick/methods.h	658;"	d
IsGlob	magick/token.c	/^MagickExport MagickBooleanType IsGlob(const char *path)$/;"	f
IsGrayColorspace	magick/colorspace-private.h	/^static inline MagickBooleanType IsGrayColorspace($/;"	f
IsGrayImage	magick/attribute.c	/^MagickExport MagickBooleanType IsGrayImage(const Image *image,$/;"	f
IsGrayImage	magick/methods.h	659;"	d
IsGrayPixel	magick/pixel-private.h	/^static inline MagickBooleanType IsGrayPixel(const PixelPacket *pixel)$/;"	f
IsHashmapEmpty	magick/hashmap.c	/^MagickExport MagickBooleanType IsHashmapEmpty(const HashmapInfo *hashmap_info)$/;"	f
IsHashmapEmpty	magick/methods.h	660;"	d
IsHighDynamicRangeImage	magick/image.c	/^MagickExport MagickBooleanType IsHighDynamicRangeImage(const Image *image,$/;"	f
IsHighDynamicRangeImage	magick/methods.h	661;"	d
IsHistogramImage	magick/histogram.c	/^MagickExport MagickBooleanType IsHistogramImage(const Image *image,$/;"	f
IsHistogramImage	magick/methods.h	662;"	d
IsImageFormatHandler	magick/magick.h	/^  IsImageFormatHandler(const unsigned char *,const size_t);$/;"	t
IsImageObject	magick/image.c	/^MagickExport MagickBooleanType IsImageObject(const Image *image)$/;"	f
IsImageObject	magick/methods.h	663;"	d
IsImageSimilar	magick/color.c	/^MagickExport MagickBooleanType IsImageSimilar(const Image *image,$/;"	f
IsImageSimilar	magick/methods.h	665;"	d
IsImagesEqual	magick/compare.c	/^MagickExport MagickBooleanType IsImagesEqual(Image *image,$/;"	f
IsImagesEqual	magick/methods.h	664;"	d
IsLinkedListEmpty	magick/hashmap.c	/^MagickExport MagickBooleanType IsLinkedListEmpty($/;"	f
IsLinkedListEmpty	magick/methods.h	666;"	d
IsLocaleTreeInstantiated	magick/locale.c	/^static MagickBooleanType IsLocaleTreeInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsLogCacheInstantiated	magick/log.c	/^static MagickBooleanType IsLogCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsMagicCacheInstantiated	magick/magic.c	/^static MagickBooleanType IsMagicCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsMagickColorEqual	magick/color-private.h	/^static inline MagickBooleanType IsMagickColorEqual(const MagickPixelPacket *p,$/;"	f
IsMagickColorSimilar	magick/color.c	/^MagickExport MagickBooleanType IsMagickColorSimilar(const MagickPixelPacket *p,$/;"	f
IsMagickColorSimilar	magick/methods.h	667;"	d
IsMagickConflict	magick/magick.c	/^MagickExport MagickBooleanType IsMagickConflict(const char *magick)$/;"	f
IsMagickConflict	magick/methods.h	668;"	d
IsMagickCoreInstantiated	magick/magick.c	/^MagickExport MagickBooleanType IsMagickCoreInstantiated(void)$/;"	f
IsMagickGray	magick/color-private.h	/^static inline MagickBooleanType IsMagickGray(const MagickPixelPacket *pixel)$/;"	f
IsMagickInstantiated	magick/deprecate.c	/^MagickExport MagickBooleanType IsMagickInstantiated(void)$/;"	f
IsMagickInstantiated	magick/methods.h	669;"	d
IsMagickThreadEqual	magick/thread-private.h	/^static inline MagickBooleanType IsMagickThreadEqual(const MagickThreadType id)$/;"	f
IsMagickTreeInstantiated	magick/magick.c	/^static MagickBooleanType IsMagickTreeInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsMagickTrue	magick/methods.h	671;"	d
IsMagickTrue	magick/token.c	/^MagickExport MagickBooleanType IsMagickTrue(const char *value)$/;"	f
IsMagickWand	wand/magick-wand.c	/^WandExport MagickBooleanType IsMagickWand(const MagickWand *wand)$/;"	f
IsMagickWandInstantiated	wand/magick-wand.c	/^MagickExport MagickBooleanType IsMagickWandInstantiated(void)$/;"	f
IsMimeCacheInstantiated	magick/mime.c	/^static MagickBooleanType IsMimeCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsMonochromeImage	magick/attribute.c	/^MagickExport MagickBooleanType IsMonochromeImage(const Image *image,$/;"	f
IsMonochromeImage	magick/methods.h	672;"	d
IsMonochromePixel	magick/pixel-private.h	/^static inline MagickBooleanType IsMonochromePixel(const PixelPacket *pixel)$/;"	f
IsNaN	magick/image-private.h	25;"	d
IsOpacitySimilar	magick/color.c	/^MagickExport MagickBooleanType IsOpacitySimilar(const Image *image,$/;"	f
IsOpacitySimilar	magick/methods.h	673;"	d
IsOpaqueImage	magick/attribute.c	/^MagickExport MagickBooleanType IsOpaqueImage(const Image *image,$/;"	f
IsOpaqueImage	magick/methods.h	674;"	d
IsPaletteImage	magick/histogram.c	/^MagickExport MagickBooleanType IsPaletteImage(const Image *image,$/;"	f
IsPaletteImage	magick/methods.h	675;"	d
IsPathAccessible	magick/methods.h	676;"	d
IsPathAccessible	magick/utility.c	/^MagickExport MagickBooleanType IsPathAccessible(const char *path)$/;"	f
IsPathDirectory	magick/utility.c	/^static int IsPathDirectory(const char *path)$/;"	f	file:
IsPathWritable	wand/mogrify.c	/^static inline MagickBooleanType IsPathWritable(const char *path)$/;"	f	file:
IsPixelAtDepth	magick/pixel-accessor.h	/^static inline MagickBooleanType IsPixelAtDepth(const Quantum pixel,$/;"	f
IsPixelGray	magick/pixel-accessor.h	/^static inline MagickBooleanType IsPixelGray(const PixelPacket *pixel)$/;"	f
IsPixelIterator	wand/pixel-iterator.c	/^WandExport MagickBooleanType IsPixelIterator(const PixelIterator *iterator)$/;"	f
IsPixelWand	wand/pixel-wand.c	/^WandExport MagickBooleanType IsPixelWand(const PixelWand *wand)$/;"	f
IsPixelWandSimilar	wand/pixel-wand.c	/^WandExport MagickBooleanType IsPixelWandSimilar(PixelWand *p,PixelWand *q,$/;"	f
IsPoint	magick/draw.c	/^static inline MagickBooleanType IsPoint(const char *point)$/;"	f	file:
IsPoint	wand/drawing-wand.c	/^static inline MagickBooleanType IsPoint(const char *point)$/;"	f	file:
IsPolicyCacheInstantiated	magick/policy.c	/^static MagickBooleanType IsPolicyCacheInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsRGBColorspace	magick/colorspace-private.h	/^static inline MagickBooleanType IsRGBColorspace(const ColorspaceType colorspace)$/;"	f
IsRightsAuthorized	magick/methods.h	677;"	d
IsRightsAuthorized	magick/policy.c	/^MagickExport MagickBooleanType IsRightsAuthorized(const PolicyDomain domain,$/;"	f
IsSameColor	magick/quantize.c	/^static inline MagickBooleanType IsSameColor(const Image *image,$/;"	f	file:
IsSceneGeometry	magick/geometry.c	/^MagickExport MagickBooleanType IsSceneGeometry(const char *geometry,$/;"	f
IsSceneGeometry	magick/methods.h	678;"	d
IsStringNotFalse	magick/string.c	/^MagickExport MagickBooleanType IsStringNotFalse(const char *value)$/;"	f
IsStringTrue	magick/string.c	/^MagickExport MagickBooleanType IsStringTrue(const char *value)$/;"	f
IsSubimage	magick/deprecate.c	/^MagickExport unsigned int IsSubimage(const char *geometry,$/;"	f
IsSubimage	magick/methods.h	679;"	d
IsTaintImage	magick/image.c	/^MagickExport MagickBooleanType IsTaintImage(const Image *image)$/;"	f
IsTaintImage	magick/methods.h	680;"	d
IsTypeTreeInstantiated	magick/type.c	/^static MagickBooleanType IsTypeTreeInstantiated(ExceptionInfo *exception)$/;"	f	file:
IsUTFAscii	magick/token-private.h	/^static inline MagickBooleanType IsUTFAscii(int code)$/;"	f
IsUTFSpace	magick/token-private.h	/^static inline MagickBooleanType IsUTFSpace(int code)$/;"	f
IsUTFValid	magick/token-private.h	/^static inline MagickBooleanType IsUTFValid(int code)$/;"	f
IsWindows95	magick/nt-base.c	/^MagickPrivate int IsWindows95()$/;"	f
IssRGBColorspace	magick/colorspace-private.h	/^static inline MagickBooleanType IssRGBColorspace($/;"	f
IssRGBCompatibleColorspace	magick/colorspace-private.h	/^static inline MagickBooleanType IssRGBCompatibleColorspace($/;"	f
ItalicStyle	magick/type.h	/^  ItalicStyle,$/;"	e	enum:__anon25
IterateOverSplayTree	magick/splay-tree.c	/^static int IterateOverSplayTree(SplayTreeInfo *splay_tree,$/;"	f	file:
IterativeDistanceMorphology	magick/morphology.h	/^  IterativeDistanceMorphology   \/* Add Kernel Value, take Minimum *\/$/;"	e	enum:__anon70
J1	magick/resize.c	/^static MagickRealType J1(MagickRealType x)$/;"	f	file:
J1	magick/resize.c	1326;"	d	file:
JBIG1Compression	magick/compress.h	/^  JBIG1Compression,           \/* ISO\/IEC std 11544 \/ ITU-T rec T.82 *\/$/;"	e	enum:__anon13
JBIG2Compression	magick/compress.h	/^  JBIG2Compression            \/* ISO\/IEC std 14492 \/ ITU-T rec T.88 *\/$/;"	e	enum:__anon13
JPEG2000Compression	magick/compress.h	/^  JPEG2000Compression,      \/* ISO\/IEC std 15444-1 *\/$/;"	e	enum:__anon13
JPEGCompression	magick/compress.h	/^  JPEGCompression,$/;"	e	enum:__anon13
JPEGInterlace	magick/image.h	/^  JPEGInterlace,$/;"	e	enum:__anon79
JPEGPreview	magick/effect.h	/^  JPEGPreview$/;"	e	enum:__anon56
Jinc	magick/resize.c	/^static MagickRealType Jinc(const MagickRealType x,$/;"	f	file:
JincFilter	magick/resample.h	/^  JincFilter,$/;"	e	enum:__anon76
JincWeightingFunction	magick/resize-private.h	/^  JincWeightingFunction,$/;"	e	enum:__anon30
Kaiser	magick/resize.c	/^static MagickRealType Kaiser(const MagickRealType x,$/;"	f	file:
KaiserFilter	magick/resample.h	/^  KaiserFilter,$/;"	e	enum:__anon76
KaiserWeightingFunction	magick/resize-private.h	/^  KaiserWeightingFunction,$/;"	e	enum:__anon30
KernelInfo	magick/morphology.h	/^typedef struct KernelInfo$/;"	s
KernelInfo	magick/morphology.h	/^} KernelInfo;$/;"	t	typeref:struct:KernelInfo
KernelInfoType	magick/morphology.h	/^} KernelInfoType;$/;"	t	typeref:enum:__anon69
KernelNormalize	magick/methods.h	681;"	d
KernelOptions	magick/option.c	/^  KernelOptions[] =$/;"	v	file:
KernelPrint	magick/methods.h	682;"	d
KernelRank	magick/morphology.c	1155;"	d	file:
KernelRank	magick/morphology.c	1253;"	d	file:
KernelRotate	magick/methods.h	683;"	d
KirschKernel	magick/morphology.h	/^  KirschKernel,$/;"	e	enum:__anon69
LABColorspace	magick/deprecate.h	48;"	d
LCHColorspace	magick/colorspace.h	/^  LCHColorspace,            \/* alias for LCHuv *\/$/;"	e	enum:__anon55
LCHabColorspace	magick/colorspace.h	/^  LCHabColorspace,          \/* Cylindrical (Polar) Lab *\/$/;"	e	enum:__anon55
LCHuvColorspace	magick/colorspace.h	/^  LCHuvColorspace,          \/* Cylindrical (Polar) Luv *\/$/;"	e	enum:__anon55
LCMSExceptionHandler	magick/profile.c	/^static int LCMSExceptionHandler(int severity,const char *message)$/;"	f	file:
LCMSExceptionHandler	magick/profile.c	/^static void LCMSExceptionHandler(cmsContext context,cmsUInt32Number severity,$/;"	f	file:
LMSColorspace	magick/colorspace.h	/^  LMSColorspace,$/;"	e	enum:__anon55
LPFNDLLFUNC1	magick/nt-base-private.h	/^  (CALLBACK *LPFNDLLFUNC1)(DWORD,UINT);$/;"	t
LPFNDLLFUNC2	magick/nt-base-private.h	/^  (CALLBACK *LPFNDLLFUNC2)(NTMEMORYSTATUSEX *);$/;"	t
LSBEndian	magick/quantum.h	/^  LSBEndian,$/;"	e	enum:__anon4
LZMACompression	magick/compress.h	/^  LZMACompression,            \/* Lempel-Ziv-Markov chain algorithm *\/$/;"	e	enum:__anon13
LZWClr	magick/compress.c	937;"	d	file:
LZWCompression	magick/compress.h	/^  LZWCompression,$/;"	e	enum:__anon13
LZWEncodeImage	magick/compress.c	/^MagickExport MagickBooleanType LZWEncodeImage(Image *image,const size_t length,$/;"	f
LZWEncodeImage	magick/methods.h	727;"	d
LZWEod	magick/compress.c	938;"	d	file:
LabColorspace	magick/colorspace.h	/^  LabColorspace,$/;"	e	enum:__anon55
Lagrange	magick/resize.c	/^static MagickRealType Lagrange(const MagickRealType x,$/;"	f	file:
LagrangeFilter	magick/resample.h	/^  LagrangeFilter,$/;"	e	enum:__anon76
LagrangeWeightingFunction	magick/resize-private.h	/^  LagrangeWeightingFunction,$/;"	e	enum:__anon30
Lanczos2Filter	magick/resample.h	/^  Lanczos2Filter,$/;"	e	enum:__anon76
Lanczos2SharpFilter	magick/resample.h	/^  Lanczos2SharpFilter,$/;"	e	enum:__anon76
LanczosFilter	magick/resample.h	/^  LanczosFilter,$/;"	e	enum:__anon76
LanczosRadiusFilter	magick/resample.h	/^  LanczosRadiusFilter,$/;"	e	enum:__anon76
LanczosSharpFilter	magick/resample.h	/^  LanczosSharpFilter,$/;"	e	enum:__anon76
LaplacianKernel	magick/morphology.h	/^  LaplacianKernel,    \/* Convolution Kernels, by Name *\/$/;"	e	enum:__anon69
LaplacianNoise	magick/fx.h	/^  LaplacianNoise,$/;"	e	enum:__anon67
LaplacianNoiseEvaluateOperator	magick/statistic.h	/^  LaplacianNoiseEvaluateOperator,$/;"	e	enum:__anon89
LargeHashmapSize	magick/hashmap.h	27;"	d
LastKernelInfo	magick/morphology.c	/^static inline KernelInfo *LastKernelInfo(KernelInfo *kernel)$/;"	f	file:
LastWeightingFunction	magick/resize-private.h	/^  LastWeightingFunction$/;"	e	enum:__anon30
LaunchCommand	magick/display.c	/^  LaunchCommand,$/;"	e	enum:__anon20	file:
LaunchCompositeKernel	magick/accelerate.c	/^static MagickBooleanType LaunchCompositeKernel(MagickCLEnv clEnv,$/;"	f	file:
LaunchHistogramKernel	magick/accelerate.c	/^static MagickBooleanType LaunchHistogramKernel(MagickCLEnv clEnv,$/;"	f	file:
LaunchRandomImageKernel	magick/accelerate.c	/^static MagickBooleanType LaunchRandomImageKernel(MagickCLEnv clEnv,$/;"	f	file:
LayerOptions	magick/option.c	/^  LayerOptions[] =$/;"	v	file:
LeastSquaresAddTerms	magick/matrix.c	/^MagickExport void LeastSquaresAddTerms(double **matrix,double **vectors,$/;"	f
LeastSquaresAddTerms	magick/methods.h	684;"	d
LeftAlign	magick/draw.h	/^  LeftAlign,$/;"	e	enum:__anon34
LeftBottomOrientation	magick/image.h	/^  LeftBottomOrientation$/;"	e	enum:__anon80
LeftShiftEvaluateOperator	magick/statistic.h	/^  LeftShiftEvaluateOperator,$/;"	e	enum:__anon89
LeftShiftOperator	magick/fx.c	100;"	d	file:
LeftToRightDirection	magick/draw.h	/^  LeftToRightDirection$/;"	e	enum:__anon37
LeftTopOrientation	magick/image.h	/^  LeftTopOrientation,$/;"	e	enum:__anon80
LessThanEqualOperator	magick/fx.c	102;"	d	file:
LessValue	magick/geometry.h	/^  LessValue = 0x4000,      \/* '<'  resize smaller - special use flag *\/$/;"	e	enum:__anon14
LevelColorsImage	magick/enhance.c	/^MagickExport MagickBooleanType LevelColorsImage(Image *image,$/;"	f
LevelColorsImage	magick/methods.h	686;"	d
LevelColorsImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType LevelColorsImageChannel(Image *image,$/;"	f
LevelColorsImageChannel	magick/methods.h	685;"	d
LevelImage	magick/enhance.c	/^MagickExport MagickBooleanType LevelImage(Image *image,const char *levels)$/;"	f
LevelImage	magick/methods.h	689;"	d
LevelImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType LevelImageChannel(Image *image,$/;"	f
LevelImageChannel	magick/methods.h	687;"	d
LevelImageColors	magick/deprecate.c	/^MagickBooleanType LevelImageColors(Image *image,const ChannelType channel,$/;"	f
LevelImageColors	magick/methods.h	688;"	d
LevelImageTag	magick/enhance.c	2935;"	d	file:
LevelPixel	magick/enhance.c	/^static inline double LevelPixel(const double black_point,$/;"	f	file:
LevelizeImage	magick/enhance.c	/^MagickExport MagickBooleanType LevelizeImage(Image *image,$/;"	f
LevelizeImage	magick/methods.h	691;"	d
LevelizeImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType LevelizeImageChannel(Image *image,$/;"	f
LevelizeImageChannel	magick/methods.h	690;"	d
LevelizeImageTag	magick/enhance.c	3113;"	d	file:
LevelizeValue	magick/enhance.c	3114;"	d	file:
LiberateMagickResource	magick/deprecate.h	56;"	d
LiberateMemory	magick/deprecate.c	/^MagickExport void LiberateMemory(void **memory)$/;"	f
LiberateMemory	magick/methods.h	692;"	d
LiberateSemaphore	magick/deprecate.h	57;"	d
LiberateSemaphoreInfo	magick/deprecate.c	/^MagickExport void LiberateSemaphoreInfo(SemaphoreInfo **semaphore_info)$/;"	f
LiberateSemaphoreInfo	magick/methods.h	693;"	d
LiberateUniqueFileResource	magick/deprecate.h	54;"	d
Lighten	magick/composite.c	/^static inline MagickRealType Lighten(const MagickRealType p,$/;"	f	file:
LightenCompositeOp	magick/composite.h	/^  LightenCompositeOp,$/;"	e	enum:__anon68
LightenIntensityCompositeOp	magick/composite.h	/^  LightenIntensityCompositeOp$/;"	e	enum:__anon68
LightnessPixelIntensityMethod	magick/pixel.h	/^  LightnessPixelIntensityMethod,$/;"	e	enum:__anon54
LineCap	magick/draw.h	/^} LineCap;$/;"	t	typeref:enum:__anon40
LineCapOptions	magick/option.c	/^  LineCapOptions[] =$/;"	v	file:
LineElement	magick/xwindow-private.h	/^  LineElement,$/;"	e	enum:__anon27
LineEndsKernel	magick/morphology.h	/^  LineEndsKernel,$/;"	e	enum:__anon69
LineInterlace	magick/image.h	/^  LineInterlace,$/;"	e	enum:__anon79
LineJoin	magick/draw.h	/^} LineJoin;$/;"	t	typeref:enum:__anon41
LineJoinOptions	magick/option.c	/^  LineJoinOptions[] =$/;"	v	file:
LineJunctionsKernel	magick/morphology.h	/^  LineJunctionsKernel,$/;"	e	enum:__anon69
LinePrimitive	magick/draw.h	/^  LinePrimitive,$/;"	e	enum:__anon43
LineThroughDecoration	magick/draw.h	/^  LineThroughDecoration$/;"	e	enum:__anon36
LineToCode	magick/draw.c	/^  LineToCode,$/;"	e	enum:__anon17	file:
LinearBurn	magick/composite.c	/^static inline MagickRealType LinearBurn(const MagickRealType Sca,$/;"	f	file:
LinearBurnCompositeOp	magick/composite.h	/^  LinearBurnCompositeOp,$/;"	e	enum:__anon68
LinearDodgeCompositeOp	magick/composite.h	/^  LinearDodgeCompositeOp,$/;"	e	enum:__anon68
LinearGradient	magick/draw.h	/^  LinearGradient,$/;"	e	enum:__anon39
LinearLight	magick/composite.c	/^static inline MagickRealType LinearLight(const MagickRealType Sca,$/;"	f	file:
LinearLightCompositeOp	magick/composite.h	/^  LinearLightCompositeOp,$/;"	e	enum:__anon68
LinearStretchImage	magick/enhance.c	/^MagickExport MagickBooleanType LinearStretchImage(Image *image,$/;"	f
LinearStretchImage	magick/methods.h	694;"	d
LinearStretchImageTag	magick/enhance.c	3374;"	d	file:
LinkSplayTreeNodes	magick/splay-tree.c	/^static inline NodeInfo *LinkSplayTreeNodes(NodeInfo **nodes,const size_t low,$/;"	f	file:
LinkedListInfo	magick/hashmap.h	/^  LinkedListInfo;$/;"	t	typeref:struct:_LinkedListInfo
LinkedListToArray	magick/hashmap.c	/^MagickExport MagickBooleanType LinkedListToArray(LinkedListInfo *list_info,$/;"	f
LinkedListToArray	magick/methods.h	695;"	d
LiquidRescaleImage	magick/methods.h	696;"	d
LiquidRescaleImage	magick/resize.c	/^MagickExport Image *LiquidRescaleImage(const Image *image,$/;"	f
LiquidRescaleImage	magick/resize.c	/^MagickExport Image *LiquidRescaleImage(const Image *image,const size_t columns,$/;"	f
LiquidRescaleImageTag	magick/resize.c	1823;"	d	file:
ListChannels	magick/statistic.c	2668;"	d	file:
ListCoderInfo	magick/coder.c	/^MagickExport MagickBooleanType ListCoderInfo(FILE *file,$/;"	f
ListCoderInfo	magick/methods.h	697;"	d
ListColorInfo	magick/color.c	/^MagickExport MagickBooleanType ListColorInfo(FILE *file,$/;"	f
ListColorInfo	magick/methods.h	698;"	d
ListCommandOptions	magick/methods.h	706;"	d
ListCommandOptions	magick/option.c	/^MagickExport MagickBooleanType ListCommandOptions(FILE *file,$/;"	f
ListConfigureInfo	magick/configure.c	/^MagickExport MagickBooleanType ListConfigureInfo(FILE *file,$/;"	f
ListConfigureInfo	magick/methods.h	699;"	d
ListDelegateInfo	magick/delegate.c	/^MagickExport MagickBooleanType ListDelegateInfo(FILE *file,$/;"	f
ListDelegateInfo	magick/methods.h	700;"	d
ListFiles	magick/methods.h	701;"	d
ListFiles	magick/utility.c	/^MagickExport char **ListFiles(const char *directory,const char *pattern,$/;"	f
ListLocaleInfo	magick/locale.c	/^MagickExport MagickBooleanType ListLocaleInfo(FILE *file,$/;"	f
ListLocaleInfo	magick/methods.h	702;"	d
ListLogInfo	magick/log.c	/^MagickExport MagickBooleanType ListLogInfo(FILE *file,ExceptionInfo *exception)$/;"	f
ListLogInfo	magick/methods.h	703;"	d
ListMagicInfo	magick/magic.c	/^MagickExport MagickBooleanType ListMagicInfo(FILE *file,$/;"	f
ListMagicInfo	magick/methods.h	704;"	d
ListMagickInfo	magick/magick.c	/^MagickExport MagickBooleanType ListMagickInfo(FILE *file,$/;"	f
ListMagickInfo	magick/methods.h	705;"	d
ListMagickResourceInfo	magick/methods.h	707;"	d
ListMagickResourceInfo	magick/resource.c	/^MagickExport MagickBooleanType ListMagickResourceInfo(FILE *file,$/;"	f
ListMagickVersion	magick/version.c	/^MagickExport void ListMagickVersion(FILE *file)$/;"	f
ListMimeInfo	magick/methods.h	708;"	d
ListMimeInfo	magick/mime.c	/^MagickExport MagickBooleanType ListMimeInfo(FILE *file,ExceptionInfo *exception)$/;"	f
ListModuleInfo	magick/methods.h	709;"	d
ListModuleInfo	magick/module.c	/^MagickExport MagickBooleanType ListModuleInfo(FILE *file,$/;"	f
ListNode	magick/statistic.c	/^} ListNode;$/;"	t	typeref:struct:_ListNode	file:
ListOperatorOptionFlag	magick/option.h	/^  ListOperatorOptionFlag    = 0x0200,  \/* Multi-Image List processing operator *\/$/;"	e	enum:__anon88
ListOptions	magick/option.c	/^  ListOptions[] =$/;"	v	file:
ListPolicyInfo	magick/methods.h	710;"	d
ListPolicyInfo	magick/policy.c	/^MagickExport MagickBooleanType ListPolicyInfo(FILE *file,$/;"	f
ListThresholdMapFile	magick/methods.h	711;"	d
ListThresholdMapFile	magick/threshold.c	/^MagickBooleanType ListThresholdMapFile(FILE *file,const char *xml,$/;"	f
ListThresholdMaps	magick/methods.h	712;"	d
ListThresholdMaps	magick/threshold.c	/^MagickExport MagickBooleanType ListThresholdMaps(FILE *file,$/;"	f
ListTypeInfo	magick/methods.h	713;"	d
ListTypeInfo	magick/type.c	/^MagickExport MagickBooleanType ListTypeInfo(FILE *file,ExceptionInfo *exception)$/;"	f
LoGKernel	magick/morphology.h	/^  LoGKernel,$/;"	e	enum:__anon69
LoadCoderCache	magick/coder.c	/^static MagickBooleanType LoadCoderCache(SplayTreeInfo *coder_cache,$/;"	f	file:
LoadColorCache	magick/color.c	/^static MagickBooleanType LoadColorCache(LinkedListInfo *color_cache,$/;"	f	file:
LoadConfigureCache	magick/configure.c	/^static MagickBooleanType LoadConfigureCache(LinkedListInfo *configure_cache,$/;"	f	file:
LoadDelegateCache	magick/delegate.c	/^static MagickBooleanType LoadDelegateCache(LinkedListInfo *delegate_cache,$/;"	f	file:
LoadFontConfigFonts	magick/methods.h	714;"	d
LoadFontConfigFonts	magick/type.c	/^MagickExport MagickBooleanType LoadFontConfigFonts(SplayTreeInfo *type_cache,$/;"	f
LoadImageTag	magick/image.c	/^  LoadImageTag[] = "Load\/Image",$/;"	v
LoadImagesTag	magick/image.c	/^  LoadImagesTag[] = "Load\/Images",$/;"	v
LoadLocaleCache	magick/locale.c	/^static MagickBooleanType LoadLocaleCache(SplayTreeInfo *locale_cache,$/;"	f	file:
LoadLogCache	magick/log.c	/^static MagickBooleanType LoadLogCache(LinkedListInfo *log_cache,const char *xml,$/;"	f	file:
LoadMagicCache	magick/magic.c	/^static MagickBooleanType LoadMagicCache(LinkedListInfo *magic_cache,$/;"	f	file:
LoadMimeCache	magick/mime.c	/^static MagickBooleanType LoadMimeCache(LinkedListInfo *mime_cache,$/;"	f	file:
LoadMimeLists	magick/methods.h	715;"	d
LoadMimeLists	magick/mime.c	/^MagickExport MagickBooleanType LoadMimeLists(const char *name,$/;"	f
LoadPolicyCache	magick/policy.c	/^static MagickBooleanType LoadPolicyCache(LinkedListInfo *policy_cache,$/;"	f	file:
LoadTypeCache	magick/type.c	/^static MagickBooleanType LoadTypeCache(SplayTreeInfo *type_cache,$/;"	f	file:
LocaleCompare	magick/methods.h	716;"	d
LocaleCompare	magick/string.c	/^MagickExport int LocaleCompare(const char *p,const char *q)$/;"	f
LocaleComponentGenesis	magick/locale.c	/^MagickExport MagickBooleanType LocaleComponentGenesis(void)$/;"	f
LocaleComponentGenesis	magick/methods.h	717;"	d
LocaleComponentTerminus	magick/locale.c	/^MagickExport void LocaleComponentTerminus(void)$/;"	f
LocaleComponentTerminus	magick/methods.h	718;"	d
LocaleEvent	magick/log.h	/^  LocaleEvent = 0x00400,$/;"	e	enum:__anon93
LocaleFilename	magick/locale.c	64;"	d	file:
LocaleInfo	magick/locale_.h	/^} LocaleInfo;$/;"	t	typeref:struct:_LocaleInfo
LocaleInfoCompare	magick/locale.c	/^static int LocaleInfoCompare(const void *x,const void *y)$/;"	f	file:
LocaleLower	magick/methods.h	719;"	d
LocaleLower	magick/string.c	/^MagickExport void LocaleLower(char *string)$/;"	f
LocaleMap	magick/locale.c	/^  *LocaleMap =$/;"	v	file:
LocaleNCompare	magick/methods.h	720;"	d
LocaleNCompare	magick/string.c	/^MagickExport int LocaleNCompare(const char *p,const char *q,const size_t length)$/;"	f
LocaleTagCompare	magick/locale.c	/^static int LocaleTagCompare(const void *x,const void *y)$/;"	f	file:
LocaleUpper	magick/methods.h	721;"	d
LocaleUpper	magick/string.c	/^MagickExport void LocaleUpper(char *string)$/;"	f
LockMagickMutex	magick/semaphore-private.h	/^static inline void LockMagickMutex(void)$/;"	f
LockSemaphoreInfo	magick/methods.h	722;"	d
LockSemaphoreInfo	magick/semaphore.c	/^MagickExport void LockSemaphoreInfo(SemaphoreInfo *semaphore_info)$/;"	f
Log	magick/cipher.c	/^  Log[256] =$/;"	v	file:
Log10Epsilon	magick/compare.c	1261;"	d	file:
Log10Epsilon	magick/feature.c	628;"	d	file:
Log10Epsilon	magick/statistic.c	1894;"	d	file:
LogColorspace	magick/colorspace.h	/^  LogColorspace,$/;"	e	enum:__anon55
LogCompare	magick/log.c	/^static int LogCompare(const void *x,const void *y)$/;"	f	file:
LogComponentGenesis	magick/log.c	/^MagickExport MagickBooleanType LogComponentGenesis(void)$/;"	f
LogComponentGenesis	magick/methods.h	723;"	d
LogComponentTerminus	magick/log.c	/^MagickExport void LogComponentTerminus(void)$/;"	f
LogComponentTerminus	magick/methods.h	724;"	d
LogEvaluateOperator	magick/statistic.h	/^  LogEvaluateOperator,$/;"	e	enum:__anon89
LogEventOptions	magick/option.c	/^  LogEventOptions[] =$/;"	v	file:
LogEventType	magick/log.h	/^} LogEventType;$/;"	t	typeref:enum:__anon93
LogFilename	magick/log.c	69;"	d	file:
LogHandlerType	magick/log.c	/^} LogHandlerType;$/;"	t	typeref:enum:__anon57	file:
LogHandlers	magick/log.c	/^  LogHandlers[] =$/;"	v	file:
LogInfo	magick/log.h	/^  LogInfo;$/;"	t	typeref:struct:_LogInfo
LogInfoCompare	magick/log.c	/^static int LogInfoCompare(const void *x,const void *y)$/;"	f	file:
LogMagickEvent	magick/log.c	/^MagickBooleanType LogMagickEvent(const LogEventType type,const char *module,$/;"	f
LogMagickEvent	magick/methods.h	726;"	d
LogMagickEventList	magick/log.c	/^MagickBooleanType LogMagickEventList(const LogEventType type,const char *module,$/;"	f
LogMagickEventList	magick/methods.h	725;"	d
LogMap	magick/log.c	/^  LogMap[] =$/;"	v	file:
LogMapInfo	magick/log.c	/^} LogMapInfo;$/;"	t	typeref:struct:_LogMapInfo	file:
LogPathInfo	magick/draw.c	/^static void LogPathInfo(const PathInfo *path_info)$/;"	f	file:
LogPolygonInfo	magick/draw.c	/^static void LogPolygonInfo(const PolygonInfo *polygon_info)$/;"	f	file:
LogPrimitiveInfo	magick/draw.c	/^static void LogPrimitiveInfo(const PrimitiveInfo *primitive_info)$/;"	f	file:
LogicalAndOperator	magick/fx.c	106;"	d	file:
LogicalOrOperator	magick/fx.c	107;"	d	file:
LongData	magick/mime-private.h	/^  LongData$/;"	e	enum:__anon16
LongPixel	magick/constitute.h	/^  LongPixel,$/;"	e	enum:__anon64
LongPixelPacket	magick/pixel.h	/^} LongPixelPacket;$/;"	t	typeref:struct:_LongPixelPacket
LosslessJPEGCompression	magick/compress.h	/^  LosslessJPEGCompression,$/;"	e	enum:__anon13
LuminizeCompositeOp	magick/composite.h	/^  LuminizeCompositeOp,$/;"	e	enum:__anon68
LuvColorspace	magick/colorspace.h	/^  LuvColorspace,$/;"	e	enum:__anon55
MAGICKCORE_ABI_SUFFIX	magick/magick-config.h	85;"	d
MAGICKCORE_ABI_SUFFIX	magick/magick-config.h	87;"	d
MAGICKCORE_BUILD_MODULES	magick/method-attribute.h	30;"	d
MAGICKCORE_BUILD_MODULES	magick/studio.h	358;"	d
MAGICKCORE_BUILD_MODULES	magick/studio.h	359;"	d
MAGICKCORE_BUILD_MODULES	wand/method-attribute.h	30;"	d
MAGICKCORE_CHECK_VERSION	magick/MagickCore.h	47;"	d
MAGICKCORE_CODER_DIRNAME	magick/magick-baseconfig.h	36;"	d
MAGICKCORE_CODER_PATH	magick/magick-config.h	130;"	d
MAGICKCORE_CODER_PATH	magick/magick-config.h	132;"	d
MAGICKCORE_CODER_RELATIVE_PATH	magick/magick-config.h	137;"	d
MAGICKCORE_CONFIGURE_PATH	magick/magick-baseconfig.h	41;"	d
MAGICKCORE_CONFIGURE_RELATIVE_PATH	magick/magick-baseconfig.h	47;"	d
MAGICKCORE_DIR_SEPARATOR	magick/magick-config.h	107;"	d
MAGICKCORE_DIR_SEPARATOR	magick/magick-config.h	96;"	d
MAGICKCORE_DIR_SEPARATOR_CHAR	magick/magick-config.h	106;"	d
MAGICKCORE_DIR_SEPARATOR_CHAR	magick/magick-config.h	95;"	d
MAGICKCORE_DOCUMENTATION_PATH	magick/magick-baseconfig.h	55;"	d
MAGICKCORE_EXECUTABLE_PATH	magick/magick-baseconfig.h	66;"	d
MAGICKCORE_FEATURES_STR	magick/configure.c	65;"	d	file:
MAGICKCORE_FEATURES_STR	magick/configure.c	88;"	d	file:
MAGICKCORE_FEATURE_HDRI_STR	magick/configure.c	83;"	d	file:
MAGICKCORE_FEATURE_HDRI_STR	magick/configure.c	85;"	d	file:
MAGICKCORE_FEATURE_OPENCL_STR	magick/configure.c	73;"	d	file:
MAGICKCORE_FEATURE_OPENCL_STR	magick/configure.c	75;"	d	file:
MAGICKCORE_FEATURE_OPENMP_STR	magick/configure.c	68;"	d	file:
MAGICKCORE_FEATURE_OPENMP_STR	magick/configure.c	70;"	d	file:
MAGICKCORE_FEATURE_ZERO_CONFIGURATION_STR	magick/configure.c	78;"	d	file:
MAGICKCORE_FEATURE_ZERO_CONFIGURATION_STR	magick/configure.c	80;"	d	file:
MAGICKCORE_FILTER_DIRNAME	magick/magick-baseconfig.h	74;"	d
MAGICKCORE_FILTER_PATH	magick/magick-config.h	143;"	d
MAGICKCORE_FILTER_PATH	magick/magick-config.h	145;"	d
MAGICKCORE_FILTER_RELATIVE_PATH	magick/magick-config.h	150;"	d
MAGICKCORE_HAVE_ACOSH	magick/magick-baseconfig.h	94;"	d
MAGICKCORE_HAVE_ASINH	magick/magick-baseconfig.h	105;"	d
MAGICKCORE_HAVE_ATANH	magick/magick-baseconfig.h	110;"	d
MAGICKCORE_HAVE_CABS	magick/magick-baseconfig.h	124;"	d
MAGICKCORE_HAVE_CARG	magick/magick-baseconfig.h	129;"	d
MAGICKCORE_HAVE_CIMAG	magick/magick-baseconfig.h	134;"	d
MAGICKCORE_HAVE_COMPLEX_H	magick/magick-baseconfig.h	151;"	d
MAGICKCORE_HAVE_CREAL	magick/magick-baseconfig.h	156;"	d
MAGICKCORE_HAVE_DECL_VSNPRINTF	magick/magick-baseconfig.h	185;"	d
MAGICKCORE_HAVE_ERRNO_H	magick/magick-baseconfig.h	206;"	d
MAGICKCORE_HAVE_FCNTL_H	magick/magick-baseconfig.h	217;"	d
MAGICKCORE_HAVE_FLOOR	magick/magick-baseconfig.h	225;"	d
MAGICKCORE_HAVE_FTRUNCATE	magick/magick-baseconfig.h	239;"	d
MAGICKCORE_HAVE_GETCWD	magick/magick-baseconfig.h	244;"	d
MAGICKCORE_HAVE_INTMAX_T	magick/magick-baseconfig.h	279;"	d
MAGICKCORE_HAVE_INTPTR_T	magick/magick-baseconfig.h	284;"	d
MAGICKCORE_HAVE_INTTYPES_H	magick/magick-baseconfig.h	290;"	d
MAGICKCORE_HAVE_ISNAN	magick/magick-baseconfig.h	296;"	d
MAGICKCORE_HAVE_J0	magick/magick-baseconfig.h	301;"	d
MAGICKCORE_HAVE_J1	magick/magick-baseconfig.h	306;"	d
MAGICKCORE_HAVE_LIMITS_H	magick/magick-baseconfig.h	326;"	d
MAGICKCORE_HAVE_LONG_DOUBLE	magick/magick-baseconfig.h	343;"	d
MAGICKCORE_HAVE_LONG_LONG_INT	magick/magick-baseconfig.h	352;"	d
MAGICKCORE_HAVE_MBSTATE_T	magick/magick-baseconfig.h	366;"	d
MAGICKCORE_HAVE_MEMMOVE	magick/magick-baseconfig.h	371;"	d
MAGICKCORE_HAVE_MEMSET	magick/magick-baseconfig.h	379;"	d
MAGICKCORE_HAVE_NAMESPACES	magick/magick-baseconfig.h	393;"	d
MAGICKCORE_HAVE_NAMESPACE_STD	magick/magick-baseconfig.h	398;"	d
MAGICKCORE_HAVE_OPENCL_CL_H	magick/magick-baseconfig.h	416;"	d
MAGICKCORE_HAVE_POW	magick/magick-baseconfig.h	448;"	d
MAGICKCORE_HAVE_SQRT	magick/magick-baseconfig.h	519;"	d
MAGICKCORE_HAVE_STDARG_H	magick/magick-baseconfig.h	527;"	d
MAGICKCORE_HAVE_STDINT_H	magick/magick-baseconfig.h	535;"	d
MAGICKCORE_HAVE_STDLIB_H	magick/magick-baseconfig.h	540;"	d
MAGICKCORE_HAVE_STD_LIBS	magick/magick-baseconfig.h	545;"	d
MAGICKCORE_HAVE_STRCASECMP	magick/magick-baseconfig.h	550;"	d
MAGICKCORE_HAVE_STRCHR	magick/magick-baseconfig.h	555;"	d
MAGICKCORE_HAVE_STRCSPN	magick/magick-baseconfig.h	560;"	d
MAGICKCORE_HAVE_STRDUP	magick/magick-baseconfig.h	565;"	d
MAGICKCORE_HAVE_STRINGIZE	magick/magick-baseconfig.h	576;"	d
MAGICKCORE_HAVE_STRING_H	magick/magick-baseconfig.h	584;"	d
MAGICKCORE_HAVE_STRNCASECMP	magick/magick-baseconfig.h	595;"	d
MAGICKCORE_HAVE_STRPBRK	magick/magick-baseconfig.h	600;"	d
MAGICKCORE_HAVE_STRRCHR	magick/magick-baseconfig.h	605;"	d
MAGICKCORE_HAVE_STRSPN	magick/magick-baseconfig.h	610;"	d
MAGICKCORE_HAVE_STRSTR	magick/magick-baseconfig.h	615;"	d
MAGICKCORE_HAVE_STRTOD	magick/magick-baseconfig.h	620;"	d
MAGICKCORE_HAVE_STRTOL	magick/magick-baseconfig.h	628;"	d
MAGICKCORE_HAVE_STRTOUL	magick/magick-baseconfig.h	633;"	d
MAGICKCORE_HAVE_SYS_PARAM_H	magick/magick-baseconfig.h	664;"	d
MAGICKCORE_HAVE_SYS_RESOURCE_H	magick/magick-baseconfig.h	669;"	d
MAGICKCORE_HAVE_SYS_SELECT_H	magick/magick-baseconfig.h	674;"	d
MAGICKCORE_HAVE_SYS_SOCKET_H	magick/magick-baseconfig.h	679;"	d
MAGICKCORE_HAVE_SYS_STAT_H	magick/magick-baseconfig.h	684;"	d
MAGICKCORE_HAVE_SYS_TIMEB_H	magick/magick-baseconfig.h	692;"	d
MAGICKCORE_HAVE_SYS_TIMES_H	magick/magick-baseconfig.h	697;"	d
MAGICKCORE_HAVE_SYS_TIME_H	magick/magick-baseconfig.h	702;"	d
MAGICKCORE_HAVE_SYS_TYPES_H	magick/magick-baseconfig.h	707;"	d
MAGICKCORE_HAVE_SYS_WAIT_H	magick/magick-baseconfig.h	712;"	d
MAGICKCORE_HAVE_TEMPNAM	magick/magick-baseconfig.h	720;"	d
MAGICKCORE_HAVE_UINTMAX_T	magick/magick-baseconfig.h	763;"	d
MAGICKCORE_HAVE_UINTPTR_T	magick/magick-baseconfig.h	768;"	d
MAGICKCORE_HAVE_UNISTD_H	magick/magick-baseconfig.h	776;"	d
MAGICKCORE_HAVE_UNSIGNED_LONG_LONG_INT	magick/magick-baseconfig.h	781;"	d
MAGICKCORE_HAVE_VFPRINTF	magick/magick-baseconfig.h	801;"	d
MAGICKCORE_HAVE_VPRINTF	magick/magick-baseconfig.h	809;"	d
MAGICKCORE_HAVE_VSNPRINTF	magick/magick-baseconfig.h	814;"	d
MAGICKCORE_HAVE_VSPRINTF	magick/magick-baseconfig.h	822;"	d
MAGICKCORE_HAVE_WCHAR_H	magick/magick-baseconfig.h	830;"	d
MAGICKCORE_HAVE_WINTHREADS	magick/studio.h	123;"	d
MAGICKCORE_HAVE_WINTHREADS	wand/studio.h	128;"	d
MAGICKCORE_HDRI_ENABLE	magick/magick-config.h	30;"	d
MAGICKCORE_HDRI_ENABLE	magick/magick-config.h	60;"	d
MAGICKCORE_HDRI_SUPPORT	magick/magick-config.h	69;"	d
MAGICKCORE_HDRI_SUPPORT	magick/magick-type.h	125;"	d
MAGICKCORE_IMPLEMENTATION	magick/studio.h	31;"	d
MAGICKCORE_INCLUDEARCH_PATH	magick/magick-baseconfig.h	880;"	d
MAGICKCORE_INCLUDE_PATH	magick/magick-baseconfig.h	885;"	d
MAGICKCORE_LIBRARY_PATH	magick/magick-baseconfig.h	905;"	d
MAGICKCORE_LIBRARY_PATH	magick/studio.h	274;"	d
MAGICKCORE_LIBRARY_PATH	magick/studio.h	299;"	d
MAGICKCORE_LIBRARY_PATH	wand/studio.h	276;"	d
MAGICKCORE_LIBRARY_PATH	wand/studio.h	301;"	d
MAGICKCORE_LIBRARY_RELATIVE_PATH	magick/magick-baseconfig.h	911;"	d
MAGICKCORE_LIB_BIN_BASEDIRNAME	magick/magick-baseconfig.h	917;"	d
MAGICKCORE_LT_OBJDIR	magick/magick-baseconfig.h	929;"	d
MAGICKCORE_MAGICK_TARGET_CPU	magick/magick-baseconfig.h	939;"	d
MAGICKCORE_MAGICK_TARGET_CPU	magick/magick-baseconfig.h	940;"	d
MAGICKCORE_MAGICK_TARGET_OS	magick/magick-baseconfig.h	943;"	d
MAGICKCORE_MAGICK_TARGET_OS	magick/magick-baseconfig.h	944;"	d
MAGICKCORE_MAGICK_TARGET_VENDOR	magick/magick-baseconfig.h	947;"	d
MAGICKCORE_MAGICK_TARGET_VENDOR	magick/magick-baseconfig.h	948;"	d
MAGICKCORE_MODULES_BASEDIRNAME	magick/magick-baseconfig.h	952;"	d
MAGICKCORE_MODULES_DIRNAME	magick/magick-config.h	116;"	d
MAGICKCORE_MODULES_PATH	magick/magick-config.h	120;"	d
MAGICKCORE_MODULES_RELATIVE_PATH	magick/magick-config.h	124;"	d
MAGICKCORE_MODULES_SUPPORT	magick/method-attribute.h	29;"	d
MAGICKCORE_MODULES_SUPPORT	magick/studio.h	354;"	d
MAGICKCORE_MODULES_SUPPORT	wand/method-attribute.h	29;"	d
MAGICKCORE_OPENCL_SUPPORT	magick/studio.h	141;"	d
MAGICKCORE_OPENCL_SUPPORT	wand/studio.h	145;"	d
MAGICKCORE_OPENMP_SUPPORT	magick/studio.h	147;"	d
MAGICKCORE_OPENMP_SUPPORT	wand/studio.h	150;"	d
MAGICKCORE_PACKAGE	magick/magick-baseconfig.h	969;"	d
MAGICKCORE_PACKAGE_BUGREPORT	magick/magick-baseconfig.h	974;"	d
MAGICKCORE_PACKAGE_NAME	magick/magick-baseconfig.h	979;"	d
MAGICKCORE_PACKAGE_STRING	magick/magick-baseconfig.h	984;"	d
MAGICKCORE_PACKAGE_TARNAME	magick/magick-baseconfig.h	989;"	d
MAGICKCORE_PACKAGE_URL	magick/magick-baseconfig.h	994;"	d
MAGICKCORE_PACKAGE_VERSION	magick/magick-baseconfig.h	999;"	d
MAGICKCORE_PATH_SEPARATOR	magick/magick-config.h	109;"	d
MAGICKCORE_PATH_SEPARATOR	magick/magick-config.h	98;"	d
MAGICKCORE_PATH_SEPARATOR_CHAR	magick/magick-config.h	108;"	d
MAGICKCORE_PATH_SEPARATOR_CHAR	magick/magick-config.h	97;"	d
MAGICKCORE_POSIX_SUPPORT	magick/MagickCore.h	64;"	d
MAGICKCORE_POSIX_SUPPORT	magick/studio.h	28;"	d
MAGICKCORE_QUANTUM_DEPTH	magick/magick-config.h	29;"	d
MAGICKCORE_QUANTUM_DEPTH	magick/magick-config.h	37;"	d
MAGICKCORE_QUANTUM_DEPTH	magick/magick-type.h	28;"	d
MAGICKCORE_QUANTUM_DEPTH_OBSOLETE_IN_H	magick/magick-baseconfig.h	1020;"	d
MAGICKCORE_RETSIGTYPE	magick/magick-baseconfig.h	1025;"	d
MAGICKCORE_RETSIGTYPE	magick/magick.c	87;"	d	file:
MAGICKCORE_SELECT_TYPE_ARG1	magick/magick-baseconfig.h	1033;"	d
MAGICKCORE_SELECT_TYPE_ARG234	magick/magick-baseconfig.h	1038;"	d
MAGICKCORE_SELECT_TYPE_ARG5	magick/magick-baseconfig.h	1043;"	d
MAGICKCORE_SHAREARCH_BASEDIRNAME	magick/magick-baseconfig.h	1048;"	d
MAGICKCORE_SHAREARCH_DIRNAME	magick/magick-config.h	155;"	d
MAGICKCORE_SHAREARCH_PATH	magick/magick-config.h	159;"	d
MAGICKCORE_SHAREARCH_RELATIVE_PATH	magick/magick-config.h	163;"	d
MAGICKCORE_SHARE_PATH	magick/magick-baseconfig.h	1056;"	d
MAGICKCORE_SHARE_PATH	magick/studio.h	275;"	d
MAGICKCORE_SHARE_PATH	magick/studio.h	300;"	d
MAGICKCORE_SHARE_PATH	wand/studio.h	277;"	d
MAGICKCORE_SHARE_PATH	wand/studio.h	302;"	d
MAGICKCORE_SHARE_RELATIVE_PATH	magick/magick-baseconfig.h	1062;"	d
MAGICKCORE_SIZEOF_DOUBLE	magick/magick-baseconfig.h	1067;"	d
MAGICKCORE_SIZEOF_DOUBLE_T	magick/magick-baseconfig.h	1072;"	d
MAGICKCORE_SIZEOF_FLOAT	magick/magick-baseconfig.h	1077;"	d
MAGICKCORE_SIZEOF_FLOAT_T	magick/magick-baseconfig.h	1082;"	d
MAGICKCORE_SIZEOF_LONG_DOUBLE	magick/magick-baseconfig.h	1087;"	d
MAGICKCORE_SIZEOF_OFF_T	magick/magick-baseconfig.h	1093;"	d
MAGICKCORE_SIZEOF_OFF_T	magick/magick-baseconfig.h	1095;"	d
MAGICKCORE_SIZEOF_SIGNED_INT	magick/magick-baseconfig.h	1102;"	d
MAGICKCORE_SIZEOF_SIGNED_INT	magick/magick-baseconfig.h	1104;"	d
MAGICKCORE_SIZEOF_SIGNED_LONG	magick/magick-baseconfig.h	1111;"	d
MAGICKCORE_SIZEOF_SIGNED_LONG	magick/magick-baseconfig.h	1113;"	d
MAGICKCORE_SIZEOF_SIGNED_LONG_LONG	magick/magick-baseconfig.h	1119;"	d
MAGICKCORE_SIZEOF_SIGNED_SHORT	magick/magick-baseconfig.h	1124;"	d
MAGICKCORE_SIZEOF_SIZE_T	magick/magick-baseconfig.h	1130;"	d
MAGICKCORE_SIZEOF_SIZE_T	magick/magick-baseconfig.h	1132;"	d
MAGICKCORE_SIZEOF_SSIZE_T	magick/magick-baseconfig.h	1139;"	d
MAGICKCORE_SIZEOF_SSIZE_T	magick/magick-baseconfig.h	1141;"	d
MAGICKCORE_SIZEOF_UNSIGNED_INT	magick/magick-baseconfig.h	1148;"	d
MAGICKCORE_SIZEOF_UNSIGNED_INT	magick/magick-baseconfig.h	1150;"	d
MAGICKCORE_SIZEOF_UNSIGNED_INTP	magick/magick-baseconfig.h	1157;"	d
MAGICKCORE_SIZEOF_UNSIGNED_INTP	magick/magick-baseconfig.h	1159;"	d
MAGICKCORE_SIZEOF_UNSIGNED_LONG	magick/magick-baseconfig.h	1166;"	d
MAGICKCORE_SIZEOF_UNSIGNED_LONG	magick/magick-baseconfig.h	1168;"	d
MAGICKCORE_SIZEOF_UNSIGNED_LONG_LONG	magick/magick-baseconfig.h	1174;"	d
MAGICKCORE_SIZEOF_UNSIGNED_SHORT	magick/magick-baseconfig.h	1179;"	d
MAGICKCORE_STDC_HEADERS	magick/magick-baseconfig.h	1187;"	d
MAGICKCORE_STRING_QUOTE	magick/magick-config.h	80;"	d
MAGICKCORE_STRING_XQUOTE	magick/magick-config.h	81;"	d
MAGICKCORE_THREAD_SUPPORT	magick/magick-baseconfig.h	1195;"	d
MAGICKCORE_THREAD_SUPPORT	magick/magick-baseconfig.h	1197;"	d
MAGICKCORE_VERSION	magick/magick-baseconfig.h	1237;"	d
MAGICKCORE_WINDOWS_SUPPORT	magick/MagickCore.h	62;"	d
MAGICKCORE_WINDOWS_SUPPORT	magick/studio.h	26;"	d
MAGICKCORE_X11_CONFIGURE_PATH	magick/magick-baseconfig.h	1269;"	d
MAGICKCORE__OPENCL	magick/magick-baseconfig.h	1310;"	d
MAGICKWAND_CHECK_VERSION	wand/MagickWand.h	47;"	d
MAGICKWAND_IMPLEMENTATION	wand/studio.h	31;"	d
MAGICKWAND_POSIX_SUPPORT	wand/MagickWand.h	65;"	d
MAGICKWAND_POSIX_SUPPORT	wand/studio.h	28;"	d
MAGICKWAND_WINDOWS_SUPPORT	wand/MagickWand.h	63;"	d
MAGICKWAND_WINDOWS_SUPPORT	wand/studio.h	26;"	d
MAGICK_MAX	magick/accelerate.c	84;"	d	file:
MAGICK_MIN	magick/accelerate.c	85;"	d	file:
MAGICK_OPENCL_ACCELERATE	magick/opencl.h	/^  MAGICK_OPENCL_ACCELERATE = 0$/;"	e	enum:__anon60
MAGICK_OPENCL_DEVICE_SELECT_AUTO	magick/opencl.h	/^, MAGICK_OPENCL_DEVICE_SELECT_AUTO = 1$/;"	e	enum:__anon62
MAGICK_OPENCL_DEVICE_SELECT_AUTO_CLEAR_CACHE	magick/opencl.h	/^, MAGICK_OPENCL_DEVICE_SELECT_AUTO_CLEAR_CACHE = 3$/;"	e	enum:__anon62
MAGICK_OPENCL_DEVICE_SELECT_USER	magick/opencl.h	/^, MAGICK_OPENCL_DEVICE_SELECT_USER = 2$/;"	e	enum:__anon62
MAGICK_OPENCL_ENV_PARAM_DEVICE	magick/opencl.h	/^    MAGICK_OPENCL_ENV_PARAM_DEVICE                 \/* cl_device_id (from OpenCL) *\/$/;"	e	enum:__anon61
MAGICK_OPENCL_ENV_PARAM_OPENCL_DISABLED	magick/opencl.h	/^  , MAGICK_OPENCL_ENV_PARAM_OPENCL_DISABLED        \/* MagickBooleanType *\/$/;"	e	enum:__anon61
MAGICK_OPENCL_ENV_PARAM_OPENCL_INITIALIZED	magick/opencl.h	/^  , MAGICK_OPENCL_ENV_PARAM_OPENCL_INITIALIZED     \/* MagickBooleanType *\/$/;"	e	enum:__anon61
MAGICK_OPENCL_ENV_PARAM_PROGRAM_CACHE_DISABLED	magick/opencl.h	/^  , MAGICK_OPENCL_ENV_PARAM_PROGRAM_CACHE_DISABLED \/* MagickBooleanType *\/$/;"	e	enum:__anon61
MAGICK_OPENCL_ENV_PARAM_REGENERATE_PROFILE	magick/opencl.h	/^  , MAGICK_OPENCL_ENV_PARAM_REGENERATE_PROFILE     \/* MagickBooleanType *\/$/;"	e	enum:__anon61
MAGICK_OPENCL_NUM_PROGRAMS	magick/opencl.h	/^  ,MAGICK_OPENCL_NUM_PROGRAMS   \/* !!! This has to be the last entry !!! *\/$/;"	e	enum:__anon60
MAGICK_OPENCL_OFF	magick/opencl.h	/^  MAGICK_OPENCL_OFF = 0$/;"	e	enum:__anon62
MAGICK_PIXEL_RGBA	magick/pixel.h	134;"	d
MAP_ANONYMOUS	magick/blob.c	79;"	d	file:
MAP_ANONYMOUS	magick/nt-base.h	49;"	d
MAP_FAILED	magick/blob.c	82;"	d	file:
MAP_FAILED	magick/nt-base.c	70;"	d	file:
MAP_PRIVATE	magick/nt-base.h	48;"	d
MAP_SHARED	magick/nt-base.h	47;"	d
MBHashA	magick/compress.c	386;"	d	file:
MBHashB	magick/compress.c	387;"	d	file:
MBId	magick/compress.c	97;"	d	file:
MBTable	magick/compress.c	/^  MBTable[]=$/;"	v	file:
MSBEndian	magick/quantum.h	/^  MSBEndian$/;"	e	enum:__anon4
MSBOrderLong	magick/blob.c	/^MagickExport void MSBOrderLong(unsigned char *buffer,const size_t length)$/;"	f
MSBOrderLong	magick/methods.h	765;"	d
MSBOrderShort	magick/blob.c	/^MagickExport void MSBOrderShort(unsigned char *p,const size_t length)$/;"	f
MSBOrderShort	magick/methods.h	766;"	d
MSCFree	magick/memory.c	/^static void MSCFree(void* ptr)$/;"	f	file:
MSCMalloc	magick/memory.c	/^static void* MSCMalloc(size_t size)$/;"	f	file:
MSCRealloc	magick/memory.c	/^static void* MSCRealloc(void* ptr, size_t size)$/;"	f	file:
MSG_NOSIGNAL	magick/distribute-cache.c	95;"	d	file:
MSPixelIntensityMethod	magick/pixel.h	/^  MSPixelIntensityMethod$/;"	e	enum:__anon54
MWHashA	magick/compress.c	388;"	d	file:
MWHashB	magick/compress.c	389;"	d	file:
MWId	magick/compress.c	95;"	d	file:
MWTable	magick/compress.c	/^  MWTable[]=$/;"	v	file:
MaXWindows	magick/animate.c	1206;"	d	file:
MagentaChannel	magick/magick-type.h	/^  MagentaChannel = 0x0002,$/;"	e	enum:__anon9
MagentaQuantum	magick/quantum.h	/^  MagentaQuantum,$/;"	e	enum:__anon7
MagicCompare	magick/magic.c	/^static int MagicCompare(const void *x,const void *y)$/;"	f	file:
MagicComponentGenesis	magick/magic.c	/^MagickExport MagickBooleanType MagicComponentGenesis(void)$/;"	f
MagicComponentGenesis	magick/methods.h	728;"	d
MagicComponentTerminus	magick/magic.c	/^MagickExport void MagicComponentTerminus(void)$/;"	f
MagicComponentTerminus	magick/methods.h	729;"	d
MagicFilename	magick/magic.c	62;"	d	file:
MagicInfo	magick/magic.h	/^} MagicInfo;$/;"	t	typeref:struct:_MagicInfo
MagicInfoCompare	magick/magic.c	/^static int MagicInfoCompare(const void *x,const void *y)$/;"	f	file:
MagicMap	magick/magic.c	/^  MagicMap[] =$/;"	v	file:
MagicMapInfo	magick/magic.c	/^} MagicMapInfo;$/;"	t	typeref:struct:_MagicMapInfo	file:
Magick2PI	magick/image-private.h	27;"	d
MagickAbsoluteValue	magick/draw.c	/^static inline ssize_t MagickAbsoluteValue(const ssize_t x)$/;"	f	file:
MagickAbsoluteValue	magick/feature.c	/^static inline ssize_t MagickAbsoluteValue(const ssize_t x)$/;"	f	file:
MagickAbsoluteValue	magick/segment.c	/^static inline ssize_t MagickAbsoluteValue(const ssize_t x)$/;"	f	file:
MagickAbsoluteValue	magick/statistic.c	/^static inline MagickRealType MagickAbsoluteValue(const MagickRealType x)$/;"	f	file:
MagickAdaptiveBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveBlurImage(MagickWand *wand,$/;"	f
MagickAdaptiveBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveBlurImageChannel(MagickWand *wand,$/;"	f
MagickAdaptiveResizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveResizeImage(MagickWand *wand,$/;"	f
MagickAdaptiveSharpenImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveSharpenImage(MagickWand *wand,$/;"	f
MagickAdaptiveSharpenImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveSharpenImageChannel(MagickWand *wand,$/;"	f
MagickAdaptiveThresholdImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAdaptiveThresholdImage(MagickWand *wand,$/;"	f
MagickAddImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAddImage(MagickWand *wand,$/;"	f
MagickAddNoiseImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAddNoiseImage(MagickWand *wand,$/;"	f
MagickAddNoiseImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickAddNoiseImageChannel(MagickWand *wand,$/;"	f
MagickAffineTransformImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAffineTransformImage(MagickWand *wand,$/;"	f
MagickAlignOptions	magick/option.h	/^  MagickAlignOptions = 0,$/;"	e	enum:__anon86
MagickAlphaOptions	magick/option.h	/^  MagickAlphaOptions,$/;"	e	enum:__anon86
MagickAnimateImages	wand/magick-image.c	/^WandExport MagickBooleanType MagickAnimateImages(MagickWand *wand,$/;"	f
MagickAnnotateImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAnnotateImage(MagickWand *wand,$/;"	f
MagickAppendImages	wand/magick-image.c	/^WandExport MagickWand *MagickAppendImages(MagickWand *wand,$/;"	f
MagickAssumeAligned	magick/memory-private.h	35;"	d
MagickAssumeAligned	magick/memory-private.h	38;"	d
MagickAssumeAligned	magick/memory-private.h	41;"	d
MagickAuthoritativeURL	magick/version.h	65;"	d
MagickAuthoritativeURL	magick/version.h	67;"	d
MagickAutoGammaImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAutoGammaImage(MagickWand *wand)$/;"	f
MagickAutoGammaImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickAutoGammaImageChannel(MagickWand *wand,$/;"	f
MagickAutoLevelImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickAutoLevelImage(MagickWand *wand)$/;"	f
MagickAutoLevelImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickAutoLevelImageChannel(MagickWand *wand,$/;"	f
MagickBlackThresholdImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickBlackThresholdImage(MagickWand *wand,$/;"	f
MagickBlueShiftImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickBlueShiftImage(MagickWand *wand,$/;"	f
MagickBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickBlurImage(MagickWand *wand,$/;"	f
MagickBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickBlurImageChannel(MagickWand *wand,$/;"	f
MagickBooleanOptions	magick/option.h	/^  MagickBooleanOptions,$/;"	e	enum:__anon86
MagickBooleanType	magick/magick-type.h	/^} MagickBooleanType;$/;"	t	typeref:enum:__anon11
MagickBorderImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickBorderImage(MagickWand *wand,$/;"	f
MagickBrightnessContrastImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickBrightnessContrastImage(MagickWand *wand,$/;"	f
MagickBrightnessContrastImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickBrightnessContrastImageChannel($/;"	f
MagickCLEnv	magick/opencl.h	/^typedef struct _MagickCLEnv* MagickCLEnv;$/;"	t	typeref:struct:_MagickCLEnv
MagickCacheOptions	magick/option.h	/^  MagickCacheOptions,$/;"	e	enum:__anon86
MagickCachePrefetch	magick/thread-private.h	41;"	d
MagickCachePrefetch	magick/thread-private.h	44;"	d
MagickChangeDate	magick/version.h	60;"	d
MagickChannelOptions	magick/option.h	/^  MagickChannelOptions,$/;"	e	enum:__anon86
MagickCharcoalImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickCharcoalImage(MagickWand *wand,$/;"	f
MagickChopImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickChopImage(MagickWand *wand,$/;"	f
MagickClampImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickClampImage(MagickWand *wand)$/;"	f
MagickClampImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickClampImageChannel(MagickWand *wand,$/;"	f
MagickClassOptions	magick/option.h	/^  MagickClassOptions,$/;"	e	enum:__anon86
MagickClearException	wand/magick-wand.c	/^WandExport MagickBooleanType MagickClearException(MagickWand *wand)$/;"	f
MagickClipImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickClipImage(MagickWand *wand)$/;"	f
MagickClipImagePath	wand/magick-image.c	/^WandExport MagickBooleanType MagickClipImagePath(MagickWand *wand,$/;"	f
MagickClipPathOptions	magick/option.h	/^  MagickClipPathOptions,$/;"	e	enum:__anon86
MagickClutImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickClutImage(MagickWand *wand,$/;"	f
MagickClutImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickClutImageChannel(MagickWand *wand,$/;"	f
MagickCoalesceImages	wand/magick-image.c	/^WandExport MagickWand *MagickCoalesceImages(MagickWand *wand)$/;"	f
MagickCoderFilename	magick/coder.c	65;"	d	file:
MagickCoderOptions	magick/option.h	/^  MagickCoderOptions,$/;"	e	enum:__anon86
MagickColorDecisionListImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickColorDecisionListImage(MagickWand *wand,$/;"	f
MagickColorMatrixImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickColorMatrixImage(MagickWand *wand,$/;"	f
MagickColorOptions	magick/option.h	/^  MagickColorOptions,$/;"	e	enum:__anon86
MagickColorizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickColorizeImage(MagickWand *wand,$/;"	f
MagickColorspaceOptions	magick/option.h	/^  MagickColorspaceOptions,$/;"	e	enum:__anon86
MagickCombineImages	wand/magick-image.c	/^WandExport MagickWand *MagickCombineImages(MagickWand *wand,$/;"	f
MagickCommand	wand/mogrify.h	/^  (*MagickCommand)(ImageInfo *,int,char **,char **,ExceptionInfo *);$/;"	t
MagickCommandGenesis	wand/mogrify.c	/^WandExport MagickBooleanType MagickCommandGenesis(ImageInfo *image_info,$/;"	f
MagickCommandOptions	magick/option.h	/^  MagickCommandOptions,$/;"	e	enum:__anon86
MagickCommentImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickCommentImage(MagickWand *wand,$/;"	f
MagickCompare	magick/magick.c	/^static int MagickCompare(const void *x,const void *y)$/;"	f	file:
MagickCompareImageChannels	wand/magick-image.c	/^WandExport MagickWand *MagickCompareImageChannels(MagickWand *wand,$/;"	f
MagickCompareImageLayers	wand/magick-image.c	/^WandExport MagickWand *MagickCompareImageLayers(MagickWand *wand,$/;"	f
MagickCompareImages	wand/magick-image.c	/^WandExport MagickWand *MagickCompareImages(MagickWand *wand,$/;"	f
MagickComplexOptions	magick/option.h	/^  MagickComplexOptions,$/;"	e	enum:__anon86
MagickComponentGenesis	magick/magick.c	/^MagickExport MagickBooleanType MagickComponentGenesis(void)$/;"	f
MagickComponentGenesis	magick/methods.h	730;"	d
MagickComponentTerminus	magick/magick.c	/^MagickExport void MagickComponentTerminus(void)$/;"	f
MagickComponentTerminus	magick/methods.h	731;"	d
MagickComposeOptions	magick/option.h	/^  MagickComposeOptions,$/;"	e	enum:__anon86
MagickCompositeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickCompositeImage(MagickWand *wand,$/;"	f
MagickCompositeImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickCompositeImageChannel(MagickWand *wand,$/;"	f
MagickCompositeLayers	wand/magick-image.c	/^WandExport MagickBooleanType MagickCompositeLayers(MagickWand *wand,$/;"	f
MagickCompositeOver	magick/composite-private.h	/^static inline void MagickCompositeOver(const PixelPacket *p,$/;"	f
MagickCompressOptions	magick/option.h	/^  MagickCompressOptions,$/;"	e	enum:__anon86
MagickConfigureOptions	magick/option.h	/^  MagickConfigureOptions,$/;"	e	enum:__anon86
MagickConstituteImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickConstituteImage(MagickWand *wand,$/;"	f
MagickContrastImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickContrastImage(MagickWand *wand,$/;"	f
MagickContrastStretchImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickContrastStretchImage(MagickWand *wand,$/;"	f
MagickContrastStretchImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickContrastStretchImageChannel(MagickWand *wand,$/;"	f
MagickConvolveImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickConvolveImage(MagickWand *wand,$/;"	f
MagickConvolveImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickConvolveImageChannel(MagickWand *wand,$/;"	f
MagickCopyright	magick/version.h	33;"	d
MagickCoreDLL	magick/configure.c	746;"	d	file:
MagickCoreDebugDLL	magick/configure.c	747;"	d	file:
MagickCoreGenesis	magick/magick.c	/^MagickExport void MagickCoreGenesis(const char *path,$/;"	f
MagickCoreGenesis	magick/methods.h	732;"	d
MagickCoreTerminus	magick/magick.c	/^MagickExport void MagickCoreTerminus(void)$/;"	f
MagickCoreTerminus	magick/methods.h	733;"	d
MagickCreateThreadKey	magick/methods.h	734;"	d
MagickCropImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickCropImage(MagickWand *wand,$/;"	f
MagickCycleColormapImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickCycleColormapImage(MagickWand *wand,$/;"	f
MagickDLLCall	magick/delegate-private.h	38;"	d
MagickDLLCall	magick/delegate-private.h	40;"	d
MagickDataTypeOptions	magick/option.h	/^  MagickDataTypeOptions,$/;"	e	enum:__anon86
MagickDebugOptions	magick/option.h	/^  MagickDebugOptions,$/;"	e	enum:__anon86
MagickDecipherImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDecipherImage(MagickWand *wand,$/;"	f
MagickDeconstructImages	wand/magick-image.c	/^WandExport MagickWand *MagickDeconstructImages(MagickWand *wand)$/;"	f
MagickDecorateOptions	magick/option.h	/^  MagickDecorateOptions,$/;"	e	enum:__anon86
MagickDelay	magick/utility.c	/^MagickExport void MagickDelay(const MagickSizeType milliseconds)$/;"	f
MagickDelegateOptions	magick/option.h	/^  MagickDelegateOptions,$/;"	e	enum:__anon86
MagickDelegates	magick/version.h	62;"	d
MagickDeleteImageArtifact	wand/magick-property.c	/^WandExport MagickBooleanType MagickDeleteImageArtifact(MagickWand *wand,$/;"	f
MagickDeleteImageProperty	wand/magick-property.c	/^WandExport MagickBooleanType MagickDeleteImageProperty(MagickWand *wand,$/;"	f
MagickDeleteOption	wand/magick-property.c	/^WandExport MagickBooleanType MagickDeleteOption(MagickWand *wand,$/;"	f
MagickDeleteThreadKey	magick/methods.h	735;"	d
MagickDeskewImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDeskewImage(MagickWand *wand,$/;"	f
MagickDespeckleImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDespeckleImage(MagickWand *wand)$/;"	f
MagickDestroyImage	wand/magick-image.c	/^WandExport Image *MagickDestroyImage(Image *image)$/;"	f
MagickDirectionOptions	magick/option.h	/^  MagickDirectionOptions,$/;"	e	enum:__anon86
MagickDisplayImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDisplayImage(MagickWand *wand,$/;"	f
MagickDisplayImages	wand/magick-image.c	/^WandExport MagickBooleanType MagickDisplayImages(MagickWand *wand,$/;"	f
MagickDisposeOptions	magick/option.h	/^  MagickDisposeOptions,$/;"	e	enum:__anon86
MagickDistortImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDistortImage(MagickWand *wand,$/;"	f
MagickDistortOptions	magick/option.h	/^  MagickDistortOptions,$/;"	e	enum:__anon86
MagickDitherOptions	magick/option.h	/^  MagickDitherOptions,$/;"	e	enum:__anon86
MagickDrawImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickDrawImage(MagickWand *wand,$/;"	f
MagickEdgeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEdgeImage(MagickWand *wand,$/;"	f
MagickEmbossImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEmbossImage(MagickWand *wand,$/;"	f
MagickEncipherImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEncipherImage(MagickWand *wand,$/;"	f
MagickEndianOptions	magick/option.h	/^  MagickEndianOptions,$/;"	e	enum:__anon86
MagickEnhanceImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEnhanceImage(MagickWand *wand)$/;"	f
MagickEpsilon	magick/magick-type.h	139;"	d
MagickEpsilonReciprocal	magick/deprecate.h	/^static inline double MagickEpsilonReciprocal(const double x)$/;"	f
MagickEqualizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEqualizeImage(MagickWand *wand)$/;"	f
MagickEqualizeImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickEqualizeImageChannel(MagickWand *wand,$/;"	f
MagickError	magick/exception.c	/^MagickExport void MagickError(const ExceptionType error,const char *reason,$/;"	f
MagickError	magick/methods.h	736;"	d
MagickEvaluateImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickEvaluateImage(MagickWand *wand,$/;"	f
MagickEvaluateImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickEvaluateImageChannel(MagickWand *wand,$/;"	f
MagickEvaluateImages	wand/magick-image.c	/^WandExport MagickWand *MagickEvaluateImages(MagickWand *wand,$/;"	f
MagickEvaluateOperator	magick/statistic.h	/^} MagickEvaluateOperator;$/;"	t	typeref:enum:__anon89
MagickEvaluateOptions	magick/option.h	/^  MagickEvaluateOptions,$/;"	e	enum:__anon86
MagickExport	magick/method-attribute.h	44;"	d
MagickExport	magick/method-attribute.h	46;"	d
MagickExport	magick/method-attribute.h	53;"	d
MagickExport	magick/method-attribute.h	55;"	d
MagickExport	magick/method-attribute.h	62;"	d
MagickExport	magick/method-attribute.h	95;"	d
MagickExport	magick/method-attribute.h	98;"	d
MagickExportImagePixels	wand/magick-image.c	/^WandExport MagickBooleanType MagickExportImagePixels(MagickWand *wand,$/;"	f
MagickExtentImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickExtentImage(MagickWand *wand,$/;"	f
MagickFalse	magick/magick-type.h	/^  MagickFalse = 0,$/;"	e	enum:__anon11
MagickFatalError	magick/exception.c	/^MagickExport void MagickFatalError(const ExceptionType error,const char *reason,$/;"	f
MagickFatalError	magick/methods.h	737;"	d
MagickFeatures	magick/version.h	61;"	d
MagickFillRuleOptions	magick/option.h	/^  MagickFillRuleOptions,$/;"	e	enum:__anon86
MagickFilterImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFilterImage(MagickWand *wand,$/;"	f
MagickFilterImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickFilterImageChannel(MagickWand *wand,$/;"	f
MagickFilterOptions	magick/option.h	/^  MagickFilterOptions,$/;"	e	enum:__anon86
MagickFlipImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFlipImage(MagickWand *wand)$/;"	f
MagickFloodfillPaintImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFloodfillPaintImage(MagickWand *wand,$/;"	f
MagickFlopImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFlopImage(MagickWand *wand)$/;"	f
MagickFontOptions	magick/option.h	/^  MagickFontOptions,$/;"	e	enum:__anon86
MagickFontsOptions	magick/option.h	/^  MagickFontsOptions,$/;"	e	enum:__anon86
MagickFormatOptions	magick/option.h	/^  MagickFormatOptions,$/;"	e	enum:__anon86
MagickFormatType	magick/magick.h	/^} MagickFormatType;$/;"	t	typeref:enum:__anon58
MagickForwardFourierTransformImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickForwardFourierTransformImage($/;"	f
MagickFrameImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFrameImage(MagickWand *wand,$/;"	f
MagickFunction	magick/statistic.h	/^} MagickFunction;$/;"	t	typeref:enum:__anon90
MagickFunctionImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickFunctionImage(MagickWand *wand,$/;"	f
MagickFunctionImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickFunctionImageChannel(MagickWand *wand,$/;"	f
MagickFunctionOptions	magick/option.h	/^  MagickFunctionOptions,$/;"	e	enum:__anon86
MagickFxImage	wand/magick-image.c	/^WandExport MagickWand *MagickFxImage(MagickWand *wand,const char *expression)$/;"	f
MagickFxImageChannel	wand/magick-image.c	/^WandExport MagickWand *MagickFxImageChannel(MagickWand *wand,$/;"	f
MagickGammaImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickGammaImage(MagickWand *wand,$/;"	f
MagickGammaImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickGammaImageChannel(MagickWand *wand,$/;"	f
MagickGaussianBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickGaussianBlurImage(MagickWand *wand,$/;"	f
MagickGaussianBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickGaussianBlurImageChannel(MagickWand *wand,$/;"	f
MagickGetAntialias	wand/magick-property.c	/^WandExport MagickBooleanType MagickGetAntialias(const MagickWand *wand)$/;"	f
MagickGetBackgroundColor	wand/magick-property.c	/^WandExport PixelWand *MagickGetBackgroundColor(MagickWand *wand)$/;"	f
MagickGetColorspace	wand/magick-property.c	/^WandExport ColorspaceType MagickGetColorspace(MagickWand *wand)$/;"	f
MagickGetCompression	wand/magick-property.c	/^WandExport CompressionType MagickGetCompression(MagickWand *wand)$/;"	f
MagickGetCompressionQuality	wand/magick-property.c	/^WandExport size_t MagickGetCompressionQuality(MagickWand *wand)$/;"	f
MagickGetCopyright	wand/magick-property.c	/^WandExport const char *MagickGetCopyright(void)$/;"	f
MagickGetException	wand/magick-wand.c	/^WandExport char *MagickGetException(const MagickWand *wand,$/;"	f
MagickGetExceptionType	wand/magick-wand.c	/^WandExport ExceptionType MagickGetExceptionType(const MagickWand *wand)$/;"	f
MagickGetFilename	wand/magick-property.c	/^WandExport char *MagickGetFilename(const MagickWand *wand)$/;"	f
MagickGetFont	wand/magick-property.c	/^WandExport char *MagickGetFont(MagickWand *wand)$/;"	f
MagickGetFormat	wand/magick-property.c	/^WandExport char *MagickGetFormat(MagickWand *wand)$/;"	f
MagickGetGravity	wand/magick-property.c	/^WandExport GravityType MagickGetGravity(MagickWand *wand)$/;"	f
MagickGetHomeURL	wand/magick-property.c	/^WandExport char *MagickGetHomeURL(void)$/;"	f
MagickGetImage	wand/magick-image.c	/^WandExport MagickWand *MagickGetImage(MagickWand *wand)$/;"	f
MagickGetImageAlphaChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageAlphaChannel(MagickWand *wand)$/;"	f
MagickGetImageArtifact	wand/magick-property.c	/^WandExport char *MagickGetImageArtifact(MagickWand *wand,const char *artifact)$/;"	f
MagickGetImageArtifacts	wand/magick-property.c	/^WandExport char **MagickGetImageArtifacts(MagickWand *wand,$/;"	f
MagickGetImageBackgroundColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageBackgroundColor(MagickWand *wand,$/;"	f
MagickGetImageBlob	wand/magick-image.c	/^WandExport unsigned char *MagickGetImageBlob(MagickWand *wand,size_t *length)$/;"	f
MagickGetImageBluePrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageBluePrimary(MagickWand *wand,$/;"	f
MagickGetImageBorderColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageBorderColor(MagickWand *wand,$/;"	f
MagickGetImageChannelDepth	wand/magick-image.c	/^WandExport size_t MagickGetImageChannelDepth(MagickWand *wand,$/;"	f
MagickGetImageChannelDistortion	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageChannelDistortion(MagickWand *wand,$/;"	f
MagickGetImageChannelDistortions	wand/magick-image.c	/^WandExport double *MagickGetImageChannelDistortions(MagickWand *wand,$/;"	f
MagickGetImageChannelFeatures	wand/magick-image.c	/^WandExport ChannelFeatures *MagickGetImageChannelFeatures(MagickWand *wand,$/;"	f
MagickGetImageChannelKurtosis	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageChannelKurtosis(MagickWand *wand,$/;"	f
MagickGetImageChannelMean	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageChannelMean(MagickWand *wand,$/;"	f
MagickGetImageChannelRange	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageChannelRange(MagickWand *wand,$/;"	f
MagickGetImageChannelStatistics	wand/magick-image.c	/^WandExport ChannelStatistics *MagickGetImageChannelStatistics(MagickWand *wand)$/;"	f
MagickGetImageClipMask	wand/magick-image.c	/^WandExport MagickWand *MagickGetImageClipMask(MagickWand *wand)$/;"	f
MagickGetImageColormapColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageColormapColor(MagickWand *wand,$/;"	f
MagickGetImageColors	wand/magick-image.c	/^WandExport size_t MagickGetImageColors(MagickWand *wand)$/;"	f
MagickGetImageColorspace	wand/magick-image.c	/^WandExport ColorspaceType MagickGetImageColorspace(MagickWand *wand)$/;"	f
MagickGetImageCompose	wand/magick-image.c	/^WandExport CompositeOperator MagickGetImageCompose(MagickWand *wand)$/;"	f
MagickGetImageCompression	wand/magick-image.c	/^WandExport CompressionType MagickGetImageCompression(MagickWand *wand)$/;"	f
MagickGetImageCompressionQuality	wand/magick-image.c	/^WandExport size_t MagickGetImageCompressionQuality(MagickWand *wand)$/;"	f
MagickGetImageDelay	wand/magick-image.c	/^WandExport size_t MagickGetImageDelay(MagickWand *wand)$/;"	f
MagickGetImageDepth	wand/magick-image.c	/^WandExport size_t MagickGetImageDepth(MagickWand *wand)$/;"	f
MagickGetImageDispose	wand/magick-image.c	/^WandExport DisposeType MagickGetImageDispose(MagickWand *wand)$/;"	f
MagickGetImageDistortion	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageDistortion(MagickWand *wand,$/;"	f
MagickGetImageEndian	wand/magick-image.c	/^WandExport EndianType MagickGetImageEndian(MagickWand *wand)$/;"	f
MagickGetImageFilename	wand/magick-image.c	/^WandExport char *MagickGetImageFilename(MagickWand *wand)$/;"	f
MagickGetImageFormat	wand/magick-image.c	/^WandExport char *MagickGetImageFormat(MagickWand *wand)$/;"	f
MagickGetImageFuzz	wand/magick-image.c	/^WandExport double MagickGetImageFuzz(MagickWand *wand)$/;"	f
MagickGetImageGamma	wand/magick-image.c	/^WandExport double MagickGetImageGamma(MagickWand *wand)$/;"	f
MagickGetImageGravity	wand/magick-image.c	/^WandExport GravityType MagickGetImageGravity(MagickWand *wand)$/;"	f
MagickGetImageGreenPrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageGreenPrimary(MagickWand *wand,$/;"	f
MagickGetImageHeight	wand/magick-image.c	/^WandExport size_t MagickGetImageHeight(MagickWand *wand)$/;"	f
MagickGetImageHistogram	wand/magick-image.c	/^WandExport PixelWand **MagickGetImageHistogram(MagickWand *wand,$/;"	f
MagickGetImageInterlaceScheme	wand/magick-image.c	/^WandExport InterlaceType MagickGetImageInterlaceScheme(MagickWand *wand)$/;"	f
MagickGetImageInterpolateMethod	wand/magick-image.c	/^WandExport InterpolatePixelMethod MagickGetImageInterpolateMethod($/;"	f
MagickGetImageIterations	wand/magick-image.c	/^WandExport size_t MagickGetImageIterations(MagickWand *wand)$/;"	f
MagickGetImageLength	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageLength(MagickWand *wand,$/;"	f
MagickGetImageMatteColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageMatteColor(MagickWand *wand,$/;"	f
MagickGetImageOrientation	wand/magick-image.c	/^WandExport OrientationType MagickGetImageOrientation(MagickWand *wand)$/;"	f
MagickGetImagePage	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImagePage(MagickWand *wand,$/;"	f
MagickGetImagePixelColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImagePixelColor(MagickWand *wand,$/;"	f
MagickGetImageProfile	wand/magick-property.c	/^WandExport unsigned char *MagickGetImageProfile(MagickWand *wand,$/;"	f
MagickGetImageProfiles	wand/magick-property.c	/^WandExport char **MagickGetImageProfiles(MagickWand *wand,const char *pattern,$/;"	f
MagickGetImageProperties	wand/magick-property.c	/^WandExport char **MagickGetImageProperties(MagickWand *wand,$/;"	f
MagickGetImageProperty	wand/magick-property.c	/^WandExport char *MagickGetImageProperty(MagickWand *wand,const char *property)$/;"	f
MagickGetImageRange	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageRange(MagickWand *wand,$/;"	f
MagickGetImageRedPrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageRedPrimary(MagickWand *wand,$/;"	f
MagickGetImageRegion	wand/magick-image.c	/^WandExport MagickWand *MagickGetImageRegion(MagickWand *wand,const size_t width,$/;"	f
MagickGetImageRenderingIntent	wand/magick-image.c	/^WandExport RenderingIntent MagickGetImageRenderingIntent(MagickWand *wand)$/;"	f
MagickGetImageResolution	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageResolution(MagickWand *wand,$/;"	f
MagickGetImageScene	wand/magick-image.c	/^WandExport size_t MagickGetImageScene(MagickWand *wand)$/;"	f
MagickGetImageSignature	wand/magick-image.c	/^WandExport char *MagickGetImageSignature(MagickWand *wand)$/;"	f
MagickGetImageTicksPerSecond	wand/magick-image.c	/^WandExport size_t MagickGetImageTicksPerSecond(MagickWand *wand)$/;"	f
MagickGetImageTotalInkDensity	wand/magick-image.c	/^WandExport double MagickGetImageTotalInkDensity(MagickWand *wand)$/;"	f
MagickGetImageType	wand/magick-image.c	/^WandExport ImageType MagickGetImageType(MagickWand *wand)$/;"	f
MagickGetImageUnits	wand/magick-image.c	/^WandExport ResolutionType MagickGetImageUnits(MagickWand *wand)$/;"	f
MagickGetImageVirtualPixelMethod	wand/magick-image.c	/^WandExport VirtualPixelMethod MagickGetImageVirtualPixelMethod(MagickWand *wand)$/;"	f
MagickGetImageWhitePoint	wand/magick-image.c	/^WandExport MagickBooleanType MagickGetImageWhitePoint(MagickWand *wand,$/;"	f
MagickGetImageWidth	wand/magick-image.c	/^WandExport size_t MagickGetImageWidth(MagickWand *wand)$/;"	f
MagickGetImagesBlob	wand/magick-image.c	/^WandExport unsigned char *MagickGetImagesBlob(MagickWand *wand,size_t *length)$/;"	f
MagickGetInterlaceScheme	wand/magick-property.c	/^WandExport InterlaceType MagickGetInterlaceScheme(MagickWand *wand)$/;"	f
MagickGetInterpolateMethod	wand/magick-property.c	/^WandExport InterpolatePixelMethod MagickGetInterpolateMethod(MagickWand *wand)$/;"	f
MagickGetIteratorIndex	wand/magick-wand.c	/^WandExport ssize_t MagickGetIteratorIndex(MagickWand *wand)$/;"	f
MagickGetNumberImages	wand/magick-image.c	/^WandExport size_t MagickGetNumberImages(MagickWand *wand)$/;"	f
MagickGetOption	wand/magick-property.c	/^WandExport char *MagickGetOption(MagickWand *wand,const char *key)$/;"	f
MagickGetOptions	wand/magick-property.c	/^WandExport char **MagickGetOptions(MagickWand *wand,const char *pattern,$/;"	f
MagickGetOrientation	wand/magick-property.c	/^WandExport OrientationType MagickGetOrientation(MagickWand *wand)$/;"	f
MagickGetPackageName	wand/magick-property.c	/^WandExport const char *MagickGetPackageName(void)$/;"	f
MagickGetPage	wand/magick-property.c	/^WandExport MagickBooleanType MagickGetPage(const MagickWand *wand,$/;"	f
MagickGetPointsize	wand/magick-property.c	/^WandExport double MagickGetPointsize(MagickWand *wand)$/;"	f
MagickGetQuantumDepth	wand/magick-property.c	/^WandExport const char *MagickGetQuantumDepth(size_t *depth)$/;"	f
MagickGetQuantumRange	wand/magick-property.c	/^WandExport const char *MagickGetQuantumRange(size_t *range)$/;"	f
MagickGetReleaseDate	wand/magick-property.c	/^WandExport const char *MagickGetReleaseDate(void)$/;"	f
MagickGetResolution	wand/magick-property.c	/^WandExport MagickBooleanType MagickGetResolution(const MagickWand *wand,$/;"	f
MagickGetResource	wand/magick-property.c	/^WandExport MagickSizeType MagickGetResource(const ResourceType type)$/;"	f
MagickGetResourceLimit	wand/magick-property.c	/^WandExport MagickSizeType MagickGetResourceLimit(const ResourceType type)$/;"	f
MagickGetSamplingFactors	wand/magick-property.c	/^WandExport double *MagickGetSamplingFactors(MagickWand *wand,$/;"	f
MagickGetSize	wand/magick-property.c	/^WandExport MagickBooleanType MagickGetSize(const MagickWand *wand,$/;"	f
MagickGetSizeOffset	wand/magick-property.c	/^WandExport MagickBooleanType MagickGetSizeOffset(const MagickWand *wand,$/;"	f
MagickGetThreadValue	magick/methods.h	738;"	d
MagickGetType	wand/magick-property.c	/^WandExport ImageType MagickGetType(MagickWand *wand)$/;"	f
MagickGetVersion	wand/magick-property.c	/^WandExport const char *MagickGetVersion(size_t *version)$/;"	f
MagickGravityOptions	magick/option.h	/^  MagickGravityOptions,$/;"	e	enum:__anon86
MagickHaldClutImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickHaldClutImage(MagickWand *wand,$/;"	f
MagickHaldClutImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickHaldClutImageChannel(MagickWand *wand,$/;"	f
MagickHasNextImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickHasNextImage(MagickWand *wand)$/;"	f
MagickHasPreviousImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickHasPreviousImage(MagickWand *wand)$/;"	f
MagickHomeURL	magick/version.h	63;"	d
MagickHuge	magick/deprecate.h	58;"	d
MagickIdentifyImage	wand/magick-image.c	/^WandExport char *MagickIdentifyImage(MagickWand *wand)$/;"	f
MagickImageCoderModule	magick/module.h	/^  MagickImageCoderModule,$/;"	e	enum:__anon48
MagickImageCoderSignature	magick/module.h	28;"	d
MagickImageFilterModule	magick/module.h	/^  MagickImageFilterModule$/;"	e	enum:__anon48
MagickImageFilterSignature	magick/module.h	30;"	d
MagickImplodeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickImplodeImage(MagickWand *wand,$/;"	f
MagickImportImagePixels	wand/magick-image.c	/^WandExport MagickBooleanType MagickImportImagePixels(MagickWand *wand,$/;"	f
MagickIncarnate	magick/deprecate.c	/^MagickExport void MagickIncarnate(const char *path)$/;"	f
MagickIncarnate	magick/methods.h	739;"	d
MagickInfo	magick/magick.h	/^} MagickInfo;$/;"	t	typeref:struct:_MagickInfo
MagickInfoCompare	magick/magick.c	/^static int MagickInfoCompare(const void *x,const void *y)$/;"	f	file:
MagickIntensityOptions	magick/option.h	/^  MagickIntensityOptions$/;"	e	enum:__anon86
MagickIntentOptions	magick/option.h	/^  MagickIntentOptions,$/;"	e	enum:__anon86
MagickInterlaceOptions	magick/option.h	/^  MagickInterlaceOptions,$/;"	e	enum:__anon86
MagickInterpolateOptions	magick/option.h	/^  MagickInterpolateOptions,$/;"	e	enum:__anon86
MagickInverseFourierTransformImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickInverseFourierTransformImage($/;"	f
MagickKernelOptions	magick/option.h	/^  MagickKernelOptions,$/;"	e	enum:__anon86
MagickLLConstant	magick/magick-type.h	32;"	d
MagickLLConstant	magick/magick-type.h	35;"	d
MagickLabelImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickLabelImage(MagickWand *wand,$/;"	f
MagickLayerMethod	magick/deprecate.h	/^} MagickLayerMethod;$/;"	t	typeref:enum:__anon22
MagickLayerOptions	magick/option.h	/^  MagickLayerOptions,$/;"	e	enum:__anon86
MagickLevelImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickLevelImage(MagickWand *wand,$/;"	f
MagickLevelImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickLevelImageChannel(MagickWand *wand,$/;"	f
MagickLibAddendum	magick/version.h	38;"	d
MagickLibInterface	magick/version.h	39;"	d
MagickLibMinInterface	magick/version.h	40;"	d
MagickLibVersion	magick/version.h	35;"	d
MagickLibVersionNumber	magick/version.h	37;"	d
MagickLibVersionText	magick/version.h	36;"	d
MagickLibrary	magick/opencl-private.h	/^typedef struct MagickLibraryRec MagickLibrary;$/;"	t	typeref:struct:MagickLibraryRec
MagickLibraryRec	magick/opencl-private.h	/^struct MagickLibraryRec$/;"	s
MagickLineCapOptions	magick/option.h	/^  MagickLineCapOptions,$/;"	e	enum:__anon86
MagickLineJoinOptions	magick/option.h	/^  MagickLineJoinOptions,$/;"	e	enum:__anon86
MagickLinearStretchImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickLinearStretchImage(MagickWand *wand,$/;"	f
MagickLiquidRescaleImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickLiquidRescaleImage(MagickWand *wand,$/;"	f
MagickListOptions	magick/option.h	/^  MagickListOptions,$/;"	e	enum:__anon86
MagickLocaleOptions	magick/option.h	/^  MagickLocaleOptions,$/;"	e	enum:__anon86
MagickLog10	magick/compare.c	/^static inline double MagickLog10(const double x)$/;"	f	file:
MagickLog10	magick/feature.c	/^static inline double MagickLog10(const double x)$/;"	f	file:
MagickLog10	magick/statistic.c	/^static inline double MagickLog10(const double x)$/;"	f	file:
MagickLogEventOptions	magick/option.h	/^  MagickLogEventOptions,$/;"	e	enum:__anon86
MagickLogFilename	magick/log.h	32;"	d
MagickLogMethod	magick/log.h	/^  (*MagickLogMethod)(const LogEventType,const char *);$/;"	t
MagickLogOptions	magick/option.h	/^  MagickLogOptions,$/;"	e	enum:__anon86
MagickMagicOptions	magick/option.h	/^  MagickMagicOptions,$/;"	e	enum:__anon86
MagickMagnifyImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickMagnifyImage(MagickWand *wand)$/;"	f
MagickMax	magick/animate.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/color.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/colormap.c	/^static inline size_t MagickMax(const size_t x,$/;"	f	file:
MagickMax	magick/composite.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/compress.c	/^static inline size_t MagickMax(const size_t x,const size_t y)$/;"	f	file:
MagickMax	magick/deprecate.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/display.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/distort.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/draw.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/enhance.c	/^static inline MagickRealType MagickMax(const MagickRealType x,$/;"	f	file:
MagickMax	magick/fx.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/gem.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/geometry.c	/^static inline size_t MagickMax(const size_t x,$/;"	f	file:
MagickMax	magick/montage.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/morphology.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/paint.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/pixel.c	/^static inline MagickRealType MagickMax(const MagickRealType x,$/;"	f	file:
MagickMax	magick/property.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/quantize.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/quantum.c	/^static inline size_t MagickMax(const size_t x,const size_t y)$/;"	f	file:
MagickMax	magick/resize.c	/^static inline double MagickMax(const double x,const double y)$/;"	f	file:
MagickMax	magick/resource.c	/^static inline size_t MagickMax(const size_t x,const size_t y)$/;"	f	file:
MagickMax	magick/segment.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMax	magick/type.c	/^static inline size_t MagickMax(const size_t x,const size_t y)$/;"	f	file:
MagickMax	wand/mogrify.c	/^static inline ssize_t MagickMax(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMaxBlobExtent	magick/blob.c	77;"	d	file:
MagickMaxBufferExtent	magick/blob.h	28;"	d
MagickMaximumValue	magick/magick-type.h	140;"	d
MagickMemoryMethods	magick/memory.c	/^} MagickMemoryMethods;$/;"	t	typeref:struct:_MagickMemoryMethods	file:
MagickMenus	magick/animate.c	1205;"	d	file:
MagickMenus	magick/display.c	13952;"	d	file:
MagickMergeImageLayers	wand/magick-image.c	/^WandExport MagickWand *MagickMergeImageLayers(MagickWand *wand,$/;"	f
MagickMethodOptions	magick/option.h	/^  MagickMethodOptions,$/;"	e	enum:__anon86
MagickMetricOptions	magick/option.h	/^  MagickMetricOptions,$/;"	e	enum:__anon86
MagickMimeOptions	magick/option.h	/^  MagickMimeOptions,$/;"	e	enum:__anon86
MagickMin	coders/tga.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/annotate.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/attribute.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/blob.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/cache.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/cipher.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/color.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/colormap.c	/^static inline size_t MagickMin(const size_t x,$/;"	f	file:
MagickMin	magick/compare.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/composite.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/compress.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/delegate.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/deprecate.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/display.c	/^static inline ssize_t MagickMin(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMin	magick/distort.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/distribute-cache.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/draw.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/enhance.c	/^static inline MagickRealType MagickMin(const MagickRealType x,$/;"	f	file:
MagickMin	magick/fx.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/gem.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/locale.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/matrix.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/montage.c	/^static inline ssize_t MagickMin(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMin	magick/morphology.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/pixel.c	/^static inline MagickRealType MagickMin(const MagickRealType x,$/;"	f	file:
MagickMin	magick/property.c	/^static inline ssize_t MagickMin(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMin	magick/quantize.c	/^static inline ssize_t MagickMin(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMin	magick/random.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/resize.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/resource.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/segment.c	/^static inline ssize_t MagickMin(const ssize_t x,const ssize_t y)$/;"	f	file:
MagickMin	magick/statistic.c	/^static inline double MagickMin(const double x,const double y)$/;"	f	file:
MagickMin	magick/string.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/type.c	/^static inline size_t MagickMin(const size_t x,const size_t y)$/;"	f	file:
MagickMin	magick/utility.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMin	magick/xml-tree.c	/^static inline MagickSizeType MagickMin(const MagickSizeType x,$/;"	f	file:
MagickMinBlobExtent	magick/blob-private.h	29;"	d
MagickMinifyImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickMinifyImage(MagickWand *wand)$/;"	f
MagickMinimumValue	magick/magick-type.h	141;"	d
MagickModeOptions	magick/option.h	/^  MagickModeOptions,$/;"	e	enum:__anon86
MagickModulateImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickModulateImage(MagickWand *wand,$/;"	f
MagickModuleOptions	magick/option.h	/^  MagickModuleOptions,$/;"	e	enum:__anon86
MagickModuleType	magick/module.h	/^} MagickModuleType;$/;"	t	typeref:enum:__anon48
MagickModulo	magick/cache.c	/^} MagickModulo;$/;"	t	typeref:struct:_MagickModulo	file:
MagickMonitor	magick/deprecate.c	/^MagickExport MagickBooleanType MagickMonitor(const char *text,$/;"	f
MagickMonitor	magick/methods.h	740;"	d
MagickMontageImage	wand/magick-image.c	/^WandExport MagickWand *MagickMontageImage(MagickWand *wand,$/;"	f
MagickMorphImages	wand/magick-image.c	/^WandExport MagickWand *MagickMorphImages(MagickWand *wand,$/;"	f
MagickMorphologyImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickMorphologyImage(MagickWand *wand,$/;"	f
MagickMorphologyImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickMorphologyImageChannel(MagickWand *wand,$/;"	f
MagickMorphologyOptions	magick/option.h	/^  MagickMorphologyOptions,$/;"	e	enum:__anon86
MagickMotionBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickMotionBlurImage(MagickWand *wand,$/;"	f
MagickMotionBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickMotionBlurImageChannel(MagickWand *wand,$/;"	f
MagickMutexType	magick/thread-private.h	/^  typedef CRITICAL_SECTION MagickMutexType;$/;"	t
MagickMutexType	magick/thread-private.h	/^  typedef pthread_mutex_t MagickMutexType;$/;"	t
MagickMutexType	magick/thread-private.h	/^  typedef size_t MagickMutexType;$/;"	t
MagickNegateImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickNegateImage(MagickWand *wand,$/;"	f
MagickNegateImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickNegateImageChannel(MagickWand *wand,$/;"	f
MagickNewImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickNewImage(MagickWand *wand,const size_t width,$/;"	f
MagickNextImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickNextImage(MagickWand *wand)$/;"	f
MagickNoiseOptions	magick/option.h	/^  MagickNoiseOptions,$/;"	e	enum:__anon86
MagickNormalizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickNormalizeImage(MagickWand *wand)$/;"	f
MagickNormalizeImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickNormalizeImageChannel(MagickWand *wand,$/;"	f
MagickOffsetFormat	magick/magick-type.h	152;"	d
MagickOffsetFormat	magick/magick-type.h	157;"	d
MagickOffsetFormat	magick/magick-type.h	163;"	d
MagickOffsetType	magick/magick-type.h	/^typedef __int64 MagickOffsetType;$/;"	t
MagickOffsetType	magick/magick-type.h	/^typedef long long MagickOffsetType;$/;"	t
MagickOffsetType	magick/magick-type.h	/^typedef ssize_t MagickOffsetType;$/;"	t
MagickOilPaintImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickOilPaintImage(MagickWand *wand,$/;"	f
MagickOpaquePaintImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickOpaquePaintImage(MagickWand *wand,$/;"	f
MagickOpaquePaintImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickOpaquePaintImageChannel(MagickWand *wand,$/;"	f
MagickOpenCLEnvParam	magick/opencl.h	/^} MagickOpenCLEnvParam;$/;"	t	typeref:enum:__anon61
MagickOpenCLProgram	magick/opencl.h	/^} MagickOpenCLProgram;$/;"	t	typeref:enum:__anon60
MagickOptimizeImageLayers	wand/magick-image.c	/^WandExport MagickWand *MagickOptimizeImageLayers(MagickWand *wand)$/;"	f
MagickOptimizeImageTransparency	wand/magick-image.c	/^WandExport MagickBooleanType MagickOptimizeImageTransparency(MagickWand *wand)$/;"	f
MagickOrderedPosterizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickOrderedPosterizeImage(MagickWand *wand,$/;"	f
MagickOrderedPosterizeImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickOrderedPosterizeImageChannel($/;"	f
MagickOrientationOptions	magick/option.h	/^  MagickOrientationOptions,$/;"	e	enum:__anon86
MagickOver_	magick/composite-private.h	/^static inline MagickRealType MagickOver_(const MagickRealType p,$/;"	f
MagickPHI	magick/image-private.h	28;"	d
MagickPI	magick/image-private.h	26;"	d
MagickPI	wand/magick-wand-private.h	25;"	d
MagickPI2	magick/image-private.h	29;"	d
MagickPackageName	magick/version.h	29;"	d
MagickPackageName	magick/version.h	31;"	d
MagickPath	magick/utility.h	/^  MagickPath,$/;"	e	enum:__anon31
MagickPingImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickPingImage(MagickWand *wand,$/;"	f
MagickPingImageBlob	wand/magick-image.c	/^WandExport MagickBooleanType MagickPingImageBlob(MagickWand *wand,$/;"	f
MagickPingImageFile	wand/magick-image.c	/^WandExport MagickBooleanType MagickPingImageFile(MagickWand *wand,FILE *file)$/;"	f
MagickPixelCompositeAreaBlend	magick/composite-private.h	/^static inline void MagickPixelCompositeAreaBlend(const MagickPixelPacket *p,$/;"	f
MagickPixelCompositeBlend	magick/composite-private.h	/^static inline void MagickPixelCompositeBlend(const MagickPixelPacket *p,$/;"	f
MagickPixelCompositeMask	magick/cache.c	/^static inline void MagickPixelCompositeMask(const MagickPixelPacket *p,$/;"	f	file:
MagickPixelCompositeOver	magick/composite-private.h	/^static inline void MagickPixelCompositeOver(const MagickPixelPacket *p,$/;"	f
MagickPixelCompositePlus	magick/composite-private.h	/^static inline void MagickPixelCompositePlus(const MagickPixelPacket *p,$/;"	f
MagickPixelIntensity	magick/color-private.h	/^static inline MagickRealType MagickPixelIntensity($/;"	f
MagickPixelIntensityOptions	magick/option.h	/^  MagickPixelIntensityOptions,$/;"	e	enum:__anon86
MagickPixelIntensityToQuantum	magick/color-private.h	/^static inline Quantum MagickPixelIntensityToQuantum($/;"	f
MagickPixelLuma	magick/color-private.h	/^static inline MagickRealType MagickPixelLuma($/;"	f
MagickPixelLuminance	magick/color-private.h	/^static inline MagickRealType MagickPixelLuminance($/;"	f
MagickPixelPacket	magick/pixel.h	/^} MagickPixelPacket;$/;"	t	typeref:struct:_MagickPixelPacket
MagickPlatform	magick/version.h	42;"	d
MagickPlatform	magick/version.h	46;"	d
MagickPlatform	magick/version.h	48;"	d
MagickPlatform	magick/version.h	51;"	d
MagickPolaroidImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickPolaroidImage(MagickWand *wand,$/;"	f
MagickPolicyDomainOptions	magick/option.h	/^  MagickPolicyDomainOptions,$/;"	e	enum:__anon86
MagickPolicyOptions	magick/option.h	/^  MagickPolicyOptions,$/;"	e	enum:__anon86
MagickPolicyRightsOptions	magick/option.h	/^  MagickPolicyRightsOptions,$/;"	e	enum:__anon86
MagickPosterizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickPosterizeImage(MagickWand *wand,$/;"	f
MagickPrecision	magick/magick.c	1535;"	d	file:
MagickPreviewImages	wand/magick-image.c	/^WandExport MagickWand *MagickPreviewImages(MagickWand *wand,$/;"	f
MagickPreviewOptions	magick/option.h	/^  MagickPreviewOptions,$/;"	e	enum:__anon86
MagickPreviousImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickPreviousImage(MagickWand *wand)$/;"	f
MagickPrimitiveOptions	magick/option.h	/^  MagickPrimitiveOptions,$/;"	e	enum:__anon86
MagickPrivate	magick/method-attribute.h	34;"	d
MagickPrivate	magick/method-attribute.h	96;"	d
MagickPrivate	magick/method-attribute.h	99;"	d
MagickProfileImage	wand/magick-property.c	/^WandExport MagickBooleanType MagickProfileImage(MagickWand *wand,$/;"	f
MagickProgressMonitor	magick/monitor.h	/^  (*MagickProgressMonitor)(const char *,const MagickOffsetType,$/;"	t
MagickQuantizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickQuantizeImage(MagickWand *wand,$/;"	f
MagickQuantizeImages	wand/magick-image.c	/^WandExport MagickBooleanType MagickQuantizeImages(MagickWand *wand,$/;"	f
MagickQuantumDepth	magick/version.h	70;"	d
MagickQuantumDepth	magick/version.h	73;"	d
MagickQuantumDepth	magick/version.h	76;"	d
MagickQuantumDepth	magick/version.h	79;"	d
MagickQuantumDepth	magick/version.h	82;"	d
MagickQuantumFormatOptions	magick/option.h	/^  MagickQuantumFormatOptions,$/;"	e	enum:__anon86
MagickQuantumRange	magick/version.h	71;"	d
MagickQuantumRange	magick/version.h	74;"	d
MagickQuantumRange	magick/version.h	77;"	d
MagickQuantumRange	magick/version.h	80;"	d
MagickQuantumRange	magick/version.h	83;"	d
MagickQueryConfigureOption	wand/magick-wand.c	/^WandExport char *MagickQueryConfigureOption(const char *option)$/;"	f
MagickQueryConfigureOptions	wand/magick-wand.c	/^WandExport char **MagickQueryConfigureOptions(const char *pattern,$/;"	f
MagickQueryFontMetrics	wand/magick-wand.c	/^WandExport double *MagickQueryFontMetrics(MagickWand *wand,$/;"	f
MagickQueryFonts	wand/magick-wand.c	/^WandExport char **MagickQueryFonts(const char *pattern,$/;"	f
MagickQueryFormats	wand/magick-wand.c	/^WandExport char **MagickQueryFormats(const char *pattern,$/;"	f
MagickQueryMultilineFontMetrics	wand/magick-wand.c	/^WandExport double *MagickQueryMultilineFontMetrics(MagickWand *wand,$/;"	f
MagickRaiseImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRaiseImage(MagickWand *wand,$/;"	f
MagickRandomThresholdImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRandomThresholdImage(MagickWand *wand,$/;"	f
MagickRandomThresholdImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickRandomThresholdImageChannel(MagickWand *wand,$/;"	f
MagickReadDirectory	magick/module.c	/^static inline int MagickReadDirectory(DIR *directory,struct dirent *entry,$/;"	f	file:
MagickReadDirectory	magick/utility.c	/^static inline int MagickReadDirectory(DIR *directory,struct dirent *entry,$/;"	f	file:
MagickReadImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickReadImage(MagickWand *wand,$/;"	f
MagickReadImageBlob	wand/magick-image.c	/^WandExport MagickBooleanType MagickReadImageBlob(MagickWand *wand,$/;"	f
MagickReadImageFile	wand/magick-image.c	/^WandExport MagickBooleanType MagickReadImageFile(MagickWand *wand,FILE *file)$/;"	f
MagickRealType	magick/magick-type.h	/^typedef double MagickRealType;$/;"	t
MagickRealType	magick/magick-type.h	/^typedef float MagickRealType;$/;"	t
MagickRealType	magick/magick-type.h	/^typedef long double MagickRealType;$/;"	t
MagickRealTypeCompare	magick/quantize.c	/^static int MagickRealTypeCompare(const void *error_p,const void *error_q)$/;"	f	file:
MagickReleaseDate	magick/version.h	59;"	d
MagickRelinquishMemory	wand/magick-wand.c	/^WandExport void *MagickRelinquishMemory(void *memory)$/;"	f
MagickRemapImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRemapImage(MagickWand *wand,$/;"	f
MagickRemoveImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRemoveImage(MagickWand *wand)$/;"	f
MagickRemoveImageProfile	wand/magick-property.c	/^WandExport unsigned char *MagickRemoveImageProfile(MagickWand *wand,$/;"	f
MagickResampleImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickResampleImage(MagickWand *wand,$/;"	f
MagickResetImagePage	wand/magick-image.c	/^WandExport MagickBooleanType MagickResetImagePage(MagickWand *wand,$/;"	f
MagickResetIterator	wand/magick-wand.c	/^WandExport void MagickResetIterator(MagickWand *wand)$/;"	f
MagickResizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickResizeImage(MagickWand *wand,$/;"	f
MagickResolutionOptions	magick/option.h	/^  MagickResolutionOptions,$/;"	e	enum:__anon86
MagickResourceInfinity	magick/resource_.h	38;"	d
MagickResourceOptions	magick/option.h	/^  MagickResourceOptions,$/;"	e	enum:__anon86
MagickRollImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRollImage(MagickWand *wand,const ssize_t x,$/;"	f
MagickRotateImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRotateImage(MagickWand *wand,$/;"	f
MagickRotationalBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickRotationalBlurImage(MagickWand *wand,$/;"	f
MagickRotationalBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickRotationalBlurImageChannel(MagickWand *wand,$/;"	f
MagickRound	magick/distort.c	/^static inline double MagickRound(double x)$/;"	f	file:
MagickRound	magick/feature.c	/^static inline double MagickRound(double x)$/;"	f	file:
MagickRound	magick/quantize.c	/^static inline double MagickRound(double x)$/;"	f	file:
MagickRound	magick/transform.c	/^static inline double MagickRound(double x)$/;"	f	file:
MagickSQ1_2	magick/image-private.h	30;"	d
MagickSQ2	magick/image-private.h	31;"	d
MagickSQ2PI	magick/image-private.h	32;"	d
MagickSVNRevision	magick/version.h	34;"	d
MagickSampleImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSampleImage(MagickWand *wand,$/;"	f
MagickScaleImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickScaleImage(MagickWand *wand,$/;"	f
MagickSegmentImage	wand/magick-image.c	/^MagickExport MagickBooleanType MagickSegmentImage(MagickWand *wand,$/;"	f
MagickSelectiveBlurImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSelectiveBlurImage(MagickWand *wand,$/;"	f
MagickSelectiveBlurImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSelectiveBlurImageChannel(MagickWand *wand,$/;"	f
MagickSeparateImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSeparateImageChannel(MagickWand *wand,$/;"	f
MagickSepiaToneImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSepiaToneImage(MagickWand *wand,$/;"	f
MagickSetAntialias	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetAntialias(MagickWand *wand,$/;"	f
MagickSetBackgroundColor	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetBackgroundColor(MagickWand *wand,$/;"	f
MagickSetColorspace	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetColorspace(MagickWand *wand,$/;"	f
MagickSetCompression	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetCompression(MagickWand *wand,$/;"	f
MagickSetCompressionQuality	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetCompressionQuality(MagickWand *wand,$/;"	f
MagickSetDepth	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetDepth(MagickWand *wand,$/;"	f
MagickSetExtract	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetExtract(MagickWand *wand,$/;"	f
MagickSetFilename	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetFilename(MagickWand *wand,$/;"	f
MagickSetFirstIterator	wand/magick-wand.c	/^WandExport void MagickSetFirstIterator(MagickWand *wand)$/;"	f
MagickSetFont	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetFont(MagickWand *wand,const char *font)$/;"	f
MagickSetFormat	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetFormat(MagickWand *wand,$/;"	f
MagickSetGravity	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetGravity(MagickWand *wand,$/;"	f
MagickSetImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImage(MagickWand *wand,$/;"	f
MagickSetImageAlphaChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageAlphaChannel(MagickWand *wand,$/;"	f
MagickSetImageArtifact	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetImageArtifact(MagickWand *wand,$/;"	f
MagickSetImageBackgroundColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageBackgroundColor(MagickWand *wand,$/;"	f
MagickSetImageBias	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageBias(MagickWand *wand,$/;"	f
MagickSetImageBluePrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageBluePrimary(MagickWand *wand,$/;"	f
MagickSetImageBorderColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageBorderColor(MagickWand *wand,$/;"	f
MagickSetImageChannelDepth	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageChannelDepth(MagickWand *wand,$/;"	f
MagickSetImageClipMask	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageClipMask(MagickWand *wand,$/;"	f
MagickSetImageColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageColor(MagickWand *wand,$/;"	f
MagickSetImageColormapColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageColormapColor(MagickWand *wand,$/;"	f
MagickSetImageColorspace	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageColorspace(MagickWand *wand,$/;"	f
MagickSetImageCompose	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageCompose(MagickWand *wand,$/;"	f
MagickSetImageCompression	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageCompression(MagickWand *wand,$/;"	f
MagickSetImageCompressionQuality	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageCompressionQuality(MagickWand *wand,$/;"	f
MagickSetImageDelay	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageDelay(MagickWand *wand,$/;"	f
MagickSetImageDepth	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageDepth(MagickWand *wand,$/;"	f
MagickSetImageDispose	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageDispose(MagickWand *wand,$/;"	f
MagickSetImageEndian	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageEndian(MagickWand *wand,$/;"	f
MagickSetImageExtent	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageExtent(MagickWand *wand,$/;"	f
MagickSetImageFilename	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageFilename(MagickWand *wand,$/;"	f
MagickSetImageFormat	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageFormat(MagickWand *wand,$/;"	f
MagickSetImageFuzz	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageFuzz(MagickWand *wand,$/;"	f
MagickSetImageGamma	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageGamma(MagickWand *wand,$/;"	f
MagickSetImageGravity	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageGravity(MagickWand *wand,$/;"	f
MagickSetImageGreenPrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageGreenPrimary(MagickWand *wand,$/;"	f
MagickSetImageInterlaceScheme	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageInterlaceScheme(MagickWand *wand,$/;"	f
MagickSetImageInterpolateMethod	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageInterpolateMethod(MagickWand *wand,$/;"	f
MagickSetImageIterations	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageIterations(MagickWand *wand,$/;"	f
MagickSetImageMatte	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageMatte(MagickWand *wand,$/;"	f
MagickSetImageMatteColor	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageMatteColor(MagickWand *wand,$/;"	f
MagickSetImageOpacity	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageOpacity(MagickWand *wand,$/;"	f
MagickSetImageOrientation	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageOrientation(MagickWand *wand,$/;"	f
MagickSetImagePage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImagePage(MagickWand *wand,$/;"	f
MagickSetImageProfile	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetImageProfile(MagickWand *wand,$/;"	f
MagickSetImageProgressMonitor	wand/magick-image.c	/^WandExport MagickProgressMonitor MagickSetImageProgressMonitor(MagickWand *wand,$/;"	f
MagickSetImageProperty	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetImageProperty(MagickWand *wand,$/;"	f
MagickSetImageRedPrimary	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageRedPrimary(MagickWand *wand,$/;"	f
MagickSetImageRenderingIntent	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageRenderingIntent(MagickWand *wand,$/;"	f
MagickSetImageResolution	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageResolution(MagickWand *wand,$/;"	f
MagickSetImageScene	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageScene(MagickWand *wand,$/;"	f
MagickSetImageTicksPerSecond	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageTicksPerSecond(MagickWand *wand,$/;"	f
MagickSetImageType	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageType(MagickWand *wand,$/;"	f
MagickSetImageUnits	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageUnits(MagickWand *wand,$/;"	f
MagickSetImageVirtualPixelMethod	wand/magick-image.c	/^WandExport VirtualPixelMethod MagickSetImageVirtualPixelMethod(MagickWand *wand,$/;"	f
MagickSetImageWhitePoint	wand/magick-image.c	/^WandExport MagickBooleanType MagickSetImageWhitePoint(MagickWand *wand,$/;"	f
MagickSetInterlaceScheme	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetInterlaceScheme(MagickWand *wand,$/;"	f
MagickSetInterpolateMethod	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetInterpolateMethod(MagickWand *wand,$/;"	f
MagickSetIteratorIndex	wand/magick-wand.c	/^WandExport MagickBooleanType MagickSetIteratorIndex(MagickWand *wand,$/;"	f
MagickSetLastIterator	wand/magick-wand.c	/^WandExport void MagickSetLastIterator(MagickWand *wand)$/;"	f
MagickSetOption	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetOption(MagickWand *wand,const char *key,$/;"	f
MagickSetOrientation	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetOrientation(MagickWand *wand,$/;"	f
MagickSetPage	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetPage(MagickWand *wand,$/;"	f
MagickSetPassphrase	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetPassphrase(MagickWand *wand,$/;"	f
MagickSetPointsize	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetPointsize(MagickWand *wand,$/;"	f
MagickSetProgressMonitor	wand/magick-property.c	/^WandExport MagickProgressMonitor MagickSetProgressMonitor(MagickWand *wand,$/;"	f
MagickSetResolution	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetResolution(MagickWand *wand,$/;"	f
MagickSetResourceLimit	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetResourceLimit(const ResourceType type,$/;"	f
MagickSetSamplingFactors	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetSamplingFactors(MagickWand *wand,$/;"	f
MagickSetSize	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetSize(MagickWand *wand,$/;"	f
MagickSetSizeOffset	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetSizeOffset(MagickWand *wand,$/;"	f
MagickSetThreadValue	magick/methods.h	742;"	d
MagickSetType	wand/magick-property.c	/^WandExport MagickBooleanType MagickSetType(MagickWand *wand,$/;"	f
MagickShadeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickShadeImage(MagickWand *wand,$/;"	f
MagickShadowImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickShadowImage(MagickWand *wand,$/;"	f
MagickSharpenImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSharpenImage(MagickWand *wand,$/;"	f
MagickSharpenImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSharpenImageChannel(MagickWand *wand,$/;"	f
MagickShaveImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickShaveImage(MagickWand *wand,$/;"	f
MagickShearImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickShearImage(MagickWand *wand,$/;"	f
MagickSigma	magick/effect.c	154;"	d	file:
MagickSigma	magick/effect.c	479;"	d	file:
MagickSigmoidalContrastImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSigmoidalContrastImage(MagickWand *wand,$/;"	f
MagickSigmoidalContrastImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSigmoidalContrastImageChannel($/;"	f
MagickSignalHandler	magick/magick.c	/^static void MagickSignalHandler(int signal_number)$/;"	f	file:
MagickSignature	magick/method-attribute.h	104;"	d
MagickSignatureSize	magick/signature-private.h	27;"	d
MagickSimilarityImage	wand/magick-image.c	/^WandExport MagickWand *MagickSimilarityImage(MagickWand *wand,$/;"	f
MagickSizeFormat	magick/magick-type.h	153;"	d
MagickSizeFormat	magick/magick-type.h	158;"	d
MagickSizeFormat	magick/magick-type.h	164;"	d
MagickSizeType	magick/magick-type.h	/^typedef size_t MagickSizeType;$/;"	t
MagickSizeType	magick/magick-type.h	/^typedef unsigned __int64 MagickSizeType;$/;"	t
MagickSizeType	magick/magick-type.h	/^typedef unsigned long long MagickSizeType;$/;"	t
MagickSketchImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSketchImage(MagickWand *wand,$/;"	f
MagickSmushImages	wand/magick-image.c	/^WandExport MagickWand *MagickSmushImages(MagickWand *wand,$/;"	f
MagickSolarizeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSolarizeImage(MagickWand *wand,$/;"	f
MagickSolarizeImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickSolarizeImageChannel(MagickWand *wand,$/;"	f
MagickSparseColorImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSparseColorImage(MagickWand *wand,$/;"	f
MagickSparseColorOptions	magick/option.h	/^  MagickSparseColorOptions,$/;"	e	enum:__anon86
MagickSpliceImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSpliceImage(MagickWand *wand,$/;"	f
MagickSpreadImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSpreadImage(MagickWand *wand,$/;"	f
MagickStatisticImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickStatisticImage(MagickWand *wand,$/;"	f
MagickStatisticImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickStatisticImageChannel(MagickWand *wand,$/;"	f
MagickStatisticOptions	magick/option.h	/^  MagickStatisticOptions,$/;"	e	enum:__anon86
MagickStatusType	magick/magick-type.h	/^typedef unsigned int MagickStatusType;$/;"	t
MagickSteganoImage	wand/magick-image.c	/^WandExport MagickWand *MagickSteganoImage(MagickWand *wand,$/;"	f
MagickStereoImage	wand/magick-image.c	/^WandExport MagickWand *MagickStereoImage(MagickWand *wand,$/;"	f
MagickStorageOptions	magick/option.h	/^  MagickStorageOptions,$/;"	e	enum:__anon86
MagickStretchOptions	magick/option.h	/^  MagickStretchOptions,$/;"	e	enum:__anon86
MagickString	magick/magic.c	63;"	d	file:
MagickStripImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickStripImage(MagickWand *wand)$/;"	f
MagickStyleOptions	magick/option.h	/^  MagickStyleOptions,$/;"	e	enum:__anon86
MagickSwirlImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickSwirlImage(MagickWand *wand,$/;"	f
MagickTextureImage	wand/magick-image.c	/^WandExport MagickWand *MagickTextureImage(MagickWand *wand,$/;"	f
MagickThreadKey	magick/thread_.h	/^typedef DWORD MagickThreadKey;$/;"	t
MagickThreadKey	magick/thread_.h	/^typedef pthread_key_t MagickThreadKey;$/;"	t
MagickThreadKey	magick/thread_.h	/^typedef size_t *MagickThreadKey;$/;"	t
MagickThreadSupport	magick/magick.h	/^} MagickThreadSupport;$/;"	t	typeref:enum:__anon59
MagickThreadType	magick/thread_.h	/^typedef DWORD MagickThreadType;$/;"	t
MagickThreadType	magick/thread_.h	/^typedef pid_t MagickThreadType;$/;"	t
MagickThreadType	magick/thread_.h	/^typedef pthread_t MagickThreadType;$/;"	t
MagickThresholdImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickThresholdImage(MagickWand *wand,$/;"	f
MagickThresholdImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickThresholdImageChannel(MagickWand *wand,$/;"	f
MagickThresholdOptions	magick/option.h	/^  MagickThresholdOptions,$/;"	e	enum:__anon86
MagickThumbnailImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickThumbnailImage(MagickWand *wand,$/;"	f
MagickTintImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickTintImage(MagickWand *wand,$/;"	f
MagickTitle	magick/animate.c	1207;"	d	file:
MagickTitle	magick/display.c	13953;"	d	file:
MagickToMime	magick/methods.h	743;"	d
MagickToMime	magick/mime.c	/^MagickExport char *MagickToMime(const char *magick)$/;"	f
MagickTransformImage	wand/magick-image.c	/^WandExport MagickWand *MagickTransformImage(MagickWand *wand,$/;"	f
MagickTransformImageColorspace	wand/magick-image.c	/^WandExport MagickBooleanType MagickTransformImageColorspace(MagickWand *wand,$/;"	f
MagickTransparentPaintImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickTransparentPaintImage(MagickWand *wand,$/;"	f
MagickTransposeImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickTransposeImage(MagickWand *wand)$/;"	f
MagickTransverseImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickTransverseImage(MagickWand *wand)$/;"	f
MagickTrimImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickTrimImage(MagickWand *wand,const double fuzz)$/;"	f
MagickTrue	magick/magick-type.h	/^  MagickTrue = 1$/;"	e	enum:__anon11
MagickTypeFilename	magick/type.c	102;"	d	file:
MagickTypeOptions	magick/option.h	/^  MagickTypeOptions,$/;"	e	enum:__anon86
MagickULLConstant	magick/magick-type.h	33;"	d
MagickULLConstant	magick/magick-type.h	36;"	d
MagickURLFilename	magick/version.c	54;"	d	file:
MagickUndefinedOptions	magick/option.h	/^  MagickUndefinedOptions = -1,$/;"	e	enum:__anon86
MagickUniqueImageColors	wand/magick-image.c	/^WandExport MagickBooleanType MagickUniqueImageColors(MagickWand *wand)$/;"	f
MagickUnsharpMaskImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickUnsharpMaskImage(MagickWand *wand,$/;"	f
MagickUnsharpMaskImageChannel	wand/magick-image.c	/^WandExport MagickBooleanType MagickUnsharpMaskImageChannel(MagickWand *wand,$/;"	f
MagickValidateOptions	magick/option.h	/^  MagickValidateOptions,$/;"	e	enum:__anon86
MagickVersion	magick/version.h	85;"	d
MagickVignetteImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickVignetteImage(MagickWand *wand,$/;"	f
MagickVirtualPixelOptions	magick/option.h	/^  MagickVirtualPixelOptions,$/;"	e	enum:__anon86
MagickWand	wand/MagickWand.h	/^  MagickWand;$/;"	t	typeref:struct:_MagickWand
MagickWandGenesis	wand/magick-wand.c	/^WandExport void MagickWandGenesis(void)$/;"	f
MagickWandId	wand/magick-image.c	59;"	d	file:
MagickWandId	wand/magick-wand-private.h	26;"	d
MagickWandTerminus	wand/magick-wand.c	/^WandExport void MagickWandTerminus(void)$/;"	f
MagickWarning	magick/exception.c	/^MagickExport void MagickWarning(const ExceptionType warning,const char *reason,$/;"	f
MagickWarning	magick/methods.h	744;"	d
MagickWaveImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickWaveImage(MagickWand *wand,$/;"	f
MagickWhiteThresholdImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickWhiteThresholdImage(MagickWand *wand,$/;"	f
MagickWriteImage	wand/magick-image.c	/^WandExport MagickBooleanType MagickWriteImage(MagickWand *wand,$/;"	f
MagickWriteImageFile	wand/magick-image.c	/^WandExport MagickBooleanType MagickWriteImageFile(MagickWand *wand,FILE *file)$/;"	f
MagickWriteImages	wand/magick-image.c	/^WandExport MagickBooleanType MagickWriteImages(MagickWand *wand,$/;"	f
MagickWriteImagesFile	wand/magick-image.c	/^WandExport MagickBooleanType MagickWriteImagesFile(MagickWand *wand,FILE *file)$/;"	f
MagickppLibAddendum	magick/version.h	56;"	d
MagickppLibInterface	magick/version.h	57;"	d
MagickppLibMinInterface	magick/version.h	58;"	d
MagickppLibVersionNumber	magick/version.h	55;"	d
MagickppLibVersionText	magick/version.h	54;"	d
MagnifyImage	magick/methods.h	745;"	d
MagnifyImage	magick/resize.c	/^MagickExport Image *MagnifyImage(const Image *image,ExceptionInfo *exception)$/;"	f
MagnifyImageTag	magick/resize.c	2028;"	d	file:
MagnifySize	magick/display.c	13951;"	d	file:
MagnitudePhaseComplexOperator	magick/fourier.h	/^  MagnitudePhaseComplexOperator,$/;"	e	enum:__anon2
Maj	magick/signature.c	/^static inline unsigned int Maj(unsigned int x,unsigned int y,unsigned int z)$/;"	f	file:
ManhattanKernel	magick/morphology.h	/^  ManhattanKernel,$/;"	e	enum:__anon69
MapBlob	magick/blob.c	/^MagickExport unsigned char *MapBlob(int file,const MapMode mode,$/;"	f
MapBlob	magick/methods.h	746;"	d
MapCache	magick/cache.h	/^  MapCache,$/;"	e	enum:__anon8
MapCommand	magick/display.c	/^  MapCommand,$/;"	e	enum:__anon20	file:
MapImage	magick/deprecate.c	/^MagickExport MagickBooleanType MapImage(Image *image,const Image *map_image,$/;"	f
MapImage	magick/methods.h	747;"	d
MapImages	magick/deprecate.c	/^MagickExport MagickBooleanType MapImages(Image *images,const Image *map_image,$/;"	f
MapImages	magick/methods.h	748;"	d
MapMode	magick/blob.h	/^} MapMode;$/;"	t	typeref:enum:__anon18
MapResource	magick/resource_.h	/^  MapResource,$/;"	e	enum:__anon65
MapVirtualMemory	magick/memory.c	/^  MapVirtualMemory,$/;"	e	enum:__anon33	file:
MaskPixelCacheNexus	magick/cache.c	/^static MagickBooleanType MaskPixelCacheNexus(Image *image,NexusInfo *nexus_info,$/;"	f	file:
MaskPixelComponent	magick/pixel.h	/^  MaskPixelComponent = 5$/;"	e	enum:__anon53
MaskVirtualPixelMethod	magick/cache-view.h	/^  MaskVirtualPixelMethod,$/;"	e	enum:__anon63
Mathematics	magick/composite.c	/^static inline MagickRealType Mathematics(const MagickRealType Sca,$/;"	f	file:
MathematicsCompositeOp	magick/composite.h	/^  MathematicsCompositeOp,$/;"	e	enum:__anon68
MatrixInfo	magick/matrix.h	/^  MatrixInfo;$/;"	t	typeref:struct:_MatrixInfo
MatrixSignalHandler	magick/matrix.c	/^static void MatrixSignalHandler(int status)$/;"	f	file:
MatrixToImage	magick/matrix.c	/^MagickExport Image *MatrixToImage(const MatrixInfo *matrix_info,$/;"	f
MatteChannel	magick/magick-type.h	/^  MatteChannel = 0x0008,     \/* deprecated *\/$/;"	e	enum:__anon9
MatteColor	magick/image.c	/^  MatteColor[] = "#bdbdbd",  \/* gray *\/$/;"	v
MatteCommand	magick/display.c	/^  MatteCommand,$/;"	e	enum:__anon20	file:
MatteEditBorderCommand	magick/display.c	/^  MatteEditBorderCommand,$/;"	e	enum:__anon21	file:
MatteEditDismissCommand	magick/display.c	/^  MatteEditDismissCommand,$/;"	e	enum:__anon21	file:
MatteEditFuzzCommand	magick/display.c	/^  MatteEditFuzzCommand,$/;"	e	enum:__anon21	file:
MatteEditHelpCommand	magick/display.c	/^  MatteEditHelpCommand,$/;"	e	enum:__anon21	file:
MatteEditMethod	magick/display.c	/^  MatteEditMethod,$/;"	e	enum:__anon21	file:
MatteEditUndoCommand	magick/display.c	/^  MatteEditUndoCommand,$/;"	e	enum:__anon21	file:
MatteEditValueCommand	magick/display.c	/^  MatteEditValueCommand,$/;"	e	enum:__anon21	file:
MatteElement	magick/xwindow-private.h	/^  MatteElement,$/;"	e	enum:__anon27
MatteFloodfillImage	magick/deprecate.c	/^MagickExport MagickBooleanType MatteFloodfillImage(Image *image,$/;"	f
MatteFloodfillImage	magick/methods.h	749;"	d
MattePrimitive	magick/draw.h	/^  MattePrimitive,$/;"	e	enum:__anon43
MaxBlockExponent	magick/memory.c	76;"	d	file:
MaxBlocks	magick/memory.c	77;"	d	file:
MaxCacheThreads	magick/cache.c	620;"	d	file:
MaxCapacities	magick/hashmap.c	1412;"	d	file:
MaxColormapSize	magick/magick-type.h	126;"	d
MaxColormapSize	magick/magick-type.h	40;"	d
MaxColormapSize	magick/magick-type.h	69;"	d
MaxColormapSize	magick/magick-type.h	98;"	d
MaxColors	magick/display.c	101;"	d	file:
MaxDimension	magick/segment.c	109;"	d	file:
MaxDirectoryStack	magick/profile.c	1688;"	d	file:
MaxDirectoryStack	magick/property.c	730;"	d	file:
MaxEntropyExtent	magick/random.c	362;"	d	file:
MaxEvaluateOperator	magick/statistic.h	/^  MaxEvaluateOperator,$/;"	e	enum:__anon89
MaxIconSize	magick/xwindow-private.h	70;"	d
MaxImageStackDepth	wand/mogrify-private.h	68;"	d
MaxLineExtent	magick/compress.c	232;"	d	file:
MaxMap	magick/magick-type.h	127;"	d
MaxMap	magick/magick-type.h	41;"	d
MaxMap	magick/magick-type.h	70;"	d
MaxMap	magick/magick-type.h	99;"	d
MaxMeanShiftIterations	magick/feature.c	2111;"	d	file:
MaxMultibyteCodes	magick/token-private.h	29;"	d
MaxNodes	magick/quantize.c	211;"	d	file:
MaxNumberFonts	magick/xwindow-private.h	72;"	d
MaxNumberImageMoments	magick/statistic.c	1481;"	d	file:
MaxNumberPens	magick/xwindow-private.h	71;"	d
MaxRGB	magick/deprecate.h	59;"	d
MaxRange	magick/accelerate.c	4424;"	d	file:
MaxRange	magick/enhance.c	1128;"	d	file:
MaxRecursionDepth	magick/locale.c	65;"	d	file:
MaxSegments	magick/memory.c	78;"	d	file:
MaxSplayTreeDepth	magick/splay-tree.c	63;"	d	file:
MaxStacksize	magick/deprecate.c	1175;"	d	file:
MaxStacksize	magick/paint.c	112;"	d	file:
MaxTextExtent	magick/method-attribute.h	106;"	d
MaxTextExtent	wand/method-attribute.h	99;"	d
MaxTreeDepth	magick/histogram.c	67;"	d	file:
MaxTreeDepth	magick/quantize.c	212;"	d	file:
MaxXWindows	magick/xwindow-private.h	73;"	d
Maximize	magick/morphology.c	100;"	d	file:
MaximumImages	magick/deprecate.c	/^MagickExport Image *MaximumImages(const Image *images,ExceptionInfo *exception)$/;"	f
MaximumStatistic	magick/statistic.h	/^  MaximumStatistic,$/;"	e	enum:__anon91
MaximumUniqueColors	magick/histogram.c	641;"	d	file:
MeanAbsoluteErrorMetric	magick/compare.h	/^  MeanAbsoluteErrorMetric,$/;"	e	enum:__anon92
MeanErrorPerPixelMetric	magick/compare.h	/^  MeanErrorPerPixelMetric,$/;"	e	enum:__anon92
MeanEvaluateOperator	magick/statistic.h	/^  MeanEvaluateOperator,$/;"	e	enum:__anon89
MeanShiftImage	magick/feature.c	/^MagickExport Image *MeanShiftImage(const Image *image,const size_t width,$/;"	f
MeanShiftImageTag	magick/feature.c	2112;"	d	file:
MeanSquaredErrorMetric	magick/compare.h	/^  MeanSquaredErrorMetric,$/;"	e	enum:__anon92
MeanStability	magick/segment.c	/^static void MeanStability(IntervalTree *node)$/;"	f	file:
MeanStatistic	magick/statistic.h	/^  MeanStatistic,$/;"	e	enum:__anon91
MedianEvaluateOperator	magick/statistic.h	/^  MedianEvaluateOperator,$/;"	e	enum:__anon89
MedianFilterImage	magick/deprecate.c	/^MagickExport Image *MedianFilterImage(const Image *image,const double radius,$/;"	f
MedianFilterImage	magick/methods.h	750;"	d
MedianStatistic	magick/statistic.h	/^  MedianStatistic,$/;"	e	enum:__anon91
MediumHashmapSize	magick/hashmap.h	26;"	d
MegabytesToBytes	magick/log.c	703;"	d	file:
MemoryCache	magick/cache.h	/^  MemoryCache,$/;"	e	enum:__anon8
MemoryGuard	magick/memory.c	79;"	d	file:
MemoryInfo	magick/memory_.h	/^  MemoryInfo;$/;"	t	typeref:struct:_MemoryInfo
MemoryPool	magick/memory.c	/^} MemoryPool;$/;"	t	typeref:struct:_MemoryPool	file:
MemoryResource	magick/resource_.h	/^  MemoryResource,$/;"	e	enum:__anon65
MergeImageLayers	magick/layer.c	/^MagickExport Image *MergeImageLayers(Image *image,$/;"	f
MergeImageLayers	magick/methods.h	751;"	d
MergeLayer	magick/layer.h	/^  MergeLayer,$/;"	e	enum:__anon72
MergeLayersTag	magick/layer.c	1944;"	d	file:
MeshInterpolate	magick/deprecate.c	/^static inline double MeshInterpolate(const PointInfo *delta,const double p,$/;"	f	file:
MeshInterpolate	magick/pixel.c	/^static inline double MeshInterpolate(const PointInfo *delta,const double p,$/;"	f	file:
MeshInterpolatePixel	magick/pixel.h	/^  MeshInterpolatePixel,              \/* Triangular mesh interpolation *\/$/;"	e	enum:__anon52
MethodHandler	magick/log.c	/^  MethodHandler = 0x0040$/;"	e	enum:__anon57	file:
MethodOptions	magick/option.c	/^  MethodOptions[] =$/;"	v	file:
MetricOptions	magick/option.c	/^  MetricOptions[] =$/;"	v	file:
MetricType	magick/compare.h	/^} MetricType;$/;"	t	typeref:enum:__anon92
MimeCompare	magick/mime.c	/^static int MimeCompare(const void *x,const void *y)$/;"	f	file:
MimeComponentGenesis	magick/methods.h	752;"	d
MimeComponentGenesis	magick/mime.c	/^MagickExport MagickBooleanType MimeComponentGenesis(void)$/;"	f
MimeComponentTerminus	magick/methods.h	753;"	d
MimeComponentTerminus	magick/mime.c	/^MagickExport void MimeComponentTerminus(void)$/;"	f
MimeFilename	magick/mime.c	63;"	d	file:
MimeInfo	magick/mime.h	/^  MimeInfo;$/;"	t	typeref:struct:_MimeInfo
MimeInfoCompare	magick/mime.c	/^static int MimeInfoCompare(const void *x,const void *y)$/;"	f	file:
MimeMap	magick/mime.c	/^  *MimeMap = (char *)$/;"	v	file:
MinEvaluateOperator	magick/statistic.h	/^  MinEvaluateOperator,$/;"	e	enum:__anon89
MinMaxStretchImage	magick/histogram.c	/^MagickExport MagickBooleanType MinMaxStretchImage(Image *image,$/;"	f
MinMaxStretchImage	magick/methods.h	755;"	d
MinifyImage	magick/methods.h	754;"	d
MinifyImage	magick/resize.c	/^MagickExport Image *MinifyImage(const Image *image,ExceptionInfo *exception)$/;"	f
MinimalThresholdMap	magick/threshold.c	/^  *MinimalThresholdMap =$/;"	v	file:
Minimize	magick/morphology.c	99;"	d	file:
MinimumImages	magick/deprecate.c	/^MagickExport Image *MinimumImages(const Image *images,ExceptionInfo *exception)$/;"	f
MinimumStatistic	magick/statistic.h	/^  MinimumStatistic,$/;"	e	enum:__anon91
MinimumValue	magick/geometry.h	/^  MinimumValue = 0x10000,  \/* '^'  special handling needed *\/$/;"	e	enum:__anon14
Minus	magick/composite.c	/^static inline MagickRealType Minus(const MagickRealType Sca,$/;"	f	file:
MinusCompositeOp	magick/composite.h	106;"	d
MinusDstCompositeOp	magick/composite.h	/^  MinusDstCompositeOp,$/;"	e	enum:__anon68
MinusSrcCompositeOp	magick/composite.h	/^  MinusSrcCompositeOp,$/;"	e	enum:__anon68
MirrorVirtualPixelMethod	magick/cache-view.h	/^  MirrorVirtualPixelMethod,$/;"	e	enum:__anon63
MissingDelegateError	magick/exception.h	/^  MissingDelegateError = 420,$/;"	e	enum:__anon84
MissingDelegateFatalError	magick/exception.h	/^  MissingDelegateFatalError = 720,$/;"	e	enum:__anon84
MissingDelegateWarning	magick/exception.h	/^  MissingDelegateWarning = 320,$/;"	e	enum:__anon84
MitchellFilter	magick/resample.h	/^  MitchellFilter,$/;"	e	enum:__anon76
MiterJoin	magick/draw.h	/^  MiterJoin,$/;"	e	enum:__anon41
ModeImage	magick/deprecate.c	/^MagickExport Image *ModeImage(const Image *image,const double radius,$/;"	f
ModeOptions	magick/option.c	/^  ModeOptions[] =$/;"	v	file:
ModeStatistic	magick/statistic.h	/^  ModeStatistic,$/;"	e	enum:__anon91
ModeType	magick/display.c	/^} ModeType;$/;"	t	typeref:enum:__anon21	file:
ModifierState	magick/xwindow-private.h	/^  ModifierState = 0x0008,$/;"	e	enum:__anon29
ModifyImage	magick/image.c	/^MagickExport MagickBooleanType ModifyImage(Image **image,$/;"	f
ModifyImage	magick/methods.h	756;"	d
ModulateCompositeOp	magick/composite.h	/^  ModulateCompositeOp,$/;"	e	enum:__anon68
ModulateHCL	magick/enhance.c	/^static inline void ModulateHCL(const double percent_hue,$/;"	f	file:
ModulateHCLp	magick/enhance.c	/^static inline void ModulateHCLp(const double percent_hue,$/;"	f	file:
ModulateHSB	magick/enhance.c	/^static inline void ModulateHSB(const double percent_hue,$/;"	f	file:
ModulateHSI	magick/enhance.c	/^static inline void ModulateHSI(const double percent_hue,$/;"	f	file:
ModulateHSL	magick/enhance.c	/^static inline void ModulateHSL(const double percent_hue,$/;"	f	file:
ModulateHSV	magick/enhance.c	/^static inline void ModulateHSV(const double percent_hue,$/;"	f	file:
ModulateHWB	magick/enhance.c	/^static inline void ModulateHWB(const double percent_hue,$/;"	f	file:
ModulateImage	magick/enhance.c	/^MagickExport MagickBooleanType ModulateImage(Image *image,const char *modulate)$/;"	f
ModulateImage	magick/methods.h	757;"	d
ModulateImageTag	magick/enhance.c	3685;"	d	file:
ModulateLCHab	magick/enhance.c	/^static inline void ModulateLCHab(const double percent_luma,$/;"	f	file:
ModulateLCHuv	magick/enhance.c	/^static inline void ModulateLCHuv(const double percent_luma,$/;"	f	file:
ModuleCompare	magick/module.c	/^static int ModuleCompare(const void *x,const void *y)$/;"	f	file:
ModuleComponentGenesis	magick/module.c	/^MagickExport MagickBooleanType ModuleComponentGenesis(void)$/;"	f
ModuleComponentTerminus	magick/module.c	/^MagickExport void ModuleComponentTerminus(void)$/;"	f
ModuleError	magick/exception.h	/^  ModuleError = 455,$/;"	e	enum:__anon84
ModuleEvent	magick/log.h	/^  ModuleEvent = 0x00800,$/;"	e	enum:__anon93
ModuleExport	magick/method-attribute.h	101;"	d
ModuleExport	magick/method-attribute.h	70;"	d
ModuleExport	magick/method-attribute.h	72;"	d
ModuleExport	magick/method-attribute.h	78;"	d
ModuleFatalError	magick/exception.h	/^  ModuleFatalError = 755,$/;"	e	enum:__anon84
ModuleGlobExpression	magick/module.c	77;"	d	file:
ModuleGlobExpression	magick/module.c	80;"	d	file:
ModuleGlobExpression	magick/module.c	82;"	d	file:
ModuleHandle	magick/module.c	/^typedef lt_dlhandle ModuleHandle;$/;"	t	file:
ModuleHandle	magick/module.c	/^typedef void *ModuleHandle;$/;"	t	file:
ModuleInfo	magick/module.h	/^} ModuleInfo;$/;"	t	typeref:struct:_ModuleInfo
ModuleInfoCompare	magick/module.c	/^static int ModuleInfoCompare(const void *x,const void *y)$/;"	f	file:
ModuleWarning	magick/exception.h	/^  ModuleWarning = 355,$/;"	e	enum:__anon84
ModulusAdd	magick/composite.c	/^static inline MagickRealType ModulusAdd(const MagickRealType p,$/;"	f	file:
ModulusAddCompositeOp	magick/composite.h	/^  ModulusAddCompositeOp,$/;"	e	enum:__anon68
ModulusSubtract	magick/composite.c	/^static inline MagickRealType ModulusSubtract(const MagickRealType p,$/;"	f	file:
ModulusSubtractCompositeOp	magick/composite.h	/^  ModulusSubtractCompositeOp,$/;"	e	enum:__anon68
MogrifyBackgroundColor	wand/mogrify.c	/^  MogrifyBackgroundColor[] = "#fff",  \/* white *\/$/;"	v	file:
MogrifyBorderColor	wand/mogrify.c	/^  MogrifyBorderColor[] = "#dfdfdf",  \/* sRGB gray *\/$/;"	v	file:
MogrifyImage	wand/mogrify.c	/^WandExport MagickBooleanType MogrifyImage(ImageInfo *image_info,const int argc,$/;"	f
MogrifyImageCommand	wand/mogrify.c	/^WandExport MagickBooleanType MogrifyImageCommand(ImageInfo *image_info,$/;"	f
MogrifyImageInfo	wand/mogrify.c	/^WandExport MagickBooleanType MogrifyImageInfo(ImageInfo *image_info,$/;"	f
MogrifyImageList	wand/mogrify.c	/^WandExport MagickBooleanType MogrifyImageList(ImageInfo *image_info,$/;"	f
MogrifyImageTag	wand/mogrify.c	8668;"	d	file:
MogrifyImages	wand/mogrify.c	/^WandExport MagickBooleanType MogrifyImages(ImageInfo *image_info,$/;"	f
MogrifyMatteColor	wand/mogrify.c	/^  MogrifyMatteColor[] = "#bdbdbd";  \/* slightly darker gray *\/$/;"	v	file:
MogrifyUsage	wand/mogrify.c	/^static MagickBooleanType MogrifyUsage(void)$/;"	f	file:
MonitorError	magick/exception.h	/^  MonitorError = 485,$/;"	e	enum:__anon84
MonitorFatalError	magick/exception.h	/^  MonitorFatalError = 785,$/;"	e	enum:__anon84
MonitorHandler	magick/deprecate.h	/^  (*MonitorHandler)(const char *,const MagickOffsetType,const MagickSizeType,$/;"	t
MonitorProgress	wand/mogrify.c	/^static MagickBooleanType MonitorProgress(const char *text,$/;"	f	file:
MonitorWarning	magick/exception.h	/^  MonitorWarning = 385,$/;"	e	enum:__anon84
MontageImageList	magick/methods.h	758;"	d
MontageImageList	magick/montage.c	/^MagickExport Image *MontageImageList(const ImageInfo *image_info,$/;"	f
MontageImageState	magick/xwindow-private.h	/^  MontageImageState = 0x0010,$/;"	e	enum:__anon29
MontageImageTag	magick/montage.c	339;"	d	file:
MontageImages	magick/methods.h	759;"	d
MontageImages	magick/montage.c	/^MagickExport Image *MontageImages(const Image *images,$/;"	f
MontageInfo	magick/montage.h	/^} MontageInfo;$/;"	t	typeref:struct:_MontageInfo
MontageMode	magick/montage.h	/^} MontageMode;$/;"	t	typeref:enum:__anon3
MontageValidate	magick/option.h	/^  MontageValidate = 0x00200,$/;"	e	enum:__anon87
MorphImageTag	magick/fx.c	3410;"	d	file:
MorphImages	magick/fx.c	/^MagickExport Image *MorphImages(const Image *image,$/;"	f
MorphImages	magick/methods.h	760;"	d
MorphologyApply	magick/morphology.c	/^MagickExport Image *MorphologyApply(const Image *image, const ChannelType$/;"	f
MorphologyImage	magick/methods.h	761;"	d
MorphologyImage	magick/morphology.c	/^MagickExport Image *MorphologyImage(const Image *image, const MorphologyMethod$/;"	f
MorphologyImageChannel	magick/morphology.c	/^MagickExport Image *MorphologyImageChannel(const Image *image,$/;"	f
MorphologyMethod	magick/morphology.h	/^} MorphologyMethod;$/;"	t	typeref:enum:__anon70
MorphologyOptions	magick/option.c	/^  MorphologyOptions[] =$/;"	v	file:
MorphologyPrimitive	magick/morphology.c	/^static ssize_t MorphologyPrimitive(const Image *image, Image *result_image,$/;"	f	file:
MorphologyPrimitiveDirect	magick/morphology.c	/^static ssize_t MorphologyPrimitiveDirect(Image *image,$/;"	f	file:
MorphologyTag	magick/morphology.c	2552;"	d	file:
MosaicImages	magick/deprecate.c	/^MagickExport Image *MosaicImages(Image *image,ExceptionInfo *exception)$/;"	f
MosaicImages	magick/methods.h	762;"	d
MosaicLayer	magick/layer.h	/^  MosaicLayer,$/;"	e	enum:__anon72
MotionBlurImage	magick/effect.c	/^MagickExport Image *MotionBlurImage(const Image *image,const double radius,$/;"	f
MotionBlurImage	magick/methods.h	764;"	d
MotionBlurImageChannel	magick/effect.c	/^MagickExport Image *MotionBlurImageChannel(const Image *image,$/;"	f
MotionBlurImageChannel	magick/methods.h	763;"	d
MoveToCode	magick/draw.c	/^  MoveToCode,$/;"	e	enum:__anon17	file:
MultilineCensus	magick/methods.h	767;"	d
MultilineCensus	magick/utility.c	/^MagickExport size_t MultilineCensus(const char *label)$/;"	f
MultiplicativeGaussianNoise	magick/fx.h	/^  MultiplicativeGaussianNoise,$/;"	e	enum:__anon67
MultiplicativeNoiseEvaluateOperator	magick/statistic.h	/^  MultiplicativeNoiseEvaluateOperator,$/;"	e	enum:__anon89
Multiply	magick/composite.c	/^static  inline MagickRealType Multiply(const MagickRealType Sca,$/;"	f	file:
MultiplyComplexOperator	magick/fourier.h	/^  MultiplyComplexOperator,$/;"	e	enum:__anon2
MultiplyCompositeOp	magick/composite.h	/^  MultiplyCompositeOp,$/;"	e	enum:__anon68
MultiplyEvaluateOperator	magick/statistic.h	/^  MultiplyEvaluateOperator,$/;"	e	enum:__anon89
MvgAppendColor	wand/drawing-wand.c	/^static void MvgAppendColor(DrawingWand *wand,const PixelPacket *color)$/;"	f	file:
MvgAppendPointsCommand	wand/drawing-wand.c	/^static void MvgAppendPointsCommand(DrawingWand *wand,const char *command,$/;"	f	file:
MvgAutoWrapPrintf	wand/drawing-wand.c	/^static int MvgAutoWrapPrintf(DrawingWand *wand,const char *format,...)$/;"	f	file:
MvgPrintf	wand/drawing-wand.c	/^static int MvgPrintf(DrawingWand *wand,const char *format,...)$/;"	f	file:
NAMLEN	magick/studio.h	177;"	d
NAMLEN	magick/studio.h	189;"	d
NAMLEN	wand/studio.h	178;"	d
NAMLEN	wand/studio.h	190;"	d
NODATA	image_validator/ImageValidator.c	/^    enum { NODATA = 0, COLORMAP, TRUECOLOR, GRAYSCALE } datatypecode;$/;"	e	enum:__anon98::__anon99	file:
NTArgvToUTF8	magick/nt-base.c	/^MagickPrivate char **NTArgvToUTF8(const int argc,wchar_t **argv)$/;"	f
NTCloseDirectory	magick/nt-base.c	/^MagickPrivate int NTCloseDirectory(DIR *entry)$/;"	f
NTCloseLibrary	magick/nt-base.c	/^MagickPrivate int NTCloseLibrary(void *handle)$/;"	f
NTControlHandler	magick/nt-base.c	/^MagickPrivate int NTControlHandler(void)$/;"	f
NTElapsedTime	magick/nt-base.c	/^MagickPrivate double NTElapsedTime(void)$/;"	f
NTErrorHandler	magick/nt-base.c	/^MagickPrivate void NTErrorHandler(const ExceptionType severity,$/;"	f
NTExitLibrary	magick/nt-base.c	/^MagickPrivate int NTExitLibrary(void)$/;"	f
NTGatherRandomData	magick/nt-base.c	/^MagickPrivate MagickBooleanType NTGatherRandomData(const size_t length,$/;"	f
NTGetExecutionPath	magick/nt-base.c	/^MagickPrivate MagickBooleanType NTGetExecutionPath(char *path,$/;"	f
NTGetLastError	magick/nt-base.c	/^char *NTGetLastError(void)$/;"	f
NTGetLibraryError	magick/nt-base.c	/^MagickPrivate const char *NTGetLibraryError(void)$/;"	f
NTGetLibrarySymbol	magick/nt-base.c	/^void *NTGetLibrarySymbol(void *handle,const char *name)$/;"	f
NTGetModulePath	magick/nt-base.c	/^MagickPrivate MagickBooleanType NTGetModulePath(const char *module,char *path)$/;"	f
NTGetRegistryValue	magick/nt-base.c	/^static int NTGetRegistryValue(HKEY root,const char *key,DWORD flags,const char *name,$/;"	f	file:
NTGhostscriptDLL	magick/nt-base.c	/^MagickPrivate int NTGhostscriptDLL(char *path,int length)$/;"	f
NTGhostscriptDLLVectors	magick/nt-base.c	/^MagickPrivate const GhostInfo *NTGhostscriptDLLVectors(void)$/;"	f
NTGhostscriptEXE	magick/nt-base.c	/^MagickPrivate int NTGhostscriptEXE(char *path,int length)$/;"	f
NTGhostscriptFonts	magick/nt-base.c	/^MagickPrivate int NTGhostscriptFonts(char *path,int length)$/;"	f
NTGhostscriptGetString	magick/nt-base.c	/^static int NTGhostscriptGetString(const char *name,BOOL *is_64_bit,$/;"	f	file:
NTGhostscriptLoadDLL	magick/nt-base.c	/^MagickPrivate int NTGhostscriptLoadDLL(void)$/;"	f
NTGhostscriptUnLoadDLL	magick/nt-base.c	/^MagickPrivate int NTGhostscriptUnLoadDLL(void)$/;"	f
NTInitializeLibrary	magick/nt-base.c	/^MagickPrivate int NTInitializeLibrary(void)$/;"	f
NTLoadLibrary	magick/nt-base.c	/^static inline void *NTLoadLibrary(const char *filename)$/;"	f	file:
NTLocateGhostscript	magick/nt-base.c	/^static int NTLocateGhostscript(DWORD flags,int *root_index,$/;"	f	file:
NTMEMORYSTATUSEX	magick/nt-base-private.h	/^} NTMEMORYSTATUSEX;$/;"	t	typeref:struct:_NTMEMORYSTATUSEX
NTMapMemory	magick/nt-base.c	/^MagickPrivate void *NTMapMemory(char *address,size_t length,int protection,$/;"	f
NTOpenDirectory	magick/nt-base.c	/^MagickPrivate DIR *NTOpenDirectory(const char *path)$/;"	f
NTOpenLibrary	magick/nt-base.c	/^MagickPrivate void *NTOpenLibrary(const char *filename)$/;"	f
NTReadDirectory	magick/nt-base.c	/^MagickPrivate struct dirent *NTReadDirectory(DIR *entry)$/;"	f
NTRegistryKeyLookup	magick/nt-base.c	/^MagickPrivate unsigned char *NTRegistryKeyLookup(const char *subkey)$/;"	f
NTReportEvent	magick/nt-base.c	/^MagickPrivate MagickBooleanType NTReportEvent(const char *event,$/;"	f
NTResourceToBlob	magick/nt-base.c	/^MagickPrivate unsigned char *NTResourceToBlob(const char *id)$/;"	f
NTSeekDirectory	magick/nt-base.c	/^MagickPrivate void NTSeekDirectory(DIR *entry,ssize_t position)$/;"	f
NTSetSearchPath	magick/nt-base.c	/^MagickPrivate int NTSetSearchPath(const char *path)$/;"	f
NTSyncMemory	magick/nt-base.c	/^MagickPrivate int NTSyncMemory(void *address,size_t length,int flags)$/;"	f
NTSystemCommand	magick/nt-base.c	/^MagickPrivate int NTSystemCommand(const char *command)$/;"	f
NTSystemConfiguration	magick/nt-base.c	/^MagickPrivate ssize_t NTSystemConfiguration(int name)$/;"	f
NTTellDirectory	magick/nt-base.c	/^MagickPrivate ssize_t NTTellDirectory(DIR *entry)$/;"	f
NTTruncateFile	magick/nt-base.c	/^MagickPrivate int NTTruncateFile(int file,off_t length)$/;"	f
NTUnmapMemory	magick/nt-base.c	/^MagickPrivate int NTUnmapMemory(void *map,size_t length)$/;"	f
NTUserTime	magick/nt-base.c	/^MagickPrivate double NTUserTime(void)$/;"	f
NTWarningHandler	magick/nt-base.c	/^MagickPrivate void NTWarningHandler(const ExceptionType severity,$/;"	f
NTWindowsGenesis	magick/nt-base.c	/^MagickPrivate void NTWindowsGenesis(void)$/;"	f
NearestNeighbor	magick/deprecate.c	/^static inline ssize_t NearestNeighbor(MagickRealType x)$/;"	f	file:
NearestNeighborInterpolatePixel	magick/pixel.h	/^  NearestNeighborInterpolatePixel,   \/* Nearest neighbour only *\/$/;"	e	enum:__anon52
NegateCommand	magick/display.c	/^  NegateCommand,$/;"	e	enum:__anon20	file:
NegateImage	magick/enhance.c	/^MagickExport MagickBooleanType NegateImage(Image *image,$/;"	f
NegateImage	magick/methods.h	769;"	d
NegateImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType NegateImageChannel(Image *image,$/;"	f
NegateImageChannel	magick/methods.h	768;"	d
NegateImageTag	magick/enhance.c	3988;"	d	file:
NewCommand	magick/display.c	/^  NewCommand,$/;"	e	enum:__anon20	file:
NewDrawingWand	wand/drawing-wand.c	/^WandExport DrawingWand *NewDrawingWand(void)$/;"	f
NewHashmap	magick/hashmap.c	/^MagickExport HashmapInfo *NewHashmap(const size_t capacity,$/;"	f
NewHashmap	magick/methods.h	770;"	d
NewImageList	magick/list.c	/^MagickExport Image *NewImageList(void)$/;"	f
NewImageList	magick/methods.h	771;"	d
NewImageStack	wand/mogrify-private.h	69;"	d
NewLinkedList	magick/hashmap.c	/^MagickExport LinkedListInfo *NewLinkedList(const size_t capacity)$/;"	f
NewLinkedList	magick/methods.h	772;"	d
NewMagickImage	magick/image.c	/^MagickExport Image *NewMagickImage(const ImageInfo *image_info,$/;"	f
NewMagickImage	magick/methods.h	773;"	d
NewMagickWand	wand/magick-wand.c	/^WandExport MagickWand *NewMagickWand(void)$/;"	f
NewMagickWandFromImage	wand/magick-wand.c	/^WandExport MagickWand *NewMagickWandFromImage(const Image *image)$/;"	f
NewPixelIterator	wand/pixel-iterator.c	/^WandExport PixelIterator *NewPixelIterator(MagickWand *wand)$/;"	f
NewPixelRegionIterator	wand/pixel-iterator.c	/^WandExport PixelIterator *NewPixelRegionIterator(MagickWand *wand,$/;"	f
NewPixelWand	wand/pixel-wand.c	/^WandExport PixelWand *NewPixelWand(void)$/;"	f
NewPixelWands	wand/pixel-wand.c	/^WandExport PixelWand **NewPixelWands(const size_t number_wands)$/;"	f
NewSplayTree	magick/methods.h	774;"	d
NewSplayTree	magick/splay-tree.c	/^MagickExport SplayTreeInfo *NewSplayTree($/;"	f
NewXMLTree	magick/methods.h	775;"	d
NewXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *NewXMLTree(const char *xml,ExceptionInfo *exception)$/;"	f
NewXMLTreeTag	magick/methods.h	776;"	d
NewXMLTreeTag	magick/xml-tree.c	/^MagickExport XMLTreeInfo *NewXMLTreeTag(const char *tag)$/;"	f
NextBlock	magick/memory.c	80;"	d	file:
NextBlockInList	magick/memory.c	81;"	d	file:
NextCommand	magick/display.c	/^  NextCommand,$/;"	e	enum:__anon20	file:
NextImageState	magick/xwindow-private.h	/^  NextImageState = 0x0020,$/;"	e	enum:__anon29
NexusInfo	magick/cache-private.h	/^} NexusInfo;$/;"	t	typeref:struct:_NexusInfo
NoCompliance	magick/color.h	/^  NoCompliance = 0x0000,$/;"	e	enum:__anon83
NoCompositeOp	magick/composite.h	/^  NoCompositeOp,$/;"	e	enum:__anon68
NoCompression	magick/compress.h	/^  NoCompression,$/;"	e	enum:__anon13
NoDecoration	magick/draw.h	/^  NoDecoration,$/;"	e	enum:__anon36
NoDitherMethod	magick/quantize.h	/^  NoDitherMethod,$/;"	e	enum:__anon66
NoEvents	magick/log.h	/^  NoEvents = 0x00000,$/;"	e	enum:__anon93
NoHandler	magick/log.c	/^  NoHandler = 0x0000,$/;"	e	enum:__anon57	file:
NoInterlace	magick/image.h	/^  NoInterlace,$/;"	e	enum:__anon79
NoPolicyRights	magick/policy.h	/^  NoPolicyRights = 0x00,$/;"	e	enum:__anon47
NoThreadSupport	magick/magick.h	/^  NoThreadSupport = 0x0000,$/;"	e	enum:__anon59
NoValidate	magick/option.h	/^  NoValidate = 0x00000,$/;"	e	enum:__anon87
NoValue	magick/geometry.h	/^  NoValue = 0x0000,$/;"	e	enum:__anon14
NoValue	magick/geometry.h	27;"	d
NodeInfo	magick/histogram.c	/^} NodeInfo;$/;"	t	typeref:struct:_NodeInfo	file:
NodeInfo	magick/quantize.c	/^} NodeInfo;$/;"	t	typeref:struct:_NodeInfo	file:
NodeInfo	magick/splay-tree.c	/^} NodeInfo;$/;"	t	typeref:struct:_NodeInfo	file:
Nodes	magick/histogram.c	/^} Nodes;$/;"	t	typeref:struct:_Nodes	file:
Nodes	magick/quantize.c	/^} Nodes;$/;"	t	typeref:struct:_Nodes	file:
NodesInAList	magick/histogram.c	68;"	d	file:
NodesInAList	magick/quantize.c	213;"	d	file:
NoiseOptions	magick/option.c	/^  NoiseOptions[] =$/;"	v	file:
NoiseType	magick/fx.h	/^} NoiseType;$/;"	t	typeref:enum:__anon67
NonConvertOptionFlag	magick/option.h	/^  NonConvertOptionFlag      = 0x4000,  \/* Option not used by Convert *\/$/;"	e	enum:__anon88
NonZeroRule	magick/draw.h	/^  NonZeroRule$/;"	e	enum:__anon38
NoneDispose	magick/layer.h	/^  NoneDispose = 1,$/;"	e	enum:__anon71
NonpeakStatistic	magick/statistic.h	/^  NonpeakStatistic,$/;"	e	enum:__anon91
NormalStretch	magick/type.h	/^  NormalStretch,$/;"	e	enum:__anon24
NormalStyle	magick/type.h	/^  NormalStyle,$/;"	e	enum:__anon25
NormalizeCommand	magick/display.c	/^  NormalizeCommand,$/;"	e	enum:__anon20	file:
NormalizeImage	magick/enhance.c	/^MagickExport MagickBooleanType NormalizeImage(Image *image)$/;"	f
NormalizeImage	magick/methods.h	778;"	d
NormalizeImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType NormalizeImageChannel(Image *image,$/;"	f
NormalizeImageChannel	magick/methods.h	777;"	d
NormalizeValue	magick/geometry.h	/^  NormalizeValue = 0x2000, \/* '!'  ScaleKernelValue() in morphology.c *\/$/;"	e	enum:__anon14
NormalizedCrossCorrelationErrorMetric	magick/compare.h	/^  NormalizedCrossCorrelationErrorMetric,$/;"	e	enum:__anon92
NorthEastGravity	magick/geometry.h	/^  NorthEastGravity = 3,$/;"	e	enum:__anon15
NorthEastGravity	magick/geometry.h	67;"	d
NorthGravity	magick/geometry.h	/^  NorthGravity = 2,$/;"	e	enum:__anon15
NorthGravity	magick/geometry.h	66;"	d
NorthWestGravity	magick/geometry.h	/^  NorthWestGravity = 1,$/;"	e	enum:__anon15
NorthWestGravity	magick/geometry.h	65;"	d
NotEqualOperator	magick/fx.c	105;"	d	file:
NotInitialized	wand/convert.c	492;"	d	file:
NullCommand	magick/animate.c	/^  NullCommand$/;"	e	enum:__anon85	file:
NullCommand	magick/display.c	/^  NullCommand$/;"	e	enum:__anon20	file:
NullMatrix	magick/matrix.c	/^MagickExport MagickBooleanType NullMatrix(MatrixInfo *matrix_info)$/;"	f
NumberPaintBins	magick/paint.c	564;"	d	file:
NumberPredefinedEntities	magick/xml-tree.c	69;"	d	file:
NumberTiles	magick/effect.c	2246;"	d	file:
OHTAColorspace	magick/colorspace.h	/^  OHTAColorspace,$/;"	e	enum:__anon55
OPENCL_DEFINE	magick/accelerate-private.h	29;"	d
OPENCL_ELIF	magick/accelerate-private.h	30;"	d
OPENCL_ELSE	magick/accelerate-private.h	31;"	d
OPENCL_ENDIF	magick/accelerate-private.h	32;"	d
OPENCL_IF	magick/accelerate-private.h	33;"	d
O_BINARY	magick/studio.h	346;"	d
O_BINARY	wand/studio.h	348;"	d
O_NOFOLLOW	magick/resource.c	452;"	d	file:
ObjectBoundingBox	magick/draw.h	/^  ObjectBoundingBox$/;"	e	enum:__anon35
ObliqueStyle	magick/type.h	/^  ObliqueStyle,$/;"	e	enum:__anon25
OctagonKernel	magick/morphology.h	/^  OctagonKernel,$/;"	e	enum:__anon69
OctagonalKernel	magick/morphology.h	/^  OctagonalKernel,$/;"	e	enum:__anon69
OffsetInfo	magick/geometry.h	/^} OffsetInfo;$/;"	t	typeref:struct:_OffsetInfo
OilPaintCommand	magick/display.c	/^  OilPaintCommand,$/;"	e	enum:__anon20	file:
OilPaintImage	magick/methods.h	779;"	d
OilPaintImage	magick/paint.c	/^MagickExport Image *OilPaintImage(const Image *image,const double radius,$/;"	f
OilPaintImageTag	magick/paint.c	565;"	d	file:
OilPaintPreview	magick/effect.h	/^  OilPaintPreview,$/;"	e	enum:__anon56
OpacityChannel	magick/magick-type.h	/^  OpacityChannel = 0x0008,$/;"	e	enum:__anon9
OpacityQuantum	magick/quantum.h	/^  OpacityQuantum,$/;"	e	enum:__anon7
OpaqueAlphaChannel	magick/image.h	/^  OpaqueAlphaChannel,$/;"	e	enum:__anon77
OpaqueBitmap	magick/display.c	/^  OpaqueBitmap[8] =$/;"	v	file:
OpaqueHeight	magick/display.c	1514;"	d	file:
OpaqueImage	magick/deprecate.c	/^MagickExport MagickBooleanType OpaqueImage(Image *image,$/;"	f
OpaqueImage	magick/methods.h	780;"	d
OpaqueImageTag	magick/deprecate.c	4984;"	d	file:
OpaqueOpacity	magick/image.h	27;"	d
OpaquePaintImage	magick/methods.h	782;"	d
OpaquePaintImage	magick/paint.c	/^MagickExport MagickBooleanType OpaquePaintImage(Image *image,$/;"	f
OpaquePaintImageChannel	magick/methods.h	781;"	d
OpaquePaintImageChannel	magick/paint.c	/^MagickExport MagickBooleanType OpaquePaintImageChannel(Image *image,$/;"	f
OpaquePaintImageTag	magick/paint.c	787;"	d	file:
OpaqueStencil	magick/xwindow-private.h	/^  OpaqueStencil,$/;"	e	enum:__anon26
OpaqueWidth	magick/display.c	1513;"	d	file:
OpenBlob	magick/blob.c	/^MagickExport MagickBooleanType OpenBlob(const ImageInfo *image_info,$/;"	f
OpenBlob	magick/methods.h	783;"	d
OpenCLDisabled	magick/opencl-private.h	/^  MagickBooleanType OpenCLDisabled;	\/* whether if OpenCL has been explicitely disabled. *\/$/;"	m	struct:_MagickCLEnv
OpenCLInitialized	magick/opencl-private.h	/^  MagickBooleanType OpenCLInitialized;  \/* whether OpenCL environment is initialized. *\/$/;"	m	struct:_MagickCLEnv
OpenCLLogException	magick/opencl-private.h	/^static inline void OpenCLLogException(const char* function, $/;"	f
OpenCacheView	magick/deprecate.c	/^MagickExport CacheView *OpenCacheView(const Image *image)$/;"	f
OpenCacheView	magick/methods.h	784;"	d
OpenCode	magick/draw.c	/^  OpenCode,$/;"	e	enum:__anon17	file:
OpenCommand	magick/animate.c	/^  OpenCommand,$/;"	e	enum:__anon85	file:
OpenCommand	magick/display.c	/^  OpenCommand,$/;"	e	enum:__anon20	file:
OpenDistributeCache	magick/distribute-cache.c	/^static MagickBooleanType OpenDistributeCache(SplayTreeInfo *registry,int file,$/;"	f	file:
OpenDistributePixelCache	magick/distribute-cache.c	/^MagickPrivate MagickBooleanType OpenDistributePixelCache($/;"	f
OpenIntensityMorphology	magick/morphology.h	/^  OpenIntensityMorphology,      \/* Pixel Pick using GreyScale Open *\/$/;"	e	enum:__anon70
OpenMagickStream	magick/deprecate.c	/^MagickExport FILE *OpenMagickStream(const char *path,const char *mode)$/;"	f
OpenMagickStream	magick/methods.h	785;"	d
OpenModule	magick/module.c	/^MagickExport MagickBooleanType OpenModule(const char *module,$/;"	f
OpenModules	magick/module.c	/^MagickExport MagickBooleanType OpenModules(ExceptionInfo *exception)$/;"	f
OpenMorphology	magick/morphology.h	/^  OpenMorphology,               \/* Dilate then Erode *\/$/;"	e	enum:__anon70
OpenPixelCache	magick/cache.c	/^static MagickBooleanType OpenPixelCache(Image *image,const MapMode mode,$/;"	f	file:
OpenPixelCacheOnDisk	magick/cache.c	/^static MagickBooleanType OpenPixelCacheOnDisk(CacheInfo *cache_info,$/;"	f	file:
OpenStream	magick/methods.h	786;"	d
OpenStream	magick/stream.c	/^MagickExport MagickBooleanType OpenStream(const ImageInfo *image_info,$/;"	f
OptimalTau	magick/segment.c	/^static MagickRealType OptimalTau(const ssize_t *histogram,const double max_tau,$/;"	f	file:
OptimizeImageLayer	magick/layer.h	/^  OptimizeImageLayer,$/;"	e	enum:__anon72
OptimizeImageLayers	magick/layer.c	/^MagickExport Image *OptimizeImageLayers(const Image *image,$/;"	f
OptimizeImageLayers	magick/methods.h	787;"	d
OptimizeImageTransparency	magick/layer.c	/^MagickExport void OptimizeImageTransparency(const Image *image,$/;"	f
OptimizeImageTransparency	magick/methods.h	788;"	d
OptimizeLayer	magick/layer.h	/^  OptimizeLayer,$/;"	e	enum:__anon72
OptimizeLayerFrames	magick/layer.c	/^static Image *OptimizeLayerFrames(const Image *image,$/;"	f	file:
OptimizePlusImageLayers	magick/layer.c	/^MagickExport Image *OptimizePlusImageLayers(const Image *image,$/;"	f
OptimizePlusImageLayers	magick/methods.h	789;"	d
OptimizePlusLayer	magick/layer.h	/^  OptimizePlusLayer,$/;"	e	enum:__anon72
OptimizeTransLayer	magick/layer.h	/^  OptimizeTransLayer,$/;"	e	enum:__anon72
OptimizeType	magick/image.h	/^  OptimizeType,$/;"	e	enum:__anon78
OptionError	magick/exception.h	/^  OptionError = 410,$/;"	e	enum:__anon84
OptionFatalError	magick/exception.h	/^  OptionFatalError = 710,$/;"	e	enum:__anon84
OptionInfo	magick/option.h	/^} OptionInfo;$/;"	t	typeref:struct:_OptionInfo
OptionWarning	magick/exception.h	/^  OptionWarning = 310,$/;"	e	enum:__anon84
OrEvaluateOperator	magick/statistic.h	/^  OrEvaluateOperator,$/;"	e	enum:__anon89
OrderedDitherImage	magick/methods.h	791;"	d
OrderedDitherImage	magick/threshold.c	/^MagickExport MagickBooleanType OrderedDitherImage(Image *image)$/;"	f
OrderedDitherImageChannel	magick/methods.h	790;"	d
OrderedDitherImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType OrderedDitherImageChannel(Image *image,$/;"	f
OrderedPosterizeImage	magick/methods.h	793;"	d
OrderedPosterizeImage	magick/threshold.c	/^MagickExport MagickBooleanType OrderedPosterizeImage(Image *image,$/;"	f
OrderedPosterizeImageChannel	magick/methods.h	792;"	d
OrderedPosterizeImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType OrderedPosterizeImageChannel(Image *image,$/;"	f
OrientationOptions	magick/option.c	/^  OrientationOptions[] =$/;"	v	file:
OrientationType	magick/image.h	/^} OrientationType;$/;"	t	typeref:enum:__anon80
OriginalSizeCommand	magick/display.c	/^  OriginalSizeCommand,$/;"	e	enum:__anon20	file:
Out	magick/composite.c	/^static inline MagickRealType Out(const MagickRealType p,$/;"	f	file:
OutCompositeOp	magick/composite.h	/^  OutCompositeOp,$/;"	e	enum:__anon68
OutputBit	magick/compress.c	701;"	d	file:
OutputCode	magick/compress.c	939;"	d	file:
OverCompositeOp	magick/composite.h	/^  OverCompositeOp,$/;"	e	enum:__anon68
OverlayCompositeOp	magick/composite.h	/^  OverlayCompositeOp,$/;"	e	enum:__anon68
OverlineDecoration	magick/draw.h	/^  OverlineDecoration,$/;"	e	enum:__anon36
P	magick/statistic.h	/^    P[32],$/;"	m	struct:_ChannelPerceptualHash
P1	magick/resize.c	/^static MagickRealType P1(MagickRealType x)$/;"	f	file:
P1	magick/resize.c	1372;"	d	file:
PATH_MAX	magick/studio.h	350;"	d
PATH_MAX	wand/studio.h	352;"	d
PNGInterlace	magick/image.h	/^  PNGInterlace$/;"	e	enum:__anon79
PRE_R4_ICCCM	magick/xwindow-private.h	67;"	d
PRE_R5_ICCCM	magick/xwindow-private.h	61;"	d
PRE_R6_ICCCM	magick/xwindow-private.h	54;"	d
PROT_READ	magick/nt-base.h	45;"	d
PROT_WRITE	magick/nt-base.h	46;"	d
PSDensityGeometry	magick/image.c	/^  PSDensityGeometry[] = "72.0x72.0",$/;"	v
PSPageGeometry	magick/image.c	/^  PSPageGeometry[] = "612x792",$/;"	v
PackbitsEncodeImage	magick/compress.c	/^MagickExport MagickBooleanType PackbitsEncodeImage(Image *image,$/;"	f
PackbitsEncodeImage	magick/methods.h	794;"	d
PadSpread	magick/draw.h	/^  PadSpread,$/;"	e	enum:__anon45
PageSizes	magick/animate.c	/^  *PageSizes[]=$/;"	v	file:
PageSizes	magick/display.c	/^  *PageSizes[] =$/;"	v	file:
PaintFloodfillImage	magick/deprecate.c	/^MagickExport MagickBooleanType PaintFloodfillImage(Image *image,$/;"	f
PaintFloodfillImage	magick/methods.h	795;"	d
PaintMethod	magick/draw.h	/^} PaintMethod;$/;"	t	typeref:enum:__anon42
PaintOpaqueImage	magick/deprecate.c	/^MagickExport MagickBooleanType PaintOpaqueImage(Image *image,$/;"	f
PaintOpaqueImage	magick/methods.h	797;"	d
PaintOpaqueImageChannel	magick/deprecate.c	/^MagickExport MagickBooleanType PaintOpaqueImageChannel(Image *image,$/;"	f
PaintOpaqueImageChannel	magick/methods.h	796;"	d
PaintTransparentImage	magick/deprecate.c	/^MagickExport MagickBooleanType PaintTransparentImage(Image *image,$/;"	f
PaintTransparentImage	magick/methods.h	798;"	d
PaletteBilevelMatteType	magick/image.h	/^  PaletteBilevelMatteType$/;"	e	enum:__anon78
PaletteMatteType	magick/image.h	/^  PaletteMatteType,$/;"	e	enum:__anon78
PaletteType	magick/image.h	/^  PaletteType,$/;"	e	enum:__anon78
ParseAbsoluteGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseAbsoluteGeometry(const char *geometry,$/;"	f
ParseAbsoluteGeometry	magick/methods.h	799;"	d
ParseAffineGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseAffineGeometry(const char *geometry,$/;"	f
ParseAffineGeometry	magick/methods.h	800;"	d
ParseChannelOption	magick/methods.h	801;"	d
ParseChannelOption	magick/option.c	/^MagickExport ssize_t ParseChannelOption(const char *channels)$/;"	f
ParseCharacterContent	magick/xml-tree.c	/^static void ParseCharacterContent(XMLTreeRoot *root,char *xml,$/;"	f	file:
ParseCloseTag	magick/xml-tree.c	/^static XMLTreeInfo *ParseCloseTag(XMLTreeRoot *root,char *tag,$/;"	f	file:
ParseCommandOption	magick/methods.h	805;"	d
ParseCommandOption	magick/option.c	/^MagickExport ssize_t ParseCommandOption(const CommandOption option,$/;"	f
ParseEntities	magick/xml-tree.c	/^static char *ParseEntities(char *xml,char **entities,int state)$/;"	f	file:
ParseGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseGeometry(const char *geometry,$/;"	f
ParseGeometry	magick/methods.h	802;"	d
ParseGravityGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseGravityGeometry(const Image *image,$/;"	f
ParseGravityGeometry	magick/methods.h	803;"	d
ParseImageGeometry	magick/deprecate.c	/^MagickExport int ParseImageGeometry(const char *geometry,ssize_t *x,ssize_t *y,$/;"	f
ParseImageGeometry	magick/methods.h	804;"	d
ParseInternalDoctype	magick/xml-tree.c	/^static MagickBooleanType ParseInternalDoctype(XMLTreeRoot *root,char *xml,$/;"	f	file:
ParseKernelArray	magick/morphology.c	/^static KernelInfo *ParseKernelArray(const char *kernel_string)$/;"	f	file:
ParseKernelName	magick/morphology.c	/^static KernelInfo *ParseKernelName(const char *kernel_string)$/;"	f	file:
ParseLogHandlers	magick/log.c	/^static LogHandlerType ParseLogHandlers(const char *handlers)$/;"	f	file:
ParseMetaGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseMetaGeometry(const char *geometry,ssize_t *x,$/;"	f
ParseMetaGeometry	magick/methods.h	806;"	d
ParseOpenTag	magick/xml-tree.c	/^static void ParseOpenTag(XMLTreeRoot *root,char *tag,char **attributes)$/;"	f	file:
ParsePageGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParsePageGeometry(const Image *image,$/;"	f
ParsePageGeometry	magick/methods.h	807;"	d
ParseProcessingInstructions	magick/xml-tree.c	/^static void ParseProcessingInstructions(XMLTreeRoot *root,char *xml,$/;"	f	file:
ParseRegionGeometry	magick/geometry.c	/^MagickExport MagickStatusType ParseRegionGeometry(const Image *image,$/;"	f
ParseRegionGeometry	magick/methods.h	808;"	d
ParseSizeGeometry	magick/deprecate.c	/^MagickExport MagickStatusType ParseSizeGeometry(const Image *image,$/;"	f
ParseSizeGeometry	magick/methods.h	809;"	d
PartitionInterlace	magick/image.h	/^  PartitionInterlace,$/;"	e	enum:__anon79
ParzenFilter	magick/resample.h	/^  ParzenFilter,$/;"	e	enum:__anon76
PasskeyDecipherImage	magick/cipher.c	/^MagickExport MagickBooleanType PasskeyDecipherImage(Image *image,$/;"	f
PasskeyDecipherImage	magick/methods.h	810;"	d
PasskeyEncipherImage	magick/cipher.c	/^MagickExport MagickBooleanType PasskeyEncipherImage(Image *image,$/;"	f
PasskeyEncipherImage	magick/methods.h	811;"	d
PasteCommand	magick/display.c	/^  PasteCommand,$/;"	e	enum:__anon20	file:
PasteDismissCommand	magick/display.c	/^  PasteDismissCommand,$/;"	e	enum:__anon21	file:
PasteHelpCommand	magick/display.c	/^  PasteHelpCommand,$/;"	e	enum:__anon21	file:
PasteOperatorsCommand	magick/display.c	/^  PasteOperatorsCommand,$/;"	e	enum:__anon21	file:
PathCloseOperation	wand/drawing-wand.c	/^  PathCloseOperation,                        \/* Z|z (none) *\/$/;"	e	enum:__anon94	file:
PathCurveToOperation	wand/drawing-wand.c	/^  PathCurveToOperation,                      \/* C|c (x1 y1 x2 y2 x y)+ *\/$/;"	e	enum:__anon94	file:
PathCurveToQuadraticBezierOperation	wand/drawing-wand.c	/^  PathCurveToQuadraticBezierOperation,       \/* Q|q (x1 y1 x y)+ *\/$/;"	e	enum:__anon94	file:
PathCurveToQuadraticBezierSmoothOperation	wand/drawing-wand.c	/^  PathCurveToQuadraticBezierSmoothOperation, \/* T|t (x y)+ *\/$/;"	e	enum:__anon94	file:
PathCurveToSmoothOperation	wand/drawing-wand.c	/^  PathCurveToSmoothOperation,                \/* S|s (x2 y2 x y)+ *\/$/;"	e	enum:__anon94	file:
PathDefaultOperation	wand/drawing-wand.c	/^  PathDefaultOperation,$/;"	e	enum:__anon94	file:
PathEllipticArcOperation	wand/drawing-wand.c	/^  PathEllipticArcOperation,                  \/* A|a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+ *\/$/;"	e	enum:__anon94	file:
PathInfo	magick/draw.c	/^} PathInfo;$/;"	t	typeref:struct:_PathInfo	file:
PathInfoCode	magick/draw.c	/^} PathInfoCode;$/;"	t	typeref:enum:__anon17	file:
PathLineToHorizontalOperation	wand/drawing-wand.c	/^  PathLineToHorizontalOperation,             \/* H|h x+ *\/$/;"	e	enum:__anon94	file:
PathLineToOperation	wand/drawing-wand.c	/^  PathLineToOperation,                       \/* L|l (x y)+ *\/$/;"	e	enum:__anon94	file:
PathLineToVerticalOperation	wand/drawing-wand.c	/^  PathLineToVerticalOperation,               \/* V|v y+ *\/$/;"	e	enum:__anon94	file:
PathMode	wand/drawing-wand.c	/^} PathMode;$/;"	t	typeref:enum:__anon95	file:
PathMoveToOperation	wand/drawing-wand.c	/^  PathMoveToOperation                        \/* M|m (x y)+ *\/$/;"	e	enum:__anon94	file:
PathOperation	wand/drawing-wand.c	/^} PathOperation;$/;"	t	typeref:enum:__anon94	file:
PathPolicyDomain	magick/policy.h	/^  PathPolicyDomain,$/;"	e	enum:__anon46
PathPrimitive	magick/draw.h	/^  PathPrimitive$/;"	e	enum:__anon43
PathType	magick/utility.h	/^} PathType;$/;"	t	typeref:enum:__anon31
PeakAbsoluteErrorMetric	magick/compare.h	/^  PeakAbsoluteErrorMetric,$/;"	e	enum:__anon92
PeakSignalToNoiseRatioMetric	magick/compare.h	/^  PeakSignalToNoiseRatioMetric,$/;"	e	enum:__anon92
PeaksKernel	magick/morphology.h	/^  PeaksKernel,         \/* Hit And Miss Kernels *\/$/;"	e	enum:__anon69
PeekDrawingWand	wand/drawing-wand.c	/^  void (*PeekDrawingWand)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
PeekDrawingWand	wand/drawing-wand.c	/^WandExport DrawInfo *PeekDrawingWand(const DrawingWand *wand)$/;"	f
PegtopLight	magick/composite.c	/^static MagickRealType PegtopLight(const MagickRealType Sca,$/;"	f	file:
PegtopLightCompositeOp	magick/composite.h	/^  PegtopLightCompositeOp,$/;"	e	enum:__anon68
PercentValue	magick/geometry.h	/^  PercentValue = 0x1000,   \/* '%'  percentage of something *\/$/;"	e	enum:__anon14
PerceptibleImage	magick/threshold.c	/^MagickExport MagickBooleanType PerceptibleImage(Image *image,$/;"	f
PerceptibleImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType PerceptibleImageChannel(Image *image,$/;"	f
PerceptibleImageTag	magick/threshold.c	1733;"	d	file:
PerceptibleReciprocal	magick/pixel-private.h	/^static inline double PerceptibleReciprocal(const double x)$/;"	f
PerceptibleThreshold	magick/threshold.c	/^static inline Quantum PerceptibleThreshold(const Quantum quantum,$/;"	f	file:
PerceptualHashErrorMetric	magick/compare.h	/^  PerceptualHashErrorMetric = 0xff$/;"	e	enum:__anon92
PerceptualIntent	magick/profile.h	/^  PerceptualIntent,$/;"	e	enum:__anon1
Permutate	magick/draw.c	/^static inline double Permutate(const ssize_t n,const ssize_t k)$/;"	f	file:
PersistPixelCache	magick/cache.c	/^MagickExport MagickBooleanType PersistPixelCache(Image *image,$/;"	f
PersistPixelCache	magick/methods.h	812;"	d
PerspectiveDistortion	magick/distort.h	/^  PerspectiveDistortion,$/;"	e	enum:__anon50
PerspectiveProjectionDistortion	magick/distort.h	/^  PerspectiveProjectionDistortion,$/;"	e	enum:__anon50
PinLight	magick/composite.c	/^static MagickRealType PinLight(const MagickRealType Sca,$/;"	f	file:
PinLightCompositeOp	magick/composite.h	/^  PinLightCompositeOp,$/;"	e	enum:__anon68
PingBlob	magick/blob.c	/^MagickExport Image *PingBlob(const ImageInfo *image_info,const void *blob,$/;"	f
PingBlob	magick/methods.h	813;"	d
PingCache	magick/cache.h	/^  PingCache,$/;"	e	enum:__anon8
PingImage	magick/constitute.c	/^MagickExport Image *PingImage(const ImageInfo *image_info,$/;"	f
PingImage	magick/methods.h	814;"	d
PingImages	magick/constitute.c	/^MagickExport Image *PingImages(const ImageInfo *image_info,$/;"	f
PingImages	magick/methods.h	815;"	d
PipeStream	magick/blob-private.h	/^  PipeStream,$/;"	e	enum:__anon74
Pixel	image_validator/ImageValidator.c	/^} Pixel;$/;"	t	typeref:struct:__anon97	file:
PixelAlpha	magick/pixel.h	/^  PixelAlpha = 3,$/;"	e	enum:__anon53
PixelBlack	magick/pixel.h	/^  PixelBlack = 4,$/;"	e	enum:__anon53
PixelBlue	magick/pixel.h	/^  PixelBlue = 2,$/;"	e	enum:__anon53
PixelCb	magick/pixel.h	/^  PixelCb = 1,$/;"	e	enum:__anon53
PixelClearException	wand/pixel-wand.c	/^WandExport MagickBooleanType PixelClearException(PixelWand *wand)$/;"	f
PixelClearIteratorException	wand/pixel-iterator.c	/^WandExport MagickBooleanType PixelClearIteratorException($/;"	f
PixelComponent	magick/pixel.h	/^} PixelComponent;$/;"	t	typeref:enum:__anon53
PixelCr	magick/pixel.h	/^  PixelCr = 2,$/;"	e	enum:__anon53
PixelCyan	magick/pixel.h	/^  PixelCyan = 0,$/;"	e	enum:__anon53
PixelGetAlpha	wand/pixel-wand.c	/^WandExport double PixelGetAlpha(const PixelWand *wand)$/;"	f
PixelGetAlphaQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetAlphaQuantum(const PixelWand *wand)$/;"	f
PixelGetBlack	wand/pixel-wand.c	/^WandExport double PixelGetBlack(const PixelWand *wand)$/;"	f
PixelGetBlackQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetBlackQuantum(const PixelWand *wand)$/;"	f
PixelGetBlue	wand/pixel-wand.c	/^WandExport double PixelGetBlue(const PixelWand *wand)$/;"	f
PixelGetBlueQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetBlueQuantum(const PixelWand *wand)$/;"	f
PixelGetColorAsNormalizedString	wand/pixel-wand.c	/^WandExport char *PixelGetColorAsNormalizedString(const PixelWand *wand)$/;"	f
PixelGetColorAsString	wand/pixel-wand.c	/^WandExport char *PixelGetColorAsString(const PixelWand *wand)$/;"	f
PixelGetColorCount	wand/pixel-wand.c	/^WandExport size_t PixelGetColorCount(const PixelWand *wand)$/;"	f
PixelGetCurrentIteratorRow	wand/pixel-iterator.c	/^WandExport PixelWand **PixelGetCurrentIteratorRow(PixelIterator *iterator,$/;"	f
PixelGetCyan	wand/pixel-wand.c	/^WandExport double PixelGetCyan(const PixelWand *wand)$/;"	f
PixelGetCyanQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetCyanQuantum(const PixelWand *wand)$/;"	f
PixelGetException	wand/pixel-wand.c	/^WandExport char *PixelGetException(const PixelWand *wand,$/;"	f
PixelGetExceptionType	wand/pixel-wand.c	/^WandExport ExceptionType PixelGetExceptionType(const PixelWand *wand)$/;"	f
PixelGetFuzz	wand/pixel-wand.c	/^WandExport double PixelGetFuzz(const PixelWand *wand)$/;"	f
PixelGetGreen	wand/pixel-wand.c	/^WandExport double PixelGetGreen(const PixelWand *wand)$/;"	f
PixelGetGreenQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetGreenQuantum(const PixelWand *wand)$/;"	f
PixelGetHSL	wand/pixel-wand.c	/^WandExport void PixelGetHSL(const PixelWand *wand,double *hue,$/;"	f
PixelGetIndex	wand/pixel-wand.c	/^WandExport IndexPacket PixelGetIndex(const PixelWand *wand)$/;"	f
PixelGetIteratorException	wand/pixel-iterator.c	/^WandExport char *PixelGetIteratorException(const PixelIterator *iterator,$/;"	f
PixelGetIteratorExceptionType	wand/pixel-iterator.c	/^WandExport ExceptionType PixelGetIteratorExceptionType($/;"	f
PixelGetIteratorRow	wand/pixel-iterator.c	/^WandExport ssize_t PixelGetIteratorRow(PixelIterator *iterator)$/;"	f
PixelGetMagenta	wand/pixel-wand.c	/^WandExport double PixelGetMagenta(const PixelWand *wand)$/;"	f
PixelGetMagentaQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetMagentaQuantum(const PixelWand *wand)$/;"	f
PixelGetMagickColor	wand/pixel-wand.c	/^WandExport void PixelGetMagickColor(const PixelWand *wand,$/;"	f
PixelGetNextIteratorRow	wand/pixel-iterator.c	/^WandExport PixelWand **PixelGetNextIteratorRow(PixelIterator *iterator,$/;"	f
PixelGetOpacity	wand/pixel-wand.c	/^WandExport double PixelGetOpacity(const PixelWand *wand)$/;"	f
PixelGetOpacityQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetOpacityQuantum(const PixelWand *wand)$/;"	f
PixelGetPreviousIteratorRow	wand/pixel-iterator.c	/^WandExport PixelWand **PixelGetPreviousIteratorRow(PixelIterator *iterator,$/;"	f
PixelGetPreviousRow	wand/pixel-iterator.c	/^WandExport PixelWand **PixelGetPreviousRow(PixelIterator *iterator)$/;"	f
PixelGetQuantumColor	wand/pixel-wand.c	/^WandExport void PixelGetQuantumColor(const PixelWand *wand,PixelPacket *color)$/;"	f
PixelGetRed	wand/pixel-wand.c	/^WandExport double PixelGetRed(const PixelWand *wand)$/;"	f
PixelGetRedQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetRedQuantum(const PixelWand *wand)$/;"	f
PixelGetYellow	wand/pixel-wand.c	/^WandExport double PixelGetYellow(const PixelWand *wand)$/;"	f
PixelGetYellowQuantum	wand/pixel-wand.c	/^WandExport Quantum PixelGetYellowQuantum(const PixelWand *wand)$/;"	f
PixelGray	magick/pixel.h	/^  PixelGray = 0,$/;"	e	enum:__anon53
PixelGreen	magick/pixel.h	/^  PixelGreen = 1,$/;"	e	enum:__anon53
PixelIndex	magick/pixel.h	/^  PixelIndex = 4,$/;"	e	enum:__anon53
PixelIntensityMethod	magick/pixel.h	/^} PixelIntensityMethod;$/;"	t	typeref:enum:__anon54
PixelIntensityOptions	magick/option.c	/^  PixelIntensityOptions[] =$/;"	v	file:
PixelIntensityToQuantum	magick/deprecate.h	/^static inline Quantum PixelIntensityToQuantum(const Image *restrict image,$/;"	f
PixelIterator	wand/pixel-iterator.h	/^  PixelIterator;$/;"	t	typeref:struct:_PixelIterator
PixelIteratorId	wand/pixel-iterator.c	59;"	d	file:
PixelList	magick/statistic.c	/^} PixelList;$/;"	t	typeref:struct:_PixelList	file:
PixelMagenta	magick/pixel.h	/^  PixelMagenta = 1,$/;"	e	enum:__anon53
PixelPacket	magick/pixel.h	/^} PixelPacket;$/;"	t	typeref:struct:_PixelPacket
PixelPacketIntensity	magick/pixel-accessor.h	/^static inline Quantum PixelPacketIntensity(const PixelPacket *pixel)$/;"	f
PixelRed	magick/pixel.h	/^  PixelRed = 0,$/;"	e	enum:__anon53
PixelResetIterator	wand/pixel-iterator.c	/^WandExport void PixelResetIterator(PixelIterator *iterator)$/;"	f
PixelSetAlpha	wand/pixel-wand.c	/^WandExport void PixelSetAlpha(PixelWand *wand,const double alpha)$/;"	f
PixelSetAlphaQuantum	wand/pixel-wand.c	/^WandExport void PixelSetAlphaQuantum(PixelWand *wand,const Quantum opacity)$/;"	f
PixelSetBlack	wand/pixel-wand.c	/^WandExport void PixelSetBlack(PixelWand *wand,const double black)$/;"	f
PixelSetBlackQuantum	wand/pixel-wand.c	/^WandExport void PixelSetBlackQuantum(PixelWand *wand,const Quantum black)$/;"	f
PixelSetBlue	wand/pixel-wand.c	/^WandExport void PixelSetBlue(PixelWand *wand,const double blue)$/;"	f
PixelSetBlueQuantum	wand/pixel-wand.c	/^WandExport void PixelSetBlueQuantum(PixelWand *wand,const Quantum blue)$/;"	f
PixelSetColor	wand/pixel-wand.c	/^WandExport MagickBooleanType PixelSetColor(PixelWand *wand,const char *color)$/;"	f
PixelSetColorCount	wand/pixel-wand.c	/^WandExport void PixelSetColorCount(PixelWand *wand,const size_t count)$/;"	f
PixelSetColorFromWand	wand/pixel-wand.c	/^WandExport void PixelSetColorFromWand(PixelWand *wand,const PixelWand *color)$/;"	f
PixelSetCyan	wand/pixel-wand.c	/^WandExport void PixelSetCyan(PixelWand *wand,const double cyan)$/;"	f
PixelSetCyanQuantum	wand/pixel-wand.c	/^WandExport void PixelSetCyanQuantum(PixelWand *wand,const Quantum cyan)$/;"	f
PixelSetFirstIteratorRow	wand/pixel-iterator.c	/^WandExport void PixelSetFirstIteratorRow(PixelIterator *iterator)$/;"	f
PixelSetFuzz	wand/pixel-wand.c	/^WandExport void PixelSetFuzz(PixelWand *wand,const double fuzz)$/;"	f
PixelSetGreen	wand/pixel-wand.c	/^WandExport void PixelSetGreen(PixelWand *wand,const double green)$/;"	f
PixelSetGreenQuantum	wand/pixel-wand.c	/^WandExport void PixelSetGreenQuantum(PixelWand *wand,const Quantum green)$/;"	f
PixelSetHSL	wand/pixel-wand.c	/^WandExport void PixelSetHSL(PixelWand *wand,const double hue,$/;"	f
PixelSetIndex	wand/pixel-wand.c	/^WandExport void PixelSetIndex(PixelWand *wand,const IndexPacket index)$/;"	f
PixelSetIteratorRow	wand/pixel-iterator.c	/^WandExport MagickBooleanType PixelSetIteratorRow(PixelIterator *iterator,$/;"	f
PixelSetLastIteratorRow	wand/pixel-iterator.c	/^WandExport void PixelSetLastIteratorRow(PixelIterator *iterator)$/;"	f
PixelSetMagenta	wand/pixel-wand.c	/^WandExport void PixelSetMagenta(PixelWand *wand,const double magenta)$/;"	f
PixelSetMagentaQuantum	wand/pixel-wand.c	/^WandExport void PixelSetMagentaQuantum(PixelWand *wand,const Quantum magenta)$/;"	f
PixelSetMagickColor	wand/pixel-wand.c	/^WandExport void PixelSetMagickColor(PixelWand *wand,$/;"	f
PixelSetOpacity	wand/pixel-wand.c	/^WandExport void PixelSetOpacity(PixelWand *wand,const double opacity)$/;"	f
PixelSetOpacityQuantum	wand/pixel-wand.c	/^WandExport void PixelSetOpacityQuantum(PixelWand *wand,const Quantum opacity)$/;"	f
PixelSetQuantumColor	wand/pixel-wand.c	/^WandExport void PixelSetQuantumColor(PixelWand *wand,const PixelPacket *color)$/;"	f
PixelSetRed	wand/pixel-wand.c	/^WandExport void PixelSetRed(PixelWand *wand,const double red)$/;"	f
PixelSetRedQuantum	wand/pixel-wand.c	/^WandExport void PixelSetRedQuantum(PixelWand *wand,const Quantum red)$/;"	f
PixelSetYellow	wand/pixel-wand.c	/^WandExport void PixelSetYellow(PixelWand *wand,const double yellow)$/;"	f
PixelSetYellowQuantum	wand/pixel-wand.c	/^WandExport void PixelSetYellowQuantum(PixelWand *wand,const Quantum yellow)$/;"	f
PixelSyncIterator	wand/pixel-iterator.c	/^WandExport MagickBooleanType PixelSyncIterator(PixelIterator *iterator)$/;"	f
PixelView	wand/deprecate.h	/^  PixelView;$/;"	t	typeref:struct:_PixelView
PixelWand	wand/pixel-wand.h	/^  PixelWand;$/;"	t	typeref:struct:_PixelWand
PixelWandId	wand/pixel-wand.c	58;"	d	file:
PixelY	magick/pixel.h	/^  PixelY = 0,$/;"	e	enum:__anon53
PixelYellow	magick/pixel.h	/^  PixelYellow = 2,$/;"	e	enum:__anon53
PixelsPerCentimeterResolution	magick/image.h	/^  PixelsPerCentimeterResolution$/;"	e	enum:__anon81
PixelsPerInchResolution	magick/image.h	/^  PixelsPerInchResolution,$/;"	e	enum:__anon81
PizCompression	magick/compress.h	/^  PizCompression,$/;"	e	enum:__anon13
Plane2CylinderDistortion	magick/distort.h	/^  Plane2CylinderDistortion,$/;"	e	enum:__anon50
PlaneInterlace	magick/image.h	/^  PlaneInterlace,$/;"	e	enum:__anon79
PlasmaImage	magick/fx.c	/^MagickExport MagickBooleanType PlasmaImage(Image *image,$/;"	f
PlasmaImage	magick/methods.h	816;"	d
PlasmaImageProxy	magick/fx.c	/^MagickExport MagickBooleanType PlasmaImageProxy(Image *image,$/;"	f
PlasmaImageProxy	magick/methods.h	817;"	d
PlasmaPixel	magick/fx.c	/^static inline Quantum PlasmaPixel(RandomInfo *random_info,$/;"	f	file:
PlayAnimationState	magick/animate.c	82;"	d	file:
PlayCommand	magick/animate.c	/^  PlayCommand,$/;"	e	enum:__anon85	file:
PlusCompositeOp	magick/composite.h	/^  PlusCompositeOp,$/;"	e	enum:__anon68
PlusKernel	magick/morphology.h	/^  PlusKernel,$/;"	e	enum:__anon69
PointElement	magick/xwindow-private.h	/^  PointElement,$/;"	e	enum:__anon27
PointFilter	magick/resample.h	/^  PointFilter,$/;"	e	enum:__anon76
PointInfo	magick/draw.h	/^} PointInfo;$/;"	t	typeref:struct:_PointInfo
PointMethod	magick/draw.h	/^  PointMethod,$/;"	e	enum:__anon42
PointPrimitive	magick/draw.h	/^  PointPrimitive,$/;"	e	enum:__anon43
PoissonNoise	magick/fx.h	/^  PoissonNoise,$/;"	e	enum:__anon67
PoissonNoiseEvaluateOperator	magick/statistic.h	/^  PoissonNoiseEvaluateOperator,$/;"	e	enum:__anon89
PolarDistortion	magick/distort.h	/^  PolarDistortion,$/;"	e	enum:__anon50
PolaroidImage	magick/fx.c	/^MagickExport Image *PolaroidImage(const Image *image,const DrawInfo *draw_info,$/;"	f
PolaroidImage	magick/methods.h	818;"	d
PolicyComponentGenesis	magick/methods.h	819;"	d
PolicyComponentGenesis	magick/policy.c	/^MagickExport MagickBooleanType PolicyComponentGenesis(void)$/;"	f
PolicyComponentTerminus	magick/methods.h	820;"	d
PolicyComponentTerminus	magick/policy.c	/^MagickExport void PolicyComponentTerminus(void)$/;"	f
PolicyDomain	magick/policy.h	/^} PolicyDomain;$/;"	t	typeref:enum:__anon46
PolicyDomainOptions	magick/option.c	/^  PolicyDomainOptions[] =$/;"	v	file:
PolicyError	magick/exception.h	/^  PolicyError = 499,$/;"	e	enum:__anon84
PolicyEvent	magick/log.h	/^  PolicyEvent = 0x01000,$/;"	e	enum:__anon93
PolicyFatalError	magick/exception.h	/^  PolicyFatalError = 799$/;"	e	enum:__anon84
PolicyFilename	magick/policy.c	63;"	d	file:
PolicyInfo	magick/policy.h	/^  PolicyInfo;$/;"	t	typeref:struct:_PolicyInfo
PolicyMap	magick/policy.c	/^  PolicyMap[] =$/;"	v	file:
PolicyMapInfo	magick/policy.c	/^} PolicyMapInfo;$/;"	t	typeref:struct:_PolicyMapInfo	file:
PolicyRights	magick/policy.h	/^} PolicyRights;$/;"	t	typeref:enum:__anon47
PolicyRightsOptions	magick/option.c	/^  PolicyRightsOptions[] =$/;"	v	file:
PolicyWarning	magick/exception.h	/^  PolicyWarning = 399,$/;"	e	enum:__anon84
PolygonElement	magick/xwindow-private.h	/^  PolygonElement,$/;"	e	enum:__anon27
PolygonInfo	magick/draw.c	/^} PolygonInfo;$/;"	t	typeref:struct:_PolygonInfo	file:
PolygonPrimitive	magick/draw.h	/^  PolygonPrimitive,$/;"	e	enum:__anon43
PolylinePrimitive	magick/draw.h	/^  PolylinePrimitive,$/;"	e	enum:__anon43
PolynomialColorInterpolate	magick/distort.h	/^  PolynomialColorInterpolate = PolynomialDistortion,$/;"	e	enum:__anon51
PolynomialDistortion	magick/distort.h	/^  PolynomialDistortion,$/;"	e	enum:__anon50
PolynomialFunction	magick/statistic.h	/^  PolynomialFunction,$/;"	e	enum:__anon90
PolynomialImage	magick/statistic.c	/^MagickExport Image *PolynomialImage(const Image *images,$/;"	f
PolynomialImageChannel	magick/statistic.c	/^MagickExport Image *PolynomialImageChannel(const Image *images,$/;"	f
PolynomialImageTag	magick/statistic.c	2448;"	d	file:
PopCharPixel	magick/quantum-private.h	/^static inline unsigned char *PopCharPixel(const unsigned char pixel,$/;"	f
PopDoublePixel	magick/quantum-export.c	/^static inline unsigned char *PopDoublePixel(QuantumInfo *quantum_info,$/;"	f	file:
PopDrawingWand	wand/drawing-wand.c	/^  MagickBooleanType (*PopDrawingWand)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
PopDrawingWand	wand/drawing-wand.c	/^WandExport MagickBooleanType PopDrawingWand(DrawingWand *wand)$/;"	f
PopFloatPixel	magick/quantum-export.c	/^static inline unsigned char *PopFloatPixel(QuantumInfo *quantum_info,$/;"	f	file:
PopImageList	magick/deprecate.c	/^MagickExport Image *PopImageList(Image **images)$/;"	f
PopImageList	magick/methods.h	821;"	d
PopImagePixels	magick/deprecate.c	/^MagickExport size_t PopImagePixels(Image *image,const QuantumType quantum,$/;"	f
PopImagePixels	magick/methods.h	822;"	d
PopImageStack	wand/mogrify-private.h	85;"	d
PopLongPixel	magick/quantum-private.h	/^static inline unsigned char *PopLongPixel(const EndianType endian,$/;"	f
PopQuantumLongPixel	magick/quantum-export.c	/^static inline unsigned char *PopQuantumLongPixel(QuantumInfo *quantum_info,$/;"	f	file:
PopQuantumPixel	magick/quantum-export.c	/^static inline unsigned char *PopQuantumPixel(QuantumInfo *quantum_info,$/;"	f	file:
PopShortPixel	magick/quantum-private.h	/^static inline unsigned char *PopShortPixel(const EndianType endian,$/;"	f
PosterizeImage	magick/methods.h	823;"	d
PosterizeImage	magick/quantize.c	/^MagickExport MagickBooleanType PosterizeImage(Image *image,const size_t levels,$/;"	f
PosterizeImageChannel	magick/quantize.c	/^MagickExport MagickBooleanType PosterizeImageChannel(Image *image,$/;"	f
PosterizeImageTag	magick/quantize.c	2305;"	d	file:
PosterizePixel	magick/quantize.c	2306;"	d	file:
PostscriptGeometry	magick/deprecate.c	/^MagickExport char *PostscriptGeometry(const char *page)$/;"	f
PostscriptGeometry	magick/methods.h	824;"	d
PowEvaluateOperator	magick/statistic.h	/^  PowEvaluateOperator,$/;"	e	enum:__anon89
PreferencesCommand	magick/display.c	/^  PreferencesCommand,$/;"	e	enum:__anon20	file:
PreferencesDefaults	magick/studio.h	288;"	d
PreferencesDefaults	wand/studio.h	290;"	d
PrefetchPixelCacheNexusPixels	magick/cache.c	/^static inline void PrefetchPixelCacheNexusPixels(const NexusInfo *nexus_info,$/;"	f	file:
PrependImageToList	magick/list.c	/^MagickExport void PrependImageToList(Image **images,Image *image)$/;"	f
PrependImageToList	magick/methods.h	825;"	d
PrependMagickMethod	magick/methods.h	37;"	d
PrescanMagickPrefix	magick/methods.h	32;"	d
PrescanMagickPrefix	magick/methods.h	34;"	d
PreviewImage	magick/effect.c	/^MagickExport Image *PreviewImage(const Image *image,const PreviewType preview,$/;"	f
PreviewImage	magick/methods.h	826;"	d
PreviewImageTag	magick/effect.c	2247;"	d	file:
PreviewOptions	magick/option.c	/^  PreviewOptions[] =$/;"	v	file:
PreviewType	magick/effect.h	/^} PreviewType;$/;"	t	typeref:enum:__anon56
PreviousBlock	magick/memory.c	82;"	d	file:
PreviousBlockBit	magick/memory.c	83;"	d	file:
PreviousBlockInList	magick/memory.c	84;"	d	file:
PreviousDispose	magick/layer.h	/^  PreviousDispose = 3$/;"	e	enum:__anon71
PrewittKernel	magick/morphology.h	/^  PrewittKernel,$/;"	e	enum:__anon69
PrimaryInfo	magick/image.h	/^} PrimaryInfo;$/;"	t	typeref:struct:_PrimaryInfo
PrimitiveInfo	magick/draw.h	/^} PrimitiveInfo;$/;"	t	typeref:struct:_PrimitiveInfo
PrimitiveOptions	magick/option.c	/^  PrimitiveOptions[] =$/;"	v	file:
PrimitiveType	magick/draw.h	/^} PrimitiveType;$/;"	t	typeref:enum:__anon43
PrintChannelFeatures	magick/identify.c	/^static ssize_t PrintChannelFeatures(FILE *file,const ChannelType channel,$/;"	f	file:
PrintChannelLocations	magick/identify.c	/^static ssize_t PrintChannelLocations(FILE *file,const Image *image,$/;"	f	file:
PrintChannelMoments	magick/identify.c	/^static ssize_t PrintChannelMoments(FILE *file,const ChannelType channel,$/;"	f	file:
PrintChannelPerceptualHash	magick/identify.c	/^static ssize_t PrintChannelPerceptualHash(FILE *file,const ChannelType channel,$/;"	f	file:
PrintChannelStatistics	magick/identify.c	/^static ssize_t PrintChannelStatistics(FILE *file,const ChannelType channel,$/;"	f	file:
PrintCommand	magick/display.c	/^  PrintCommand,$/;"	e	enum:__anon20	file:
PrintFeature	magick/identify.c	238;"	d	file:
PrintStringInfo	magick/methods.h	827;"	d
PrintStringInfo	magick/string.c	/^MagickExport void PrintStringInfo(FILE *file,const char *id,$/;"	f
PrivateColormap	magick/xwindow-private.h	/^  PrivateColormap,$/;"	e	enum:__anon28
ProcessPendingEvents	magick/studio.h	262;"	d
ProcessPendingEvents	magick/studio.h	277;"	d
ProcessPendingEvents	magick/studio.h	289;"	d
ProcessPendingEvents	magick/studio.h	321;"	d
ProcessPendingEvents	wand/studio.h	264;"	d
ProcessPendingEvents	wand/studio.h	279;"	d
ProcessPendingEvents	wand/studio.h	291;"	d
ProcessPendingEvents	wand/studio.h	323;"	d
ProfileImage	magick/methods.h	829;"	d
ProfileImage	magick/profile.c	/^MagickExport MagickBooleanType ProfileImage(Image *image,const char *name,$/;"	f
ProfileImageTag	magick/profile.c	476;"	d	file:
ProfileInfo	magick/profile.h	/^} ProfileInfo;$/;"	t	typeref:struct:_ProfileInfo
PruneChild	magick/quantize.c	/^static void PruneChild(const Image *image,CubeInfo *cube_info,$/;"	f	file:
PruneLevel	magick/quantize.c	/^static void PruneLevel(const Image *image,CubeInfo *cube_info,$/;"	f	file:
PruneTagFromXMLTree	magick/methods.h	830;"	d
PruneTagFromXMLTree	magick/xml-tree.c	/^MagickExport XMLTreeInfo *PruneTagFromXMLTree(XMLTreeInfo *xml_info)$/;"	f
PruneToCubeDepth	magick/quantize.c	/^static void PruneToCubeDepth(const Image *image,CubeInfo *cube_info,$/;"	f	file:
PseudoClass	magick/magick-type.h	/^  PseudoClass$/;"	e	enum:__anon10
PseudoRandomHash	magick/random.c	66;"	d	file:
PsiNegative	magick/geometry.h	/^  PsiNegative = 0x0040,$/;"	e	enum:__anon14
PsiValue	magick/geometry.h	/^  PsiValue = 0x0002,$/;"	e	enum:__anon14
PushCharPixel	magick/quantum-private.h	/^static inline const unsigned char *PushCharPixel(const unsigned char *pixels,$/;"	f
PushColormapIndex	magick/image.c	/^static inline IndexPacket PushColormapIndex(Image *image,$/;"	f	file:
PushColormapIndex	magick/quantum-import.c	/^static inline IndexPacket PushColormapIndex(const Image *image,$/;"	f	file:
PushDoublePixel	magick/quantum-import.c	/^static inline const unsigned char *PushDoublePixel($/;"	f	file:
PushDrawingWand	wand/drawing-wand.c	/^  MagickBooleanType (*PushDrawingWand)(DrawingWand *);$/;"	m	struct:_DrawVTable	file:
PushDrawingWand	wand/drawing-wand.c	/^WandExport MagickBooleanType PushDrawingWand(DrawingWand *wand)$/;"	f
PushFloatPixel	magick/quantum-import.c	/^static inline const unsigned char *PushFloatPixel($/;"	f	file:
PushImageList	magick/deprecate.c	/^MagickExport unsigned int PushImageList(Image **images,const Image *image,$/;"	f
PushImageList	magick/methods.h	831;"	d
PushImagePixels	magick/deprecate.c	/^MagickExport size_t PushImagePixels(Image *image,const QuantumType quantum,$/;"	f
PushImagePixels	magick/methods.h	832;"	d
PushImageStack	wand/mogrify-private.h	77;"	d
PushLongPixel	magick/quantum-private.h	/^static inline const unsigned char *PushLongPixel(const EndianType endian,$/;"	f
PushQuantumLongPixel	magick/quantum-import.c	/^static inline const unsigned char *PushQuantumLongPixel($/;"	f	file:
PushQuantumPixel	magick/quantum-import.c	/^static inline const unsigned char *PushQuantumPixel(QuantumInfo *quantum_info,$/;"	f	file:
PushSegmentStack	magick/deprecate.c	1176;"	d	file:
PushSegmentStack	magick/paint.c	113;"	d	file:
PushShortPixel	magick/quantum-private.h	/^static inline const unsigned char *PushShortPixel(const EndianType endian,$/;"	f
PutEntryInHashmap	magick/hashmap.c	/^MagickExport MagickBooleanType PutEntryInHashmap(HashmapInfo *hashmap_info,$/;"	f
PutEntryInHashmap	magick/methods.h	833;"	d
Pxr24Compression	magick/compress.h	/^  Pxr24Compression,$/;"	e	enum:__anon13
Q	magick/statistic.h	/^    Q[32];$/;"	m	struct:_ChannelPerceptualHash
Q1	magick/resize.c	/^static MagickRealType Q1(MagickRealType x)$/;"	f	file:
Q1	magick/resize.c	1412;"	d	file:
Quadratic	magick/resize.c	/^static MagickRealType Quadratic(const MagickRealType x,$/;"	f	file:
QuadraticFilter	magick/resample.h	/^  QuadraticFilter,$/;"	e	enum:__anon76
QuadraticWeightingFunction	magick/resize-private.h	/^  QuadraticWeightingFunction,$/;"	e	enum:__anon30
QuantizationError	magick/deprecate.c	/^MagickExport unsigned int QuantizationError(Image *image)$/;"	f
QuantizationError	magick/methods.h	834;"	d
QuantizeCommand	magick/display.c	/^  QuantizeCommand,$/;"	e	enum:__anon20	file:
QuantizeErrorFlatten	magick/quantize.c	/^static size_t QuantizeErrorFlatten(const Image *image,const CubeInfo *cube_info,$/;"	f	file:
QuantizeImage	magick/methods.h	835;"	d
QuantizeImage	magick/quantize.c	/^MagickExport MagickBooleanType QuantizeImage(const QuantizeInfo *quantize_info,$/;"	f
QuantizeImages	magick/methods.h	836;"	d
QuantizeImages	magick/quantize.c	/^MagickExport MagickBooleanType QuantizeImages(const QuantizeInfo *quantize_info,$/;"	f
QuantizeInfo	magick/quantize.h	/^} QuantizeInfo;$/;"	t	typeref:struct:_QuantizeInfo
QuantizeInfoOptionFlag	magick/option.h	/^  QuantizeInfoOptionFlag    = 0x0008,  \/* Sets QuantizeInfo, no image needed *\/$/;"	e	enum:__anon88
QuantizePreview	magick/effect.h	/^  QuantizePreview,$/;"	e	enum:__anon56
Quantum	magick/magick-type.h	/^typedef double Quantum;$/;"	t
Quantum	magick/magick-type.h	/^typedef float Quantum;$/;"	t
Quantum	magick/magick-type.h	/^typedef unsigned char Quantum;$/;"	t
Quantum	magick/magick-type.h	/^typedef unsigned int Quantum;$/;"	t
Quantum	magick/magick-type.h	/^typedef unsigned short Quantum;$/;"	t
QuantumAlphaType	magick/quantum.h	/^} QuantumAlphaType;$/;"	t	typeref:enum:__anon5
QuantumAny	magick/magick-type.h	/^typedef MagickOffsetType QuantumAny;$/;"	t
QuantumAny	magick/magick-type.h	/^typedef MagickSizeType QuantumAny;$/;"	t
QuantumDepth	magick/deprecate.h	60;"	d
QuantumFormat	magick/magick-type.h	118;"	d
QuantumFormat	magick/magick-type.h	122;"	d
QuantumFormat	magick/magick-type.h	133;"	d
QuantumFormat	magick/magick-type.h	62;"	d
QuantumFormat	magick/magick-type.h	66;"	d
QuantumFormat	magick/magick-type.h	91;"	d
QuantumFormat	magick/magick-type.h	95;"	d
QuantumFormatOptions	magick/option.c	/^  QuantumFormatOptions[] =$/;"	v	file:
QuantumFormatType	magick/quantum.h	/^} QuantumFormatType;$/;"	t	typeref:enum:__anon6
QuantumInfo	magick/quantum.h	/^  QuantumInfo;$/;"	t	typeref:struct:_QuantumInfo
QuantumPixel	magick/constitute.h	/^  QuantumPixel,$/;"	e	enum:__anon64
QuantumPixelPacket	magick/pixel.h	/^} QuantumPixelPacket;$/;"	t	typeref:struct:_QuantumPixelPacket
QuantumRange	magick/magick-type.h	117;"	d
QuantumRange	magick/magick-type.h	121;"	d
QuantumRange	magick/magick-type.h	132;"	d
QuantumRange	magick/magick-type.h	61;"	d
QuantumRange	magick/magick-type.h	65;"	d
QuantumRange	magick/magick-type.h	90;"	d
QuantumRange	magick/magick-type.h	94;"	d
QuantumScale	magick/magick-type.h	142;"	d
QuantumSignature	magick/quantum.c	74;"	d	file:
QuantumState	magick/quantum-private.h	/^} QuantumState;$/;"	t	typeref:struct:_QuantumState
QuantumTick	magick/monitor.h	/^static inline MagickBooleanType QuantumTick(const MagickOffsetType offset,$/;"	f
QuantumTick	wand/magick-wand-private.h	27;"	d
QuantumTick	wand/mogrify-private.h	98;"	d
QuantumType	magick/quantum.h	/^} QuantumType;$/;"	t	typeref:enum:__anon7
QueryColorCompliance	magick/color.c	/^MagickExport MagickBooleanType QueryColorCompliance(const char *name,$/;"	f
QueryColorDatabase	magick/color.c	/^MagickExport MagickBooleanType QueryColorDatabase(const char *name,$/;"	f
QueryColorDatabase	magick/methods.h	837;"	d
QueryColorname	magick/color.c	/^MagickExport MagickBooleanType QueryColorname(const Image *image,$/;"	f
QueryColorname	magick/methods.h	838;"	d
QueryMagickColor	magick/color.c	/^MagickExport MagickBooleanType QueryMagickColor(const char *name,$/;"	f
QueryMagickColor	magick/methods.h	840;"	d
QueryMagickColorCompliance	magick/color.c	/^MagickExport MagickBooleanType QueryMagickColorCompliance(const char *name,$/;"	f
QueryMagickColorname	magick/color.c	/^MagickExport MagickBooleanType QueryMagickColorname(const Image *image,$/;"	f
QueryMagickColorname	magick/methods.h	839;"	d
QueueAuthenticPixel	magick/cache.c	/^MagickExport PixelPacket *QueueAuthenticPixel(Image *image,const ssize_t x,$/;"	f
QueueAuthenticPixelCacheNexus	magick/cache.c	/^MagickExport PixelPacket *QueueAuthenticPixelCacheNexus(Image *image,$/;"	f
QueueAuthenticPixelCacheNexus	magick/methods.h	841;"	d
QueueAuthenticPixels	magick/cache.c	/^MagickExport PixelPacket *QueueAuthenticPixels(Image *image,const ssize_t x,$/;"	f
QueueAuthenticPixels	magick/methods.h	842;"	d
QueueAuthenticPixelsCache	magick/cache.c	/^static PixelPacket *QueueAuthenticPixelsCache(Image *image,const ssize_t x,$/;"	f	file:
QueueAuthenticPixelsHandler	magick/cache-private.h	/^  *(*QueueAuthenticPixelsHandler)(Image *,const ssize_t,const ssize_t,$/;"	t
QueueAuthenticPixelsStream	magick/stream.c	/^static PixelPacket *QueueAuthenticPixelsStream(Image *image,const ssize_t x,$/;"	f	file:
QueueCacheViewAuthenticPixels	magick/cache-view.c	/^MagickExport PixelPacket *QueueCacheViewAuthenticPixels(CacheView *cache_view,$/;"	f
QueueCacheViewAuthenticPixels	magick/methods.h	843;"	d
QuitCommand	magick/animate.c	/^  QuitCommand,$/;"	e	enum:__anon85	file:
QuitCommand	magick/display.c	/^  QuitCommand,$/;"	e	enum:__anon20	file:
REC601	image_validator/ImageValidator.c	/^    enum { REC709, REC601, HSP } conversion;$/;"	e	enum:__anon100::__anon101	file:
REC709	image_validator/ImageValidator.c	/^    enum { REC709, REC601, HSP } conversion;$/;"	e	enum:__anon100::__anon101	file:
RGBAQuantum	magick/quantum.h	/^  RGBAQuantum,$/;"	e	enum:__anon7
RGBChannels	magick/magick-type.h	/^  RGBChannels = 0x0080,      \/* set alpha from  grayscale mask in RGB *\/$/;"	e	enum:__anon9
RGBColorspace	magick/colorspace.h	/^  RGBColorspace,            \/* Linear RGB colorspace *\/$/;"	e	enum:__anon55
RGBOQuantum	magick/quantum.h	/^  RGBOQuantum,$/;"	e	enum:__anon7
RGBPadQuantum	magick/quantum.h	/^  RGBPadQuantum,$/;"	e	enum:__anon7
RGBQuantum	magick/quantum.h	/^  RGBQuantum,$/;"	e	enum:__anon7
RGBTransformImage	magick/colorspace.c	/^MagickExport MagickBooleanType RGBTransformImage(Image *image,$/;"	f
RGBTransformImage	magick/methods.h	1035;"	d
RGBTransformImageTag	magick/colorspace.c	202;"	d	file:
RGBto601Luma	image_validator/ImageValidator.c	405;"	d	file:
RGBto709Luma	image_validator/ImageValidator.c	415;"	d	file:
RGBtoP	image_validator/ImageValidator.c	424;"	d	file:
RLECompression	magick/compress.h	/^  RLECompression,$/;"	e	enum:__anon13
RMSPixelIntensityMethod	magick/pixel.h	/^  RMSPixelIntensityMethod,$/;"	e	enum:__anon54
ROIDismissCommand	magick/display.c	/^  ROIDismissCommand,$/;"	e	enum:__anon20	file:
ROIHelpCommand	magick/display.c	/^  ROIHelpCommand,$/;"	e	enum:__anon20	file:
RW_OK	magick/nt-base.h	53;"	d
R_OK	magick/nt-base.h	51;"	d
RadialBlurImage	magick/deprecate.c	/^MagickExport Image *RadialBlurImage(const Image *image,const double angle,$/;"	f
RadialBlurImage	magick/methods.h	845;"	d
RadialBlurImageChannel	magick/deprecate.c	/^MagickExport Image *RadialBlurImageChannel(const Image *image,$/;"	f
RadialBlurImageChannel	magick/methods.h	844;"	d
RadialGradient	magick/draw.h	/^  RadialGradient$/;"	e	enum:__anon39
RadiansToDegrees	magick/image-private.h	/^static inline MagickRealType RadiansToDegrees(const MagickRealType radians)$/;"	f
RadonProjection	magick/shear.c	/^static void RadonProjection(const Image *image,MatrixInfo *source_matrix,$/;"	f	file:
RadonTransform	magick/shear.c	/^static MagickBooleanType RadonTransform(const Image *image,$/;"	f	file:
RaiseCommand	magick/display.c	/^  RaiseCommand,$/;"	e	enum:__anon20	file:
RaiseImage	magick/decorate.c	/^MagickExport MagickBooleanType RaiseImage(Image *image,$/;"	f
RaiseImage	magick/methods.h	846;"	d
RaiseImageTag	magick/decorate.c	692;"	d	file:
RaisePreview	magick/effect.h	/^  RaisePreview,$/;"	e	enum:__anon56
RandomChannelThresholdImage	magick/deprecate.c	/^MagickExport unsigned int RandomChannelThresholdImage(Image *image,const char$/;"	f
RandomChannelThresholdImage	magick/methods.h	847;"	d
RandomChannelThresholdImageText	magick/deprecate.c	5882;"	d	file:
RandomComponentGenesis	magick/methods.h	848;"	d
RandomComponentGenesis	magick/random.c	/^MagickExport MagickBooleanType RandomComponentGenesis(void)$/;"	f
RandomComponentTerminus	magick/methods.h	849;"	d
RandomComponentTerminus	magick/random.c	/^MagickExport void RandomComponentTerminus(void)$/;"	f
RandomEntropyLevel	magick/random.c	67;"	d	file:
RandomError	magick/exception.h	/^  RandomError = 475,$/;"	e	enum:__anon84
RandomFatalError	magick/exception.h	/^  RandomFatalError = 775,$/;"	e	enum:__anon84
RandomFilename	magick/random.c	68;"	d	file:
RandomFiletype	magick/random.c	69;"	d	file:
RandomInfo	magick/random_.h	/^  RandomInfo;$/;"	t	typeref:struct:_RandomInfo
RandomNoise	magick/fx.h	/^  RandomNoise$/;"	e	enum:__anon67
RandomProtocolMajorVersion	magick/random.c	70;"	d	file:
RandomProtocolMinorVersion	magick/random.c	71;"	d	file:
RandomThresholdImage	magick/methods.h	851;"	d
RandomThresholdImage	magick/threshold.c	/^MagickExport MagickBooleanType RandomThresholdImage(Image *image,$/;"	f
RandomThresholdImageChannel	magick/methods.h	850;"	d
RandomThresholdImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType RandomThresholdImageChannel(Image *image,$/;"	f
RandomVirtualPixelMethod	magick/cache-view.h	/^  RandomVirtualPixelMethod,$/;"	e	enum:__anon63
RandomWarning	magick/exception.h	/^  RandomWarning = 375,$/;"	e	enum:__anon84
RandomX	magick/cache.c	/^static inline ssize_t RandomX(RandomInfo *random_info,const size_t columns)$/;"	f	file:
RandomY	magick/cache.c	/^static inline ssize_t RandomY(RandomInfo *random_info,const size_t rows)$/;"	f	file:
ReacquireMemory	magick/deprecate.c	/^MagickExport void ReacquireMemory(void **memory,const size_t size)$/;"	f
ReacquireMemory	magick/methods.h	852;"	d
ReadBinaryBlobMode	magick/blob-private.h	/^  ReadBinaryBlobMode,$/;"	e	enum:__anon73
ReadBlob	magick/blob.c	/^MagickExport ssize_t ReadBlob(Image *image,const size_t length,$/;"	f
ReadBlob	magick/methods.h	862;"	d
ReadBlobByte	magick/blob.c	/^MagickExport int ReadBlobByte(Image *image)$/;"	f
ReadBlobByte	magick/methods.h	853;"	d
ReadBlobDouble	magick/blob.c	/^MagickExport double ReadBlobDouble(Image *image)$/;"	f
ReadBlobDouble	magick/methods.h	854;"	d
ReadBlobFloat	magick/blob.c	/^MagickExport float ReadBlobFloat(Image *image)$/;"	f
ReadBlobFloat	magick/methods.h	855;"	d
ReadBlobLSBLong	magick/blob.c	/^MagickExport unsigned int ReadBlobLSBLong(Image *image)$/;"	f
ReadBlobLSBLong	magick/methods.h	858;"	d
ReadBlobLSBShort	magick/blob.c	/^MagickExport unsigned short ReadBlobLSBShort(Image *image)$/;"	f
ReadBlobLSBShort	magick/methods.h	859;"	d
ReadBlobLong	magick/blob.c	/^MagickExport unsigned int ReadBlobLong(Image *image)$/;"	f
ReadBlobLong	magick/methods.h	857;"	d
ReadBlobLongLong	magick/blob.c	/^MagickExport MagickSizeType ReadBlobLongLong(Image *image)$/;"	f
ReadBlobLongLong	magick/methods.h	856;"	d
ReadBlobMSBLong	magick/blob.c	/^MagickExport unsigned int ReadBlobMSBLong(Image *image)$/;"	f
ReadBlobMSBLong	magick/methods.h	860;"	d
ReadBlobMSBLongLong	magick/blob.c	/^MagickExport MagickSizeType ReadBlobMSBLongLong(Image *image)$/;"	f
ReadBlobMSBShort	magick/blob.c	/^MagickExport unsigned short ReadBlobMSBShort(Image *image)$/;"	f
ReadBlobMSBShort	magick/methods.h	861;"	d
ReadBlobMode	magick/blob-private.h	/^  ReadBlobMode,$/;"	e	enum:__anon73
ReadBlobShort	magick/blob.c	/^MagickExport unsigned short ReadBlobShort(Image *image)$/;"	f
ReadBlobShort	magick/methods.h	863;"	d
ReadBlobStream	magick/blob.c	/^static const unsigned char *ReadBlobStream(Image *image,$/;"	f	file:
ReadBlobString	magick/blob.c	/^MagickExport char *ReadBlobString(Image *image,char *string)$/;"	f
ReadBlobString	magick/methods.h	864;"	d
ReadCommandlLine	magick/studio.h	263;"	d
ReadCommandlLine	magick/studio.h	278;"	d
ReadCommandlLine	magick/studio.h	290;"	d
ReadCommandlLine	magick/studio.h	303;"	d
ReadCommandlLine	magick/studio.h	309;"	d
ReadCommandlLine	magick/studio.h	325;"	d
ReadCommandlLine	wand/studio.h	265;"	d
ReadCommandlLine	wand/studio.h	280;"	d
ReadCommandlLine	wand/studio.h	292;"	d
ReadCommandlLine	wand/studio.h	305;"	d
ReadCommandlLine	wand/studio.h	311;"	d
ReadCommandlLine	wand/studio.h	327;"	d
ReadDistributeCacheIndexes	magick/distribute-cache.c	/^static MagickBooleanType ReadDistributeCacheIndexes(SplayTreeInfo *registry,$/;"	f	file:
ReadDistributeCachePixels	magick/distribute-cache.c	/^static MagickBooleanType ReadDistributeCachePixels(SplayTreeInfo *registry,$/;"	f	file:
ReadDistributePixelCacheIndexes	magick/distribute-cache.c	/^MagickPrivate MagickOffsetType ReadDistributePixelCacheIndexes($/;"	f
ReadDistributePixelCachePixels	magick/distribute-cache.c	/^MagickPrivate MagickOffsetType ReadDistributePixelCachePixels($/;"	f
ReadImage	magick/constitute.c	/^MagickExport Image *ReadImage(const ImageInfo *image_info,$/;"	f
ReadImage	magick/methods.h	865;"	d
ReadImages	magick/constitute.c	/^MagickExport Image *ReadImages(const ImageInfo *image_info,$/;"	f
ReadImages	magick/methods.h	866;"	d
ReadInlineImage	magick/constitute.c	/^MagickExport Image *ReadInlineImage(const ImageInfo *image_info,$/;"	f
ReadInlineImage	magick/methods.h	867;"	d
ReadMatrixElements	magick/matrix.c	/^static inline MagickOffsetType ReadMatrixElements($/;"	f	file:
ReadMode	magick/blob.h	/^  ReadMode,$/;"	e	enum:__anon18
ReadPixelCacheIndexes	magick/cache.c	/^static MagickBooleanType ReadPixelCacheIndexes(CacheInfo *restrict cache_info,$/;"	f	file:
ReadPixelCachePixels	magick/cache.c	/^static MagickBooleanType ReadPixelCachePixels(CacheInfo *restrict cache_info,$/;"	f	file:
ReadPixelCacheRegion	magick/cache.c	/^static inline MagickOffsetType ReadPixelCacheRegion($/;"	f	file:
ReadPolicyRights	magick/policy.h	/^  ReadPolicyRights = 0x01,$/;"	e	enum:__anon47
ReadProfileByte	magick/profile.c	/^static inline int ReadProfileByte(unsigned char **p,size_t *length)$/;"	f	file:
ReadProfileLong	magick/profile.c	/^static inline size_t ReadProfileLong(const EndianType endian,$/;"	f	file:
ReadProfileMSBLong	magick/profile.c	/^static inline size_t ReadProfileMSBLong(unsigned char **p,$/;"	f	file:
ReadProfileMSBShort	magick/profile.c	/^static inline unsigned short ReadProfileMSBShort(unsigned char **p,$/;"	f	file:
ReadProfileShort	magick/profile.c	/^static inline unsigned short ReadProfileShort(const EndianType endian,$/;"	f	file:
ReadPropertyByte	magick/property.c	/^static inline int ReadPropertyByte(const unsigned char **p,size_t *length)$/;"	f	file:
ReadPropertyLong	magick/property.c	/^static inline size_t ReadPropertyLong(const EndianType endian,$/;"	f	file:
ReadPropertyMSBLong	magick/property.c	/^static inline size_t ReadPropertyMSBLong(const unsigned char **p,size_t *length)$/;"	f	file:
ReadPropertyMSBShort	magick/property.c	/^static inline unsigned short ReadPropertyMSBShort(const unsigned char **p,$/;"	f	file:
ReadPropertyShort	magick/property.c	/^static inline unsigned short ReadPropertyShort(const EndianType endian,$/;"	f	file:
ReadRandom	magick/random.c	/^static ssize_t ReadRandom(int file,unsigned char *source,size_t length)$/;"	f	file:
ReadResourceByte	magick/profile.c	/^static inline const unsigned char *ReadResourceByte(const unsigned char *p,$/;"	f	file:
ReadResourceBytes	magick/profile.c	/^static inline const unsigned char *ReadResourceBytes(const unsigned char *p,$/;"	f	file:
ReadResourceLong	magick/profile.c	/^static inline const unsigned char *ReadResourceLong(const unsigned char *p,$/;"	f	file:
ReadResourceShort	magick/profile.c	/^static inline const unsigned char *ReadResourceShort(const unsigned char *p,$/;"	f	file:
ReadStream	magick/methods.h	868;"	d
ReadStream	magick/stream.c	/^MagickExport Image *ReadStream(const ImageInfo *image_info,StreamHandler stream,$/;"	f
ReadTGAImage	coders/tga.c	/^static Image *ReadTGAImage(const ImageInfo *image_info,ExceptionInfo *exception)$/;"	f	file:
RealImaginaryComplexOperator	magick/fourier.h	/^  RealImaginaryComplexOperator,$/;"	e	enum:__anon2
RealPixelPacket	magick/quantize.c	/^} RealPixelPacket;$/;"	t	typeref:struct:_RealPixelPacket	file:
Rec601LumaColorspace	magick/colorspace.h	/^  Rec601LumaColorspace,$/;"	e	enum:__anon55
Rec601LumaPixelIntensityMethod	magick/pixel.h	/^  Rec601LumaPixelIntensityMethod,$/;"	e	enum:__anon54
Rec601LuminancePixelIntensityMethod	magick/pixel.h	/^  Rec601LuminancePixelIntensityMethod,$/;"	e	enum:__anon54
Rec601YCbCrColorspace	magick/colorspace.h	/^  Rec601YCbCrColorspace,$/;"	e	enum:__anon55
Rec709LumaColorspace	magick/colorspace.h	/^  Rec709LumaColorspace,$/;"	e	enum:__anon55
Rec709LumaPixelIntensityMethod	magick/pixel.h	/^  Rec709LumaPixelIntensityMethod,$/;"	e	enum:__anon54
Rec709LuminancePixelIntensityMethod	magick/pixel.h	/^  Rec709LuminancePixelIntensityMethod,$/;"	e	enum:__anon54
Rec709YCbCrColorspace	magick/colorspace.h	/^  Rec709YCbCrColorspace,$/;"	e	enum:__anon55
RecolorImage	magick/deprecate.c	/^MagickExport Image *RecolorImage(const Image *image,const size_t order,$/;"	f
RecolorImage	magick/methods.h	869;"	d
RectangleElement	magick/xwindow-private.h	/^  RectangleElement,$/;"	e	enum:__anon27
RectangleInfo	magick/geometry.h	/^} RectangleInfo;$/;"	t	typeref:struct:_RectangleInfo
RectangleKernel	magick/morphology.h	/^  RectangleKernel,$/;"	e	enum:__anon69
RectanglePrimitive	magick/draw.h	/^  RectanglePrimitive,$/;"	e	enum:__anon43
RectifyCopyCommand	magick/display.c	/^  RectifyCopyCommand,$/;"	e	enum:__anon21	file:
RectifyDismissCommand	magick/display.c	/^  RectifyDismissCommand,$/;"	e	enum:__anon21	file:
RectifyHelpCommand	magick/display.c	/^  RectifyHelpCommand,$/;"	e	enum:__anon21	file:
Red	magick/segment.c	/^  Red = 0,$/;"	v	file:
RedChannel	magick/magick-type.h	/^  RedChannel = 0x0001,$/;"	e	enum:__anon9
RedQuantum	magick/quantum.h	/^  RedQuantum,$/;"	e	enum:__anon7
RedShift	magick/quantize.c	1437;"	d	file:
RedoCommand	magick/display.c	/^  RedoCommand,$/;"	e	enum:__anon20	file:
Reduce	magick/quantize.c	/^static void Reduce(const Image *image,CubeInfo *cube_info,$/;"	f	file:
ReduceImageColors	magick/quantize.c	/^static void ReduceImageColors(const Image *image,CubeInfo *cube_info)$/;"	f	file:
ReduceImageTag	magick/quantize.c	3076;"	d	file:
ReduceNoiseCommand	magick/display.c	/^  ReduceNoiseCommand,$/;"	e	enum:__anon20	file:
ReduceNoiseImage	magick/deprecate.c	/^MagickExport Image *ReduceNoiseImage(const Image *image,const double radius,$/;"	f
ReduceNoiseImage	magick/methods.h	870;"	d
ReduceNoisePreview	magick/effect.h	/^  ReduceNoisePreview,$/;"	e	enum:__anon56
ReferenceBlack	magick/colorspace.c	561;"	d	file:
ReferenceBlob	magick/blob.c	/^MagickExport BlobInfo *ReferenceBlob(BlobInfo *blob)$/;"	f
ReferenceBlob	magick/methods.h	871;"	d
ReferenceImage	magick/image.c	/^MagickExport Image *ReferenceImage(Image *image)$/;"	f
ReferenceImage	magick/methods.h	872;"	d
ReferencePixelCache	magick/cache.c	/^MagickExport Cache ReferencePixelCache(Cache cache)$/;"	f
ReferencePixelCache	magick/methods.h	873;"	d
ReferenceType	magick/draw.h	/^} ReferenceType;$/;"	t	typeref:enum:__anon44
ReferenceWhite	magick/colorspace.c	562;"	d	file:
ReflectSpread	magick/draw.h	/^  ReflectSpread,$/;"	e	enum:__anon45
RefreshCommand	magick/display.c	/^  RefreshCommand,$/;"	e	enum:__anon20	file:
RegionofInterestCommand	magick/display.c	/^  RegionofInterestCommand,$/;"	e	enum:__anon20	file:
RegisterARTImage	magick/methods.h	874;"	d
RegisterAVSImage	magick/methods.h	875;"	d
RegisterBMPImage	magick/methods.h	876;"	d
RegisterBRAILLEImage	magick/methods.h	877;"	d
RegisterCALSImage	magick/methods.h	878;"	d
RegisterCAPTIONImage	magick/methods.h	879;"	d
RegisterCINImage	magick/methods.h	880;"	d
RegisterCIPImage	magick/methods.h	881;"	d
RegisterCLIPImage	magick/methods.h	882;"	d
RegisterCMYKImage	magick/methods.h	883;"	d
RegisterCUTImage	magick/methods.h	884;"	d
RegisterDCMImage	magick/methods.h	885;"	d
RegisterDDSImage	magick/methods.h	886;"	d
RegisterDIBImage	magick/methods.h	887;"	d
RegisterDJVUImage	magick/methods.h	888;"	d
RegisterDNGImage	magick/methods.h	889;"	d
RegisterDOTImage	magick/methods.h	890;"	d
RegisterDPXImage	magick/methods.h	891;"	d
RegisterEPTImage	magick/methods.h	892;"	d
RegisterFAXImage	magick/methods.h	893;"	d
RegisterFITSImage	magick/methods.h	894;"	d
RegisterGIFImage	magick/methods.h	895;"	d
RegisterGRADIENTImage	magick/methods.h	896;"	d
RegisterGRAYImage	magick/methods.h	897;"	d
RegisterHALDImage	magick/methods.h	898;"	d
RegisterHISTOGRAMImage	magick/methods.h	899;"	d
RegisterHRZImage	magick/methods.h	900;"	d
RegisterHTMLImage	magick/methods.h	901;"	d
RegisterICONImage	magick/methods.h	902;"	d
RegisterINFOImage	magick/methods.h	903;"	d
RegisterINLINEImage	magick/methods.h	904;"	d
RegisterIPLImage	magick/methods.h	905;"	d
RegisterJP2Image	magick/methods.h	906;"	d
RegisterJPEGImage	magick/methods.h	907;"	d
RegisterJSONImage	magick/methods.h	908;"	d
RegisterLABELImage	magick/methods.h	909;"	d
RegisterMAGICKImage	magick/methods.h	911;"	d
RegisterMAPImage	magick/methods.h	913;"	d
RegisterMATImage	magick/methods.h	914;"	d
RegisterMATTEImage	magick/methods.h	915;"	d
RegisterMCPImage	magick/methods.h	910;"	d
RegisterMETAImage	magick/methods.h	916;"	d
RegisterMIFFImage	magick/methods.h	917;"	d
RegisterMONOImage	magick/methods.h	918;"	d
RegisterMPCImage	magick/methods.h	919;"	d
RegisterMPEGImage	magick/methods.h	920;"	d
RegisterMPRImage	magick/methods.h	921;"	d
RegisterMSLImage	magick/methods.h	922;"	d
RegisterMTVImage	magick/methods.h	923;"	d
RegisterMVGImage	magick/methods.h	924;"	d
RegisterMagickInfo	magick/magick.c	/^MagickExport MagickInfo *RegisterMagickInfo(MagickInfo *magick_info)$/;"	f
RegisterMagickInfo	magick/methods.h	912;"	d
RegisterMagickSignalHandler	magick/magick.c	/^static SignalHandler *RegisterMagickSignalHandler(int signal_number)$/;"	f	file:
RegisterModule	magick/module.c	/^static const ModuleInfo *RegisterModule(const ModuleInfo *module_info,$/;"	f	file:
RegisterNULLImage	magick/methods.h	925;"	d
RegisterOTBImage	magick/methods.h	926;"	d
RegisterPALMImage	magick/methods.h	927;"	d
RegisterPATTERNImage	magick/methods.h	928;"	d
RegisterPCDImage	magick/methods.h	929;"	d
RegisterPCLImage	magick/methods.h	930;"	d
RegisterPCXImage	magick/methods.h	931;"	d
RegisterPDBImage	magick/methods.h	932;"	d
RegisterPDFImage	magick/methods.h	933;"	d
RegisterPICTImage	magick/methods.h	934;"	d
RegisterPIXImage	magick/methods.h	935;"	d
RegisterPLASMAImage	magick/methods.h	936;"	d
RegisterPNGImage	magick/methods.h	937;"	d
RegisterPNMImage	magick/methods.h	938;"	d
RegisterPREVIEWImage	magick/methods.h	939;"	d
RegisterPS2Image	magick/methods.h	940;"	d
RegisterPS3Image	magick/methods.h	941;"	d
RegisterPSDImage	magick/methods.h	942;"	d
RegisterPSImage	magick/methods.h	943;"	d
RegisterPWPImage	magick/methods.h	944;"	d
RegisterRAWImage	magick/methods.h	945;"	d
RegisterRGBImage	magick/methods.h	946;"	d
RegisterRLAImage	magick/methods.h	947;"	d
RegisterRLEImage	magick/methods.h	948;"	d
RegisterSCRImage	magick/methods.h	949;"	d
RegisterSCTImage	magick/methods.h	951;"	d
RegisterSFWImage	magick/methods.h	952;"	d
RegisterSGIImage	magick/methods.h	953;"	d
RegisterSREENSHOTImage	magick/methods.h	950;"	d
RegisterSTEGANOImage	magick/methods.h	955;"	d
RegisterSUNImage	magick/methods.h	956;"	d
RegisterSVGImage	magick/methods.h	957;"	d
RegisterStaticModules	magick/methods.h	954;"	d
RegisterStaticModules	magick/static.c	/^MagickExport void RegisterStaticModules(void)$/;"	f
RegisterTGAImage	coders/tga.c	/^ModuleExport size_t RegisterTGAImage(void)$/;"	f
RegisterTGAImage	magick/methods.h	958;"	d
RegisterTHUMBNAILImage	magick/methods.h	959;"	d
RegisterTIFFImage	magick/methods.h	960;"	d
RegisterTILEImage	magick/methods.h	961;"	d
RegisterTIMImage	magick/methods.h	962;"	d
RegisterTTFImage	magick/methods.h	963;"	d
RegisterTXTImage	magick/methods.h	964;"	d
RegisterUILImage	magick/methods.h	965;"	d
RegisterURLImage	magick/methods.h	966;"	d
RegisterUYVYImage	magick/methods.h	967;"	d
RegisterVICARImage	magick/methods.h	968;"	d
RegisterVIDImage	magick/methods.h	969;"	d
RegisterVIFFImage	magick/methods.h	970;"	d
RegisterVIPSImage	magick/methods.h	971;"	d
RegisterWBMPImage	magick/methods.h	972;"	d
RegisterWMFImage	magick/methods.h	973;"	d
RegisterWPGImage	magick/methods.h	974;"	d
RegisterXBMImage	magick/methods.h	975;"	d
RegisterXCFImage	magick/methods.h	976;"	d
RegisterXCImage	magick/methods.h	977;"	d
RegisterXImage	magick/methods.h	978;"	d
RegisterXPMImage	magick/methods.h	979;"	d
RegisterXPSImage	magick/methods.h	980;"	d
RegisterXWDImage	magick/methods.h	981;"	d
RegisterYCBCRImage	magick/methods.h	982;"	d
RegisterYUVImage	magick/methods.h	983;"	d
RegistryComponentGenesis	magick/methods.h	984;"	d
RegistryComponentGenesis	magick/registry.c	/^MagickExport MagickBooleanType RegistryComponentGenesis(void)$/;"	f
RegistryComponentTerminus	magick/methods.h	985;"	d
RegistryComponentTerminus	magick/registry.c	/^MagickExport void RegistryComponentTerminus(void)$/;"	f
RegistryError	magick/exception.h	/^  RegistryError = 490,$/;"	e	enum:__anon84
RegistryFatalError	magick/exception.h	/^  RegistryFatalError = 790,$/;"	e	enum:__anon84
RegistryInfo	magick/registry.c	/^} RegistryInfo;$/;"	t	typeref:struct:_RegistryInfo	file:
RegistryKey	magick/configure.c	745;"	d	file:
RegistryType	magick/registry.h	/^} RegistryType;$/;"	t	typeref:enum:__anon32
RegistryWarning	magick/exception.h	/^  RegistryWarning = 390,$/;"	e	enum:__anon84
RelativeIntent	magick/profile.h	/^  RelativeIntent$/;"	e	enum:__anon1
RelativePathMode	wand/drawing-wand.c	/^  RelativePathMode$/;"	e	enum:__anon95	file:
RelinquishAlignedMemory	magick/memory.c	/^MagickExport void *RelinquishAlignedMemory(void *memory)$/;"	f
RelinquishAlignedMemory	magick/methods.h	986;"	d
RelinquishCacheNexusPixels	magick/cache.c	/^static inline void RelinquishCacheNexusPixels(NexusInfo *nexus_info)$/;"	f	file:
RelinquishDistributePixelCache	magick/distribute-cache.c	/^MagickPrivate MagickBooleanType RelinquishDistributePixelCache($/;"	f
RelinquishImageRegistry	magick/distribute-cache.c	/^static void *RelinquishImageRegistry(void *image)$/;"	f	file:
RelinquishMagickMatrix	magick/matrix.c	/^MagickExport double **RelinquishMagickMatrix(double **matrix,$/;"	f
RelinquishMagickMatrix	magick/methods.h	987;"	d
RelinquishMagickMemory	magick/memory.c	/^MagickExport void *RelinquishMagickMemory(void *memory)$/;"	f
RelinquishMagickMemory	magick/methods.h	988;"	d
RelinquishMagickResource	magick/methods.h	989;"	d
RelinquishMagickResource	magick/resource.c	/^MagickExport void RelinquishMagickResource(const ResourceType type,$/;"	f
RelinquishPixelCachePixels	magick/cache.c	/^static inline void RelinquishPixelCachePixels(CacheInfo *cache_info)$/;"	f	file:
RelinquishSemaphoreInfo	magick/deprecate.c	/^MagickExport void RelinquishSemaphoreInfo(SemaphoreInfo *semaphore_info)$/;"	f
RelinquishSemaphoreInfo	magick/methods.h	990;"	d
RelinquishSemaphoreMemory	magick/semaphore.c	/^static void *RelinquishSemaphoreMemory(void *memory)$/;"	f	file:
RelinquishStreamPixels	magick/stream.c	/^static inline void RelinquishStreamPixels(CacheInfo *cache_info)$/;"	f	file:
RelinquishUniqueFileResource	magick/methods.h	991;"	d
RelinquishUniqueFileResource	magick/resource.c	/^MagickExport MagickBooleanType RelinquishUniqueFileResource(const char *path)$/;"	f
RelinquishVirtualMemory	magick/memory.c	/^MagickExport MemoryInfo *RelinquishVirtualMemory(MemoryInfo *memory_info)$/;"	f
RelinquishWandId	wand/wand.c	/^WandExport void RelinquishWandId(const size_t id)$/;"	f
RelinquishZIPMemory	magick/compress.c	/^static void RelinquishZIPMemory(voidpf context,voidpf memory)$/;"	f	file:
RemapImage	magick/methods.h	992;"	d
RemapImage	magick/quantize.c	/^MagickExport MagickBooleanType RemapImage(const QuantizeInfo *quantize_info,$/;"	f
RemapImages	magick/methods.h	993;"	d
RemapImages	magick/quantize.c	/^MagickExport MagickBooleanType RemapImages(const QuantizeInfo *quantize_info,$/;"	f
RemoteDisplayCommand	magick/display.c	/^MagickExport MagickBooleanType RemoteDisplayCommand(const ImageInfo *image_info,$/;"	f
RemoteDisplayCommand	magick/methods.h	994;"	d
RemoveAllImageStack	wand/mogrify-private.h	106;"	d
RemoveAlphaChannel	magick/image.h	/^  RemoveAlphaChannel$/;"	e	enum:__anon77
RemoveDuplicateLayers	magick/layer.c	/^MagickExport void RemoveDuplicateLayers(Image **images,$/;"	f
RemoveDuplicateLayers	magick/methods.h	995;"	d
RemoveDupsLayer	magick/layer.h	/^  RemoveDupsLayer,$/;"	e	enum:__anon72
RemoveElementByValueFromLinkedList	magick/hashmap.c	/^MagickExport void *RemoveElementByValueFromLinkedList(LinkedListInfo *list_info,$/;"	f
RemoveElementByValueFromLinkedList	magick/methods.h	996;"	d
RemoveElementFromLinkedList	magick/hashmap.c	/^MagickExport void *RemoveElementFromLinkedList(LinkedListInfo *list_info,$/;"	f
RemoveElementFromLinkedList	magick/methods.h	997;"	d
RemoveEntryFromHashmap	magick/hashmap.c	/^MagickExport void *RemoveEntryFromHashmap(HashmapInfo *hashmap_info,$/;"	f
RemoveEntryFromHashmap	magick/methods.h	998;"	d
RemoveFirstImageFromList	magick/list.c	/^MagickExport Image *RemoveFirstImageFromList(Image **images)$/;"	f
RemoveFirstImageFromList	magick/methods.h	999;"	d
RemoveFreeBlock	magick/memory.c	/^static inline void RemoveFreeBlock(void *block,const size_t i)$/;"	f	file:
RemoveImageArtifact	magick/artifact.c	/^MagickExport char *RemoveImageArtifact(Image *image,const char *artifact)$/;"	f
RemoveImageArtifact	magick/methods.h	1000;"	d
RemoveImageFromList	magick/list.c	/^MagickExport Image *RemoveImageFromList(Image **images)$/;"	f
RemoveImageFromList	magick/methods.h	1001;"	d
RemoveImageOption	magick/methods.h	1002;"	d
RemoveImageOption	magick/option.c	/^MagickExport char *RemoveImageOption(ImageInfo *image_info,const char *option)$/;"	f
RemoveImageProfile	magick/methods.h	1003;"	d
RemoveImageProfile	magick/profile.c	/^MagickExport StringInfo *RemoveImageProfile(Image *image,const char *name)$/;"	f
RemoveImageProperty	magick/methods.h	1004;"	d
RemoveImageProperty	magick/property.c	/^MagickExport char *RemoveImageProperty(Image *image,$/;"	f
RemoveImageRegistry	magick/methods.h	1005;"	d
RemoveImageRegistry	magick/registry.c	/^MagickExport void *RemoveImageRegistry(const char *key)$/;"	f
RemoveImageStack	wand/mogrify-private.h	101;"	d
RemoveLastElementFromLinkedList	magick/hashmap.c	/^MagickExport void *RemoveLastElementFromLinkedList(LinkedListInfo *list_info)$/;"	f
RemoveLastElementFromLinkedList	magick/methods.h	1006;"	d
RemoveLastImageFromList	magick/list.c	/^MagickExport Image *RemoveLastImageFromList(Image **images)$/;"	f
RemoveLastImageFromList	magick/methods.h	1007;"	d
RemoveNodeByValueFromSplayTree	magick/methods.h	1008;"	d
RemoveNodeByValueFromSplayTree	magick/splay-tree.c	/^MagickExport void *RemoveNodeByValueFromSplayTree(SplayTreeInfo *splay_tree,$/;"	f
RemoveNodeFromSplayTree	magick/methods.h	1009;"	d
RemoveNodeFromSplayTree	magick/splay-tree.c	/^MagickExport void *RemoveNodeFromSplayTree(SplayTreeInfo *splay_tree,$/;"	f
RemoveZeroDelayLayers	magick/layer.c	/^MagickExport void RemoveZeroDelayLayers(Image **images,$/;"	f
RemoveZeroDelayLayers	magick/methods.h	1010;"	d
RemoveZeroLayer	magick/layer.h	/^  RemoveZeroLayer,$/;"	e	enum:__anon72
RenderFreetype	magick/annotate.c	/^static MagickBooleanType RenderFreetype(Image *image,const DrawInfo *draw_info,$/;"	f	file:
RenderImageTag	magick/draw.c	1706;"	d	file:
RenderPostscript	magick/annotate.c	/^static MagickBooleanType RenderPostscript(Image *image,$/;"	f	file:
RenderType	magick/annotate.c	/^static MagickBooleanType RenderType(Image *image,const DrawInfo *draw_info,$/;"	f	file:
RenderX11	magick/annotate.c	/^static MagickBooleanType RenderX11(Image *image,const DrawInfo *draw_info,$/;"	f	file:
RenderingIntent	magick/profile.h	/^} RenderingIntent;$/;"	t	typeref:enum:__anon1
RepeatAnimationState	magick/animate.c	83;"	d	file:
RepeatCommand	magick/animate.c	/^  RepeatCommand,$/;"	e	enum:__anon85	file:
RepeatSpread	magick/draw.h	/^  RepeatSpread$/;"	e	enum:__anon45
ReplaceCompositeOp	magick/composite.h	/^  ReplaceCompositeOp,$/;"	e	enum:__anon68
ReplaceImageInList	magick/list.c	/^MagickExport void ReplaceImageInList(Image **images,Image *replace)$/;"	f
ReplaceImageInList	magick/methods.h	1011;"	d
ReplaceImageInListReturnLast	magick/list.c	/^MagickExport void ReplaceImageInListReturnLast(Image **images,Image *replace)$/;"	f
ReplaceMethod	magick/draw.h	/^  ReplaceMethod,$/;"	e	enum:__anon42
ResampleFilter	magick/resample.h	/^  ResampleFilter;$/;"	t	typeref:struct:_ResampleFilter
ResampleImage	magick/methods.h	1012;"	d
ResampleImage	magick/resize.c	/^MagickExport Image *ResampleImage(const Image *image,const double x_resolution,$/;"	f
ResampleImageTag	magick/resize.c	2313;"	d	file:
ResamplePixelColor	magick/methods.h	1013;"	d
ResamplePixelColor	magick/resample.c	/^MagickExport MagickBooleanType ResamplePixelColor($/;"	f
ResetAlphaChannel	magick/image.h	/^  ResetAlphaChannel,  \/* deprecated *\/$/;"	e	enum:__anon77
ResetHashmapIterator	magick/hashmap.c	/^MagickExport void ResetHashmapIterator(HashmapInfo *hashmap_info)$/;"	f
ResetHashmapIterator	magick/methods.h	1014;"	d
ResetImageArtifactIterator	magick/artifact.c	/^MagickExport void ResetImageArtifactIterator(const Image *image)$/;"	f
ResetImageArtifactIterator	magick/methods.h	1015;"	d
ResetImageAttributeIterator	magick/deprecate.c	/^MagickExport void ResetImageAttributeIterator(const Image *image)$/;"	f
ResetImageAttributeIterator	magick/methods.h	1016;"	d
ResetImageOptionIterator	magick/methods.h	1017;"	d
ResetImageOptionIterator	magick/option.c	/^MagickExport void ResetImageOptionIterator(const ImageInfo *image_info)$/;"	f
ResetImageOptions	magick/methods.h	1018;"	d
ResetImageOptions	magick/option.c	/^MagickExport void ResetImageOptions(const ImageInfo *image_info)$/;"	f
ResetImagePage	magick/image.c	/^MagickExport MagickBooleanType ResetImagePage(Image *image,const char *page)$/;"	f
ResetImagePage	magick/methods.h	1019;"	d
ResetImageProfileIterator	magick/methods.h	1020;"	d
ResetImageProfileIterator	magick/profile.c	/^MagickExport void ResetImageProfileIterator(const Image *image)$/;"	f
ResetImagePropertyIterator	magick/methods.h	1021;"	d
ResetImagePropertyIterator	magick/property.c	/^MagickExport void ResetImagePropertyIterator(const Image *image)$/;"	f
ResetImageRegistryIterator	magick/methods.h	1022;"	d
ResetImageRegistryIterator	magick/registry.c	/^MagickExport void ResetImageRegistryIterator(void)$/;"	f
ResetLinkedListIterator	magick/hashmap.c	/^MagickExport void ResetLinkedListIterator(LinkedListInfo *list_info)$/;"	f
ResetLinkedListIterator	magick/methods.h	1023;"	d
ResetMagickMemory	magick/memory.c	/^MagickExport void *ResetMagickMemory(void *memory,int byte,const size_t size)$/;"	f
ResetMagickMemory	magick/methods.h	1024;"	d
ResetMethod	magick/draw.h	/^  ResetMethod$/;"	e	enum:__anon42
ResetPixelList	magick/statistic.c	/^static void ResetPixelList(PixelList *pixel_list)$/;"	f	file:
ResetQuantumState	magick/quantum.c	/^MagickPrivate void ResetQuantumState(QuantumInfo *quantum_info)$/;"	f
ResetSplayTree	magick/methods.h	1026;"	d
ResetSplayTree	magick/splay-tree.c	/^MagickExport void ResetSplayTree(SplayTreeInfo *splay_tree)$/;"	f
ResetSplayTreeIterator	magick/methods.h	1025;"	d
ResetSplayTreeIterator	magick/splay-tree.c	/^MagickExport void ResetSplayTreeIterator(SplayTreeInfo *splay_tree)$/;"	f
ResetStringInfo	magick/methods.h	1027;"	d
ResetStringInfo	magick/string.c	/^MagickExport void ResetStringInfo(StringInfo *string_info)$/;"	f
ResetTimer	magick/methods.h	1028;"	d
ResetTimer	magick/timer.c	/^MagickExport void ResetTimer(TimerInfo *time_info)$/;"	f
ResizeBlock	magick/memory.c	/^static inline void *ResizeBlock(void *block,size_t size)$/;"	f	file:
ResizeCommand	magick/display.c	/^  ResizeCommand,$/;"	e	enum:__anon20	file:
ResizeDistortion	magick/distort.h	/^  ResizeDistortion,$/;"	e	enum:__anon50
ResizeFilter	magick/resize.h	/^  ResizeFilter;$/;"	t	typeref:struct:_ResizeFilter
ResizeImage	magick/methods.h	1029;"	d
ResizeImage	magick/resize.c	/^MagickExport Image *ResizeImage(const Image *image,const size_t columns,$/;"	f
ResizeImageTag	magick/resize.c	2456;"	d	file:
ResizeMagickMemory	magick/memory.c	/^MagickExport void *ResizeMagickMemory(void *memory,const size_t size)$/;"	f
ResizeMagickMemory	magick/methods.h	1030;"	d
ResizeQuantumMemory	magick/memory.c	/^MagickExport void *ResizeQuantumMemory(void *memory,const size_t count,$/;"	f
ResizeQuantumMemory	magick/methods.h	1031;"	d
ResizeWeightingFunctionType	magick/resize-private.h	/^} ResizeWeightingFunctionType;$/;"	t	typeref:enum:__anon30
ResolutionOptions	magick/option.c	/^  ResolutionOptions[] =$/;"	v	file:
ResolutionType	magick/image.h	/^} ResolutionType;$/;"	t	typeref:enum:__anon81
ResourceComponentGenesis	magick/methods.h	1032;"	d
ResourceComponentGenesis	magick/resource.c	/^MagickExport MagickBooleanType ResourceComponentGenesis(void)$/;"	f
ResourceComponentTerminus	magick/methods.h	1033;"	d
ResourceComponentTerminus	magick/resource.c	/^MagickExport void ResourceComponentTerminus(void)$/;"	f
ResourceEvent	magick/log.h	/^  ResourceEvent = 0x02000,$/;"	e	enum:__anon93
ResourceInfo	magick/resource.c	/^} ResourceInfo;$/;"	t	typeref:struct:_ResourceInfo	file:
ResourceLimitError	magick/exception.h	/^  ResourceLimitError = 400,$/;"	e	enum:__anon84
ResourceLimitFatalError	magick/exception.h	/^  ResourceLimitFatalError = 700,$/;"	e	enum:__anon84
ResourceLimitWarning	magick/exception.h	/^  ResourceLimitWarning = 300,$/;"	e	enum:__anon84
ResourceOptions	magick/option.c	/^  ResourceOptions[] =$/;"	v	file:
ResourcePolicyDomain	magick/policy.h	/^  ResourcePolicyDomain,$/;"	e	enum:__anon46
ResourceType	magick/resource_.h	/^} ResourceType;$/;"	t	typeref:enum:__anon65
RestoreCommand	magick/display.c	/^  RestoreCommand,$/;"	e	enum:__anon20	file:
RestoreMSCWarning	magick/studio.h	369;"	d
RestoreMSCWarning	magick/studio.h	372;"	d
RestoreMSCWarning	wand/studio.h	361;"	d
RestoreMSCWarning	wand/studio.h	364;"	d
RetainColorsState	magick/xwindow-private.h	/^  RetainColorsState = 0x0040,$/;"	e	enum:__anon29
ReverseCommand	magick/animate.c	/^  ReverseCommand,$/;"	e	enum:__anon85	file:
ReverseImageList	magick/list.c	/^MagickExport void ReverseImageList(Image **images)$/;"	f
ReverseImageList	magick/methods.h	1034;"	d
ReversePoints	magick/draw.c	/^static void ReversePoints(PointInfo *points,const size_t number_points)$/;"	f	file:
RhoValue	magick/geometry.h	/^  RhoValue = 0x0004,$/;"	e	enum:__anon14
RidgesKernel	magick/morphology.h	/^  RidgesKernel,$/;"	e	enum:__anon69
Riemersma	magick/quantize.c	/^static void Riemersma(Image *image,CacheView *image_view,CubeInfo *cube_info,$/;"	f	file:
RiemersmaDither	magick/quantize.c	/^static MagickBooleanType RiemersmaDither(Image *image,CacheView *image_view,$/;"	f	file:
RiemersmaDitherMethod	magick/quantize.h	/^  RiemersmaDitherMethod,$/;"	e	enum:__anon66
RightAlign	magick/draw.h	/^  RightAlign$/;"	e	enum:__anon34
RightBottomOrientation	magick/image.h	/^  RightBottomOrientation,$/;"	e	enum:__anon80
RightShiftEvaluateOperator	magick/statistic.h	/^  RightShiftEvaluateOperator,$/;"	e	enum:__anon89
RightShiftOperator	magick/fx.c	101;"	d	file:
RightToLeftDirection	magick/draw.h	/^  RightToLeftDirection,$/;"	e	enum:__anon37
RightTopOrientation	magick/image.h	/^  RightTopOrientation,$/;"	e	enum:__anon80
RingKernel	magick/morphology.h	/^  RingKernel,$/;"	e	enum:__anon69
RobertsKernel	magick/morphology.h	/^  RobertsKernel,$/;"	e	enum:__anon69
RobidouxFilter	magick/resample.h	/^  RobidouxFilter,$/;"	e	enum:__anon76
RobidouxSharpFilter	magick/resample.h	/^  RobidouxSharpFilter,$/;"	e	enum:__anon76
RoiDelta	magick/display.c	/^  RoiDelta = 8;$/;"	v	file:
RollCommand	magick/display.c	/^  RollCommand,$/;"	e	enum:__anon20	file:
RollFourier	magick/fourier.c	/^static MagickBooleanType RollFourier(const size_t width,const size_t height,$/;"	f	file:
RollImage	magick/methods.h	1036;"	d
RollImage	magick/transform.c	/^MagickExport Image *RollImage(const Image *image,const ssize_t x_offset,$/;"	f
RollImageTag	magick/transform.c	1572;"	d	file:
RollPreview	magick/effect.h	/^  RollPreview,$/;"	e	enum:__anon56
RootMeanSquaredErrorMetric	magick/compare.h	/^  RootMeanSquaredErrorMetric,$/;"	e	enum:__anon92
RootPath	magick/utility.h	/^  RootPath,$/;"	e	enum:__anon31
RotateColorCommand	magick/display.c	/^  RotateColorCommand,$/;"	e	enum:__anon21	file:
RotateCommand	magick/display.c	/^  RotateCommand,$/;"	e	enum:__anon20	file:
RotateCropCommand	magick/display.c	/^  RotateCropCommand,$/;"	e	enum:__anon21	file:
RotateDirectionCommand	magick/display.c	/^  RotateDirectionCommand,$/;"	e	enum:__anon21	file:
RotateDismissCommand	magick/display.c	/^  RotateDismissCommand,$/;"	e	enum:__anon21	file:
RotateHelpCommand	magick/display.c	/^  RotateHelpCommand,$/;"	e	enum:__anon21	file:
RotateImage	magick/distort.c	/^MagickExport Image *RotateImage(const Image *image,const double degrees,$/;"	f
RotateImage	magick/methods.h	1037;"	d
RotateImageTag	magick/shear.c	712;"	d	file:
RotateKernelInfo	magick/morphology.c	/^static void RotateKernelInfo(KernelInfo *kernel, double angle)$/;"	f	file:
RotateLeft	magick/cipher.c	/^static inline unsigned int RotateLeft(const unsigned int x)$/;"	f	file:
RotateLeftCommand	magick/display.c	/^  RotateLeftCommand,$/;"	e	enum:__anon20	file:
RotatePreview	magick/effect.h	/^  RotatePreview,$/;"	e	enum:__anon56
RotateRight	magick/cipher.c	/^static inline unsigned int RotateRight(const unsigned int x)$/;"	f	file:
RotateRight	magick/signature.c	/^static unsigned int RotateRight(unsigned int x,unsigned int n)$/;"	f	file:
RotateRightCommand	magick/display.c	/^  RotateRightCommand,$/;"	e	enum:__anon20	file:
RotateSharpenCommand	magick/display.c	/^  RotateSharpenCommand,$/;"	e	enum:__anon21	file:
RotationalBlurImage	magick/effect.c	/^MagickExport Image *RotationalBlurImage(const Image *image,const double angle,$/;"	f
RotationalBlurImage	magick/methods.h	1039;"	d
RotationalBlurImageChannel	magick/effect.c	/^MagickExport Image *RotationalBlurImageChannel(const Image *image,$/;"	f
RotationalBlurImageChannel	magick/methods.h	1038;"	d
RoundCap	magick/draw.h	/^  RoundCap,$/;"	e	enum:__anon40
RoundJoin	magick/draw.h	/^  RoundJoin,$/;"	e	enum:__anon41
RoundRectanglePrimitive	magick/draw.h	/^  RoundRectanglePrimitive,$/;"	e	enum:__anon43
RoundToQuantum	magick/quantum.h	28;"	d
RoundToUnity	magick/composite-private.h	/^static inline MagickRealType RoundToUnity(const MagickRealType value)$/;"	f
RoundToYCC	magick/colorspace.c	/^static inline ssize_t RoundToYCC(const MagickRealType value)$/;"	f	file:
RunlengthEncodedCompression	magick/deprecate.h	61;"	d
RunningTimerState	magick/timer.h	/^  RunningTimerState$/;"	e	enum:__anon75
SBox	magick/cipher.c	/^  SBox[256] =$/;"	v	file:
SIGMAX	magick/magick.c	96;"	d	file:
SIG_DFL	magick/magick.c	90;"	d	file:
SIG_ERR	magick/magick.c	93;"	d	file:
SSIZE_MAX	magick/nt-base.h	58;"	d
STDC	magick/studio.h	62;"	d
STDC	wand/studio.h	58;"	d
STDIN_FILENO	magick/studio.h	342;"	d
STDIN_FILENO	wand/studio.h	344;"	d
STRCMP	image_validator/ImageValidator.c	14;"	d	file:
STRCMP	image_validator/ImageValidator.c	16;"	d	file:
STRINGIFY	magick/accelerate-private.h	34;"	d
SVGCompliance	magick/color.h	/^  SVGCompliance = 0x0001,$/;"	e	enum:__anon83
SVGCompliant	magick/color.c	1535;"	d	file:
S_ISDIR	magick/studio.h	195;"	d
S_ISDIR	wand/studio.h	196;"	d
S_ISREG	magick/studio.h	198;"	d
S_ISREG	wand/studio.h	199;"	d
S_MODE	magick/studio.h	227;"	d
S_MODE	magick/studio.h	229;"	d
S_MODE	magick/studio.h	231;"	d
S_MODE	wand/studio.h	227;"	d
S_MODE	wand/studio.h	229;"	d
S_MODE	wand/studio.h	231;"	d
SafeMargin	magick/segment.c	/^  SafeMargin = 3,$/;"	v	file:
SameKernelInfo	magick/morphology.c	/^static MagickBooleanType SameKernelInfo(const KernelInfo *kernel1,$/;"	f	file:
SampleFactor	magick/resize.c	3735;"	d	file:
SampleImage	magick/methods.h	1040;"	d
SampleImage	magick/resize.c	/^MagickExport Image *SampleImage(const Image *image,const size_t columns,$/;"	f
SampleImageTag	magick/resize.c	3099;"	d	file:
SaturateCompositeOp	magick/composite.h	/^  SaturateCompositeOp,$/;"	e	enum:__anon68
SaturationCommand	magick/display.c	/^  SaturationCommand,$/;"	e	enum:__anon20	file:
SaturationIntent	magick/profile.h	/^  SaturationIntent,$/;"	e	enum:__anon1
SaturationPreview	magick/effect.h	/^  SaturationPreview,$/;"	e	enum:__anon56
SaveCommand	magick/animate.c	/^  SaveCommand,$/;"	e	enum:__anon85	file:
SaveCommand	magick/display.c	/^  SaveCommand,$/;"	e	enum:__anon20	file:
SaveImageTag	magick/image.c	/^  SaveImageTag[] = "Save\/Image",$/;"	v
SaveImagesTag	magick/image.c	/^  SaveImagesTag[] = "Save\/Images",$/;"	v
SaveToUndoBufferCommand	magick/display.c	/^  SaveToUndoBufferCommand,$/;"	e	enum:__anon20	file:
ScaleAnyToQuantum	magick/quantum-private.h	/^static inline Quantum ScaleAnyToQuantum(const QuantumAny quantum,$/;"	f
ScaleCharToQuantum	magick/quantum-private.h	/^static inline Quantum ScaleCharToQuantum(const unsigned char value)$/;"	f
ScaleColor5to8	magick/image-private.h	/^static inline unsigned char ScaleColor5to8(const unsigned int color)$/;"	f
ScaleColor6to8	magick/image-private.h	/^static inline unsigned char ScaleColor6to8(const unsigned int color)$/;"	f
ScaleColor8to5	magick/image-private.h	/^static inline unsigned int ScaleColor8to5(const unsigned char color)$/;"	f
ScaleColor8to6	magick/image-private.h	/^static inline unsigned int ScaleColor8to6(const unsigned char color)$/;"	f
ScaleFilter	magick/distort.c	2280;"	d	file:
ScaleGeometryKernelInfo	magick/morphology.c	/^MagickExport void ScaleGeometryKernelInfo (KernelInfo *kernel,$/;"	f
ScaleImage	magick/methods.h	1041;"	d
ScaleImage	magick/resize.c	/^MagickExport Image *ScaleImage(const Image *image,const size_t columns,$/;"	f
ScaleImageTag	magick/resize.c	3288;"	d	file:
ScaleKernelInfo	magick/morphology.c	/^MagickExport void ScaleKernelInfo(KernelInfo *kernel,$/;"	f
ScaleLongToQuantum	magick/quantum-private.h	/^static inline Quantum ScaleLongToQuantum(const unsigned int value)$/;"	f
ScaleMapToQuantum	magick/quantum-private.h	/^static inline Quantum ScaleMapToQuantum(const MagickRealType value)$/;"	f
ScaleQuantumToAny	magick/quantum-private.h	/^static inline QuantumAny ScaleQuantumToAny(const Quantum quantum,$/;"	f
ScaleQuantumToChar	magick/quantum.h	/^static inline unsigned char ScaleQuantumToChar(const Quantum quantum)$/;"	f
ScaleQuantumToLong	magick/quantum-private.h	/^static inline unsigned int ScaleQuantumToLong(const Quantum quantum)$/;"	f
ScaleQuantumToMap	magick/quantum-private.h	/^static inline unsigned int ScaleQuantumToMap(const Quantum quantum)$/;"	f
ScaleQuantumToShort	magick/quantum-private.h	/^static inline unsigned short ScaleQuantumToShort(const Quantum quantum)$/;"	f
ScaleResampleFilter	magick/methods.h	1042;"	d
ScaleResampleFilter	magick/resample.c	/^MagickExport void ScaleResampleFilter(ResampleFilter *resample_filter,$/;"	f
ScaleRotateTranslateDistortion	magick/distort.h	/^  ScaleRotateTranslateDistortion,$/;"	e	enum:__anon50
ScaleShortToQuantum	magick/quantum-private.h	/^static inline Quantum ScaleShortToQuantum(const unsigned short value)$/;"	f
ScaleSpace	magick/segment.c	/^static void ScaleSpace(const ssize_t *histogram,const MagickRealType tau,$/;"	f	file:
ScaledSigmoidal	magick/enhance.c	4323;"	d	file:
ScalesBitmap	magick/display.c	/^  ScalesBitmap[] =$/;"	v	file:
ScalesHeight	magick/display.c	1516;"	d	file:
ScalesWidth	magick/display.c	1515;"	d	file:
SceneCompare	magick/animate.c	/^static int SceneCompare(const void *x,const void *y)$/;"	f	file:
SceneCompare	magick/montage.c	/^static int SceneCompare(const void *x,const void *y)$/;"	f	file:
Screen	magick/composite.c	/^static inline MagickRealType Screen(const MagickRealType Sca,$/;"	f	file:
ScreenCompositeOp	magick/composite.h	/^  ScreenCompositeOp,$/;"	e	enum:__anon68
SearchImageText	magick/color.c	1767;"	d	file:
SeedPseudoRandomGenerator	magick/random.c	/^MagickExport void SeedPseudoRandomGenerator(const unsigned long seed)$/;"	f
SeekBlob	magick/blob.c	/^MagickExport MagickOffsetType SeekBlob(Image *image,$/;"	f
SeekBlob	magick/methods.h	1044;"	d
SegmentCommand	magick/display.c	/^  SegmentCommand,$/;"	e	enum:__anon20	file:
SegmentImage	magick/methods.h	1045;"	d
SegmentImage	magick/segment.c	/^MagickExport MagickBooleanType SegmentImage(Image *image,$/;"	f
SegmentImageTag	magick/segment.c	246;"	d	file:
SegmentInfo	magick/image.h	/^} SegmentInfo;$/;"	t	typeref:struct:_SegmentInfo
SegmentPower	magick/segment.c	113;"	d	file:
SegmentPower	magick/segment.c	116;"	d	file:
SegmentPreview	magick/effect.h	/^  SegmentPreview,$/;"	e	enum:__anon56
SegmentSize	magick/memory.c	85;"	d	file:
SelectCommand	magick/display.c	/^  SelectCommand,$/;"	e	enum:__anon20	file:
SelectiveBlurImage	magick/effect.c	/^MagickExport Image *SelectiveBlurImage(const Image *image,const double radius,$/;"	f
SelectiveBlurImage	magick/methods.h	1047;"	d
SelectiveBlurImageChannel	magick/effect.c	/^MagickExport Image *SelectiveBlurImageChannel(const Image *image,$/;"	f
SelectiveBlurImageChannel	magick/methods.h	1046;"	d
SelectiveBlurImageTag	magick/effect.c	3094;"	d	file:
SemaphoreComponentGenesis	magick/methods.h	1048;"	d
SemaphoreComponentGenesis	magick/semaphore.c	/^MagickExport MagickBooleanType SemaphoreComponentGenesis(void)$/;"	f
SemaphoreComponentTerminus	magick/methods.h	1049;"	d
SemaphoreComponentTerminus	magick/semaphore.c	/^MagickExport void SemaphoreComponentTerminus(void)$/;"	f
SemaphoreInfo	magick/semaphore.c	/^struct SemaphoreInfo$/;"	s	file:
SemaphoreInfo	magick/semaphore.h	/^  SemaphoreInfo;$/;"	t	typeref:struct:SemaphoreInfo
SemiCondensedStretch	magick/type.h	/^  SemiCondensedStretch,$/;"	e	enum:__anon24
SemiExpandedStretch	magick/type.h	/^  SemiExpandedStretch,$/;"	e	enum:__anon24
SentinelDistortion	magick/distort.h	/^  SentinelDistortion$/;"	e	enum:__anon50
SentinelFilter	magick/resample.h	/^  SentinelFilter  \/* a count of all the filters, not a real filter *\/$/;"	e	enum:__anon76
SeparateImage	magick/channel.c	/^MagickExport Image *SeparateImage(const Image *image,const ChannelType channel,$/;"	f
SeparateImageChannel	magick/channel.c	/^MagickExport MagickBooleanType SeparateImageChannel(Image *image,$/;"	f
SeparateImageChannel	magick/methods.h	1050;"	d
SeparateImageTag	magick/channel.c	377;"	d	file:
SeparateImages	magick/channel.c	/^MagickExport Image *SeparateImages(const Image *image,const ChannelType channel,$/;"	f
SeparateImages	magick/methods.h	1051;"	d
SeparatorValue	magick/geometry.h	/^  SeparatorValue = 0x80000,  \/* 'x'  separator found  *\/$/;"	e	enum:__anon14
SepiaToneCommand	magick/display.c	/^  SepiaToneCommand,$/;"	e	enum:__anon20	file:
SepiaToneImage	magick/fx.c	/^MagickExport Image *SepiaToneImage(const Image *image,const double threshold,$/;"	f
SepiaToneImage	magick/methods.h	1052;"	d
SepiaToneImageTag	magick/fx.c	4081;"	d	file:
SetAESKey	magick/cipher.c	/^static void SetAESKey(AESInfo *aes_info,const StringInfo *key)$/;"	f	file:
SetAlphaChannel	magick/image.h	/^  SetAlphaChannel,$/;"	e	enum:__anon77
SetAssociatedAlpha	magick/quantize.c	/^static inline void SetAssociatedAlpha(const Image *image,CubeInfo *cube_info)$/;"	f	file:
SetBit	magick/fx.c	4706;"	d	file:
SetBlobExempt	magick/blob.c	/^MagickExport void SetBlobExempt(Image *image,const MagickBooleanType exempt)$/;"	f
SetBlobExempt	magick/methods.h	1053;"	d
SetBlobExtent	magick/blob.c	/^MagickExport MagickBooleanType SetBlobExtent(Image *image,$/;"	f
SetBlobExtent	magick/methods.h	1054;"	d
SetCacheAlphaChannel	magick/cache.c	/^static MagickBooleanType SetCacheAlphaChannel(Image *image,$/;"	f	file:
SetCacheThreshold	magick/deprecate.c	/^MagickExport void SetCacheThreshold(const size_t size)$/;"	f
SetCacheThreshold	magick/methods.h	1055;"	d
SetCacheViewPixels	magick/deprecate.c	/^MagickExport PixelPacket *SetCacheViewPixels(CacheView *cache_view,const ssize_t x,$/;"	f
SetCacheViewPixels	magick/methods.h	1056;"	d
SetCacheViewStorageClass	magick/cache-view.c	/^MagickExport MagickBooleanType SetCacheViewStorageClass(CacheView *cache_view,$/;"	f
SetCacheViewStorageClass	magick/methods.h	1057;"	d
SetCacheViewVirtualPixelMethod	magick/cache-view.c	/^MagickExport MagickBooleanType SetCacheViewVirtualPixelMethod($/;"	f
SetCacheViewVirtualPixelMethod	magick/methods.h	1058;"	d
SetClientName	magick/client.c	/^MagickExport const char *SetClientName(const char *name)$/;"	f
SetClientName	magick/methods.h	1059;"	d
SetClientPath	magick/client.c	/^MagickExport const char *SetClientPath(const char *path)$/;"	f
SetClientPath	magick/methods.h	1060;"	d
SetErrorHandler	magick/exception.c	/^MagickExport ErrorHandler SetErrorHandler(ErrorHandler handler)$/;"	f
SetErrorHandler	magick/methods.h	1061;"	d
SetEvaluateOperator	magick/statistic.h	/^  SetEvaluateOperator,$/;"	e	enum:__anon89
SetExceptionInfo	magick/deprecate.c	/^MagickExport MagickBooleanType SetExceptionInfo(ExceptionInfo *exception,$/;"	f
SetExceptionInfo	magick/methods.h	1062;"	d
SetFatalErrorHandler	magick/exception.c	/^MagickExport FatalErrorHandler SetFatalErrorHandler(FatalErrorHandler handler)$/;"	f
SetFatalErrorHandler	magick/methods.h	1063;"	d
SetGeometry	magick/geometry.c	/^MagickExport void SetGeometry(const Image *image,RectangleInfo *geometry)$/;"	f
SetGeometry	magick/methods.h	1065;"	d
SetGeometryInfo	magick/geometry.c	/^MagickExport void SetGeometryInfo(GeometryInfo *geometry_info)$/;"	f
SetGeometryInfo	magick/methods.h	1064;"	d
SetGrayscaleImage	magick/quantize.c	/^static MagickBooleanType SetGrayscaleImage(Image *image)$/;"	f	file:
SetHeaderFromIPL	magick/methods.h	1066;"	d
SetImage	magick/deprecate.c	/^MagickExport void SetImage(Image *image,const Quantum opacity)$/;"	f
SetImage	magick/methods.h	1085;"	d
SetImageAlphaChannel	magick/channel.c	/^MagickExport MagickBooleanType SetImageAlphaChannel(Image *image,$/;"	f
SetImageAlphaChannel	magick/methods.h	1067;"	d
SetImageArtifact	magick/artifact.c	/^MagickExport MagickBooleanType SetImageArtifact(Image *image,$/;"	f
SetImageArtifact	magick/methods.h	1068;"	d
SetImageAttribute	magick/deprecate.c	/^MagickExport MagickBooleanType SetImageAttribute(Image *image,const char *key,$/;"	f
SetImageAttribute	magick/methods.h	1069;"	d
SetImageBackgroundColor	magick/image.c	/^MagickExport MagickBooleanType SetImageBackgroundColor(Image *image)$/;"	f
SetImageBackgroundColor	magick/methods.h	1070;"	d
SetImageChannelDepth	magick/attribute.c	/^MagickExport MagickBooleanType SetImageChannelDepth(Image *image,$/;"	f
SetImageChannelDepth	magick/methods.h	1071;"	d
SetImageChannels	magick/image.c	/^MagickExport MagickBooleanType SetImageChannels(Image *image,$/;"	f
SetImageClipMask	magick/image.c	/^MagickExport MagickBooleanType SetImageClipMask(Image *image,$/;"	f
SetImageClipMask	magick/methods.h	1072;"	d
SetImageColor	magick/image.c	/^MagickExport MagickBooleanType SetImageColor(Image *image,$/;"	f
SetImageColorspace	magick/colorspace.c	/^MagickExport MagickBooleanType SetImageColorspace(Image *image,$/;"	f
SetImageColorspace	magick/methods.h	1073;"	d
SetImageDepth	magick/attribute.c	/^MagickExport MagickBooleanType SetImageDepth(Image *image,$/;"	f
SetImageDepth	magick/methods.h	1074;"	d
SetImageExtent	magick/image.c	/^MagickExport MagickBooleanType SetImageExtent(Image *image,$/;"	f
SetImageExtent	magick/methods.h	1075;"	d
SetImageInfo	magick/image.c	/^MagickExport MagickBooleanType SetImageInfo(ImageInfo *image_info,$/;"	f
SetImageInfo	magick/methods.h	1078;"	d
SetImageInfoBlob	magick/image.c	/^MagickExport void SetImageInfoBlob(ImageInfo *image_info,const void *blob,$/;"	f
SetImageInfoBlob	magick/methods.h	1076;"	d
SetImageInfoFile	magick/image.c	/^MagickExport void SetImageInfoFile(ImageInfo *image_info,FILE *file)$/;"	f
SetImageInfoFile	magick/methods.h	1077;"	d
SetImageInfoProgressMonitor	magick/methods.h	1079;"	d
SetImageInfoProgressMonitor	magick/monitor.c	/^MagickExport MagickProgressMonitor SetImageInfoProgressMonitor($/;"	f
SetImageList	magick/deprecate.c	/^MagickExport unsigned int SetImageList(Image **images,const Image *image,$/;"	f
SetImageList	magick/methods.h	1080;"	d
SetImageMask	magick/image.c	/^MagickExport MagickBooleanType SetImageMask(Image *image,const Image *mask)$/;"	f
SetImageMask	magick/methods.h	1081;"	d
SetImageOpacity	magick/image.c	/^MagickExport MagickBooleanType SetImageOpacity(Image *image,$/;"	f
SetImageOpacity	magick/methods.h	1082;"	d
SetImageOption	magick/methods.h	1083;"	d
SetImageOption	magick/option.c	/^MagickExport MagickBooleanType SetImageOption(ImageInfo *image_info,$/;"	f
SetImagePixels	magick/deprecate.c	/^MagickExport PixelPacket *SetImagePixels(Image *image,const ssize_t x,const ssize_t y,$/;"	f
SetImagePixels	magick/methods.h	1084;"	d
SetImageProfile	magick/methods.h	1086;"	d
SetImageProfile	magick/profile.c	/^MagickExport MagickBooleanType SetImageProfile(Image *image,const char *name,$/;"	f
SetImageProfileInternal	magick/profile.c	/^static MagickBooleanType SetImageProfileInternal(Image *image,const char *name,$/;"	f	file:
SetImageProgress	magick/monitor-private.h	/^static inline MagickBooleanType SetImageProgress(const Image *image,$/;"	f
SetImageProgressMonitor	magick/methods.h	1087;"	d
SetImageProgressMonitor	magick/monitor.c	/^MagickExport MagickProgressMonitor SetImageProgressMonitor(Image *image,$/;"	f
SetImageProperty	magick/methods.h	1088;"	d
SetImageProperty	magick/property.c	/^MagickExport MagickBooleanType SetImageProperty(Image *image,$/;"	f
SetImageRegistry	magick/methods.h	1089;"	d
SetImageRegistry	magick/registry.c	/^MagickExport MagickBooleanType SetImageRegistry(const RegistryType type,$/;"	f
SetImageStack	wand/mogrify-private.h	111;"	d
SetImageStorageClass	magick/image.c	/^MagickExport MagickBooleanType SetImageStorageClass(Image *image,$/;"	f
SetImageStorageClass	magick/methods.h	1090;"	d
SetImageType	magick/attribute.c	/^MagickExport MagickBooleanType SetImageType(Image *image,const ImageType type)$/;"	f
SetImageType	magick/methods.h	1091;"	d
SetImageViewMethod	magick/image-view.h	/^  (*SetImageViewMethod)(ImageView *,const ssize_t,const int,void *),$/;"	t
SetImageVirtualPixelMethod	magick/image.c	/^MagickExport VirtualPixelMethod SetImageVirtualPixelMethod(const Image *image,$/;"	f
SetImageVirtualPixelMethod	magick/methods.h	1092;"	d
SetLogEventMask	magick/log.c	/^MagickExport LogEventType SetLogEventMask(const char *events)$/;"	f
SetLogEventMask	magick/methods.h	1093;"	d
SetLogFormat	magick/log.c	/^MagickExport void SetLogFormat(const char *format)$/;"	f
SetLogFormat	magick/methods.h	1094;"	d
SetLogMethod	magick/log.c	/^MagickExport void SetLogMethod(MagickLogMethod method)$/;"	f
SetLogName	magick/log.c	/^MagickExport const char *SetLogName(const char *name)$/;"	f
SetLogName	magick/methods.h	1095;"	d
SetMagickInfo	magick/magick.c	/^MagickExport MagickInfo *SetMagickInfo(const char *name)$/;"	f
SetMagickInfo	magick/methods.h	1096;"	d
SetMagickMemoryMethods	magick/memory.c	/^MagickExport void SetMagickMemoryMethods($/;"	f
SetMagickMemoryMethods	magick/methods.h	1097;"	d
SetMagickPixelPacket	magick/pixel-private.h	/^static inline void SetMagickPixelPacket(const Image *image,$/;"	f
SetMagickPixelPacket	wand/drawing-wand.c	/^static inline void SetMagickPixelPacket(const Image *image,$/;"	f	file:
SetMagickPixelPacketBias	magick/pixel-private.h	/^static inline void SetMagickPixelPacketBias(const Image *image,$/;"	f
SetMagickPrecision	magick/magick.c	/^MagickExport int SetMagickPrecision(const int precision)$/;"	f
SetMagickRegistry	magick/deprecate.c	/^MagickExport ssize_t SetMagickRegistry(const RegistryType type,const void *blob,$/;"	f
SetMagickRegistry	magick/methods.h	1098;"	d
SetMagickResourceLimit	magick/methods.h	1099;"	d
SetMagickResourceLimit	magick/resource.c	/^MagickExport MagickBooleanType SetMagickResourceLimit(const ResourceType type,$/;"	f
SetMagickSignalHandler	magick/magick.c	/^static SignalHandler *SetMagickSignalHandler(int signal_number,$/;"	f	file:
SetMatrixElement	magick/matrix.c	/^MagickExport MagickBooleanType SetMatrixElement(const MatrixInfo *matrix_info,$/;"	f
SetMatrixExtent	magick/matrix.c	/^static MagickBooleanType SetMatrixExtent(MatrixInfo *restrict matrix_info,$/;"	f	file:
SetMonitorHandler	magick/deprecate.c	/^MagickExport MonitorHandler SetMonitorHandler(MonitorHandler handler)$/;"	f
SetMonitorHandler	magick/methods.h	1100;"	d
SetNotifyHandlers	magick/studio.h	264;"	d
SetNotifyHandlers	magick/studio.h	279;"	d
SetNotifyHandlers	magick/studio.h	291;"	d
SetNotifyHandlers	magick/studio.h	304;"	d
SetNotifyHandlers	magick/studio.h	310;"	d
SetNotifyHandlers	magick/studio.h	326;"	d
SetNotifyHandlers	wand/studio.h	266;"	d
SetNotifyHandlers	wand/studio.h	281;"	d
SetNotifyHandlers	wand/studio.h	293;"	d
SetNotifyHandlers	wand/studio.h	306;"	d
SetNotifyHandlers	wand/studio.h	312;"	d
SetNotifyHandlers	wand/studio.h	328;"	d
SetOpenMPMaximumThreads	magick/thread-private.h	/^static inline void SetOpenMPMaximumThreads(const int threads)$/;"	f
SetOpenMPNested	magick/thread-private.h	/^static inline void SetOpenMPNested(const int value)$/;"	f
SetPixelAlpha	magick/pixel-accessor.h	67;"	d
SetPixelBlack	magick/pixel-accessor.h	70;"	d
SetPixelBlue	magick/pixel-accessor.h	71;"	d
SetPixelCacheExtent	magick/cache.c	/^static MagickBooleanType SetPixelCacheExtent(Image *image,MagickSizeType length)$/;"	f	file:
SetPixelCacheMethods	magick/cache.c	/^MagickExport void SetPixelCacheMethods(Cache cache,CacheMethods *cache_methods)$/;"	f
SetPixelCacheMethods	magick/methods.h	1101;"	d
SetPixelCacheNexusPixels	magick/cache.c	/^static PixelPacket *SetPixelCacheNexusPixels(const CacheInfo *cache_info,$/;"	f	file:
SetPixelCacheVirtualMethod	magick/cache.c	/^MagickExport VirtualPixelMethod SetPixelCacheVirtualMethod(const Image *image,$/;"	f
SetPixelCacheVirtualMethod	magick/methods.h	1102;"	d
SetPixelCb	magick/pixel-accessor.h	72;"	d
SetPixelCr	magick/pixel-accessor.h	73;"	d
SetPixelCyan	magick/pixel-accessor.h	74;"	d
SetPixelGray	magick/pixel-accessor.h	75;"	d
SetPixelGreen	magick/pixel-accessor.h	77;"	d
SetPixelIndex	magick/pixel-accessor.h	78;"	d
SetPixelL	magick/pixel-accessor.h	83;"	d
SetPixelMagenta	magick/pixel-accessor.h	84;"	d
SetPixelOpacity	magick/pixel-accessor.h	85;"	d
SetPixelPacket	magick/pixel-private.h	/^static inline void SetPixelPacket(const Image *image,$/;"	f
SetPixelRGBA	magick/pixel-accessor.h	94;"	d
SetPixelRGBO	magick/pixel-accessor.h	101;"	d
SetPixelRed	magick/pixel-accessor.h	87;"	d
SetPixelRgb	magick/pixel-accessor.h	88;"	d
SetPixelViewMethod	wand/deprecate.h	/^  (*SetPixelViewMethod)(PixelView *,void *),$/;"	t
SetPixelY	magick/pixel-accessor.h	109;"	d
SetPixelYellow	magick/pixel-accessor.h	108;"	d
SetPixela	magick/pixel-accessor.h	66;"	d
SetPixelb	magick/pixel-accessor.h	69;"	d
SetQuantumAlphaType	magick/methods.h	1103;"	d
SetQuantumAlphaType	magick/quantum.c	/^MagickExport void SetQuantumAlphaType(QuantumInfo *quantum_info,$/;"	f
SetQuantumDepth	magick/methods.h	1104;"	d
SetQuantumDepth	magick/quantum.c	/^MagickExport MagickBooleanType SetQuantumDepth(const Image *image,$/;"	f
SetQuantumEndian	magick/quantum.c	/^MagickExport MagickBooleanType SetQuantumEndian(const Image *image,$/;"	f
SetQuantumFormat	magick/methods.h	1105;"	d
SetQuantumFormat	magick/quantum.c	/^MagickExport MagickBooleanType SetQuantumFormat(const Image *image,$/;"	f
SetQuantumImageType	magick/methods.h	1106;"	d
SetQuantumImageType	magick/quantum.c	/^MagickExport void SetQuantumImageType(Image *image,$/;"	f
SetQuantumMinIsWhite	magick/methods.h	1107;"	d
SetQuantumMinIsWhite	magick/quantum.c	/^MagickExport void SetQuantumMinIsWhite(QuantumInfo *quantum_info,$/;"	f
SetQuantumPack	magick/methods.h	1108;"	d
SetQuantumPack	magick/quantum.c	/^MagickExport void SetQuantumPack(QuantumInfo *quantum_info,$/;"	f
SetQuantumPad	magick/methods.h	1109;"	d
SetQuantumPad	magick/quantum.c	/^MagickExport MagickBooleanType SetQuantumPad(const Image *image,$/;"	f
SetQuantumQuantum	magick/methods.h	1110;"	d
SetQuantumQuantum	magick/quantum.c	/^MagickExport void SetQuantumQuantum(QuantumInfo *quantum_info,$/;"	f
SetQuantumScale	magick/methods.h	1111;"	d
SetQuantumScale	magick/quantum.c	/^MagickExport void SetQuantumScale(QuantumInfo *quantum_info,const double scale)$/;"	f
SetRandomKey	magick/methods.h	1112;"	d
SetRandomKey	magick/random.c	/^MagickExport void SetRandomKey(RandomInfo *random_info,const size_t length,$/;"	f
SetRandomSecretKey	magick/methods.h	1043;"	d
SetRandomSecretKey	magick/random.c	/^MagickExport void SetRandomSecretKey(const unsigned long key)$/;"	f
SetRandomTrueRandom	magick/methods.h	1113;"	d
SetRandomTrueRandom	magick/random.c	/^MagickExport void SetRandomTrueRandom(const MagickBooleanType true_random)$/;"	f
SetResampleFilter	magick/methods.h	1115;"	d
SetResampleFilter	magick/resample.c	/^MagickExport void SetResampleFilter(ResampleFilter *resample_filter,$/;"	f
SetResampleFilterInterpolateMethod	magick/methods.h	1114;"	d
SetResampleFilterInterpolateMethod	magick/resample.c	/^MagickExport MagickBooleanType SetResampleFilterInterpolateMethod($/;"	f
SetResampleFilterVirtualPixelMethod	magick/methods.h	1116;"	d
SetResampleFilterVirtualPixelMethod	magick/resample.c	/^MagickExport MagickBooleanType SetResampleFilterVirtualPixelMethod($/;"	f
SetResizeFilterSupport	magick/methods.h	1117;"	d
SetSignatureDigest	magick/methods.h	1118;"	d
SetSignatureDigest	magick/signature.c	/^MagickExport void SetSignatureDigest(SignatureInfo *signature_info,$/;"	f
SetStreamInfoClientData	magick/methods.h	1119;"	d
SetStreamInfoClientData	magick/stream.c	/^MagickExport void SetStreamInfoClientData(StreamInfo *stream_info,$/;"	f
SetStreamInfoMap	magick/methods.h	1120;"	d
SetStreamInfoMap	magick/stream.c	/^MagickExport void SetStreamInfoMap(StreamInfo *stream_info,const char *map)$/;"	f
SetStreamInfoStorageType	magick/methods.h	1121;"	d
SetStreamInfoStorageType	magick/stream.c	/^MagickExport void SetStreamInfoStorageType(StreamInfo *stream_info,$/;"	f
SetStringInfo	magick/methods.h	1125;"	d
SetStringInfo	magick/string.c	/^MagickExport void SetStringInfo(StringInfo *string_info,$/;"	f
SetStringInfoDatum	magick/methods.h	1122;"	d
SetStringInfoDatum	magick/string.c	/^MagickExport void SetStringInfoDatum(StringInfo *string_info,$/;"	f
SetStringInfoLength	magick/methods.h	1123;"	d
SetStringInfoLength	magick/string.c	/^MagickExport void SetStringInfoLength(StringInfo *string_info,$/;"	f
SetStringInfoPath	magick/methods.h	1124;"	d
SetStringInfoPath	magick/string.c	/^MagickExport void SetStringInfoPath(StringInfo *string_info,const char *path)$/;"	f
SetTypeNodePath	magick/type.c	/^static inline MagickBooleanType SetTypeNodePath(const char *filename,$/;"	f	file:
SetWandViewMethod	wand/wand-view.h	/^  (*SetWandViewMethod)(WandView *,const ssize_t,const int,void *),$/;"	t
SetWarningHandler	magick/exception.c	/^MagickExport WarningHandler SetWarningHandler(WarningHandler handler)$/;"	f
SetWarningHandler	magick/methods.h	1126;"	d
SetXMLTreeAttribute	magick/methods.h	1127;"	d
SetXMLTreeAttribute	magick/xml-tree.c	/^MagickExport XMLTreeInfo *SetXMLTreeAttribute(XMLTreeInfo *xml_info,$/;"	f
SetXMLTreeContent	magick/methods.h	1128;"	d
SetXMLTreeContent	magick/xml-tree.c	/^MagickExport XMLTreeInfo *SetXMLTreeContent(XMLTreeInfo *xml_info,$/;"	f
ShadeCommand	magick/display.c	/^  ShadeCommand,$/;"	e	enum:__anon20	file:
ShadeImage	magick/effect.c	/^MagickExport Image *ShadeImage(const Image *image,const MagickBooleanType gray,$/;"	f
ShadeImage	magick/methods.h	1129;"	d
ShadeImageTag	magick/effect.c	3534;"	d	file:
ShadePreview	magick/effect.h	/^  ShadePreview,$/;"	e	enum:__anon56
ShadowBitmap	magick/animate.c	/^  ShadowBitmap[8] =$/;"	v	file:
ShadowBitmap	magick/display.c	/^  ShadowBitmap[8] =$/;"	v	file:
ShadowFactor	magick/decorate.c	691;"	d	file:
ShadowHeight	magick/animate.c	235;"	d	file:
ShadowHeight	magick/display.c	1518;"	d	file:
ShadowImage	magick/fx.c	/^MagickExport Image *ShadowImage(const Image *image,const double opacity,$/;"	f
ShadowImage	magick/methods.h	1130;"	d
ShadowImageTag	magick/fx.c	4236;"	d	file:
ShadowModulate	magick/decorate.c	68;"	d	file:
ShadowWidth	magick/animate.c	234;"	d	file:
ShadowWidth	magick/display.c	1517;"	d	file:
ShapeAlphaChannel	magick/image.h	/^  ShapeAlphaChannel,$/;"	e	enum:__anon77
SharedColormap	magick/xwindow-private.h	/^  SharedColormap$/;"	e	enum:__anon28
SharpenCommand	magick/display.c	/^  SharpenCommand,$/;"	e	enum:__anon20	file:
SharpenImage	magick/effect.c	/^MagickExport Image *SharpenImage(const Image *image,const double radius,$/;"	f
SharpenImage	magick/methods.h	1132;"	d
SharpenImageChannel	magick/effect.c	/^MagickExport Image *SharpenImageChannel(const Image *image,$/;"	f
SharpenImageChannel	magick/methods.h	1131;"	d
SharpenImageTag	magick/effect.c	4063;"	d	file:
SharpenPreview	magick/effect.h	/^  SharpenPreview,$/;"	e	enum:__anon56
ShaveImage	magick/methods.h	1133;"	d
ShaveImage	magick/transform.c	/^MagickExport Image *ShaveImage(const Image *image,$/;"	f
ShearCommand	magick/display.c	/^  ShearCommand,$/;"	e	enum:__anon20	file:
ShearImage	magick/methods.h	1134;"	d
ShearImage	magick/shear.c	/^MagickExport Image *ShearImage(const Image *image,const double x_shear,$/;"	f
ShearPreview	magick/effect.h	/^  ShearPreview,$/;"	e	enum:__anon56
ShearRotateImage	magick/shear.c	/^MagickExport Image *ShearRotateImage(const Image *image,const double degrees,$/;"	f
ShepardsColorInterpolate	magick/distort.h	/^  ShepardsColorInterpolate = ShepardsDistortion,$/;"	e	enum:__anon51
ShepardsDistortion	magick/distort.h	/^  ShepardsDistortion,$/;"	e	enum:__anon50
ShiftImageList	magick/deprecate.c	/^MagickExport Image *ShiftImageList(Image **images)$/;"	f
ShiftImageList	magick/methods.h	1135;"	d
ShortData	magick/mime-private.h	/^  ShortData,$/;"	e	enum:__anon16
ShortPixel	magick/constitute.h	/^  ShortPixel$/;"	e	enum:__anon64
ShowHistogramCommand	magick/display.c	/^  ShowHistogramCommand,$/;"	e	enum:__anon20	file:
ShowKernelInfo	magick/morphology.c	/^MagickExport void ShowKernelInfo(const KernelInfo *kernel)$/;"	f
ShowMatteCommand	magick/display.c	/^  ShowMatteCommand,$/;"	e	enum:__anon20	file:
ShowPreviewCommand	magick/display.c	/^  ShowPreviewCommand,$/;"	e	enum:__anon20	file:
ShredFile	magick/utility.c	/^MagickPrivate MagickBooleanType ShredFile(const char *path)$/;"	f
SiPrefixToDoubleInterval	magick/string-private.h	/^static inline double SiPrefixToDoubleInterval(const char *string,$/;"	f
Sigma0	magick/signature.c	612;"	d	file:
Sigma1	magick/signature.c	613;"	d	file:
SigmaGaussian	magick/gem.c	1506;"	d	file:
SigmaImpulse	magick/gem.c	1507;"	d	file:
SigmaLaplacian	magick/gem.c	1508;"	d	file:
SigmaMultiplicativeGaussian	magick/gem.c	1509;"	d	file:
SigmaPoisson	magick/gem.c	1510;"	d	file:
SigmaRandom	magick/gem.c	1511;"	d	file:
SigmaUniform	magick/gem.c	1505;"	d	file:
SigmaValue	magick/geometry.h	/^  SigmaValue = 0x0008,$/;"	e	enum:__anon14
Sigmoidal	magick/enhance.c	4302;"	d	file:
Sigmoidal	magick/enhance.c	4304;"	d	file:
SigmoidalContrastCommand	magick/display.c	/^  SigmoidalContrastCommand,$/;"	e	enum:__anon20	file:
SigmoidalContrastImage	magick/enhance.c	/^MagickExport MagickBooleanType SigmoidalContrastImage(Image *image,$/;"	f
SigmoidalContrastImage	magick/methods.h	1137;"	d
SigmoidalContrastImageChannel	magick/enhance.c	/^MagickExport MagickBooleanType SigmoidalContrastImageChannel(Image *image,$/;"	f
SigmoidalContrastImageChannel	magick/methods.h	1136;"	d
SigmoidalContrastImageTag	magick/enhance.c	4388;"	d	file:
SignBitShift	magick/quantum-private.h	105;"	d
SignalHandler	magick/magick.c	/^  SignalHandler(int);$/;"	t	file:
SignatureBlocksize	magick/signature.c	58;"	d	file:
SignatureDigestsize	magick/signature.c	59;"	d	file:
SignatureImage	magick/methods.h	1138;"	d
SignatureImage	magick/signature.c	/^MagickExport MagickBooleanType SignatureImage(Image *image)$/;"	f
SignatureInfo	magick/signature-private.h	/^  SignatureInfo;$/;"	t	typeref:struct:_SignatureInfo
SignedQuantum	magick/magick-type.h	/^typedef double SignedQuantum;$/;"	t
SignedQuantum	magick/magick-type.h	/^typedef ssize_t SignedQuantum;$/;"	t
SignedQuantumFormat	magick/quantum.h	/^  SignedQuantumFormat,$/;"	e	enum:__anon6
SignificandMask	magick/quantum-private.h	107;"	d
SignificandShift	magick/quantum-private.h	106;"	d
SimilarityImage	magick/compare.c	/^MagickExport Image *SimilarityImage(Image *image,const Image *reference,$/;"	f
SimilarityImage	magick/methods.h	1139;"	d
SimilarityImageTag	magick/compare.c	1949;"	d	file:
SimilarityImageTag	magick/compare.c	969;"	d	file:
SimilarityMetricImage	magick/compare.c	/^MagickExport Image *SimilarityMetricImage(Image *image,const Image *reference,$/;"	f
SimpleOperatorOptionFlag	magick/option.h	/^  SimpleOperatorOptionFlag  = 0x0100,  \/* Simple Image processing operator *\/$/;"	e	enum:__anon88
Sinc	magick/resize.c	/^static MagickRealType Sinc(const MagickRealType x,$/;"	f	file:
SincFast	magick/resize.c	/^static MagickRealType SincFast(const MagickRealType x,$/;"	f	file:
SincFastFilter	magick/resample.h	/^  SincFastFilter,$/;"	e	enum:__anon76
SincFastWeightingFunction	magick/resize-private.h	/^  SincFastWeightingFunction,$/;"	e	enum:__anon30
SincFilter	magick/resample.h	/^  SincFilter,$/;"	e	enum:__anon76
SincWeightingFunction	magick/resize-private.h	/^  SincWeightingFunction,$/;"	e	enum:__anon30
SineEvaluateOperator	magick/statistic.h	/^  SineEvaluateOperator,$/;"	e	enum:__anon89
SinglePrecisionToHalf	magick/quantum-private.h	/^static inline unsigned short SinglePrecisionToHalf(const float value)$/;"	f
SinusoidFunction	magick/statistic.h	/^  SinusoidFunction,$/;"	e	enum:__anon90
SizeBlob	magick/deprecate.c	/^MagickExport MagickOffsetType SizeBlob(Image *image)$/;"	f
SizeBlob	magick/methods.h	1140;"	d
SizeMask	magick/memory.c	86;"	d	file:
SizeOfBlock	magick/memory.c	87;"	d	file:
SkeletonKernel	magick/morphology.h	/^  SkeletonKernel,$/;"	e	enum:__anon69
SketchImage	magick/fx.c	/^MagickExport Image *SketchImage(const Image *image,const double radius,$/;"	f
SketchImage	magick/methods.h	1141;"	d
SkipList	magick/statistic.c	/^} SkipList;$/;"	t	typeref:struct:_SkipList	file:
SlideShowCommand	magick/display.c	/^  SlideShowCommand,$/;"	e	enum:__anon20	file:
SlowerCommand	magick/animate.c	/^  SlowerCommand,$/;"	e	enum:__anon85	file:
SmallHashmapSize	magick/hashmap.h	25;"	d
SmoothMorphology	magick/morphology.h	/^  SmoothMorphology,             \/* Open then Close *\/$/;"	e	enum:__anon70
SmushImageTag	magick/image.c	3204;"	d	file:
SmushImages	magick/image.c	/^MagickExport Image *SmushImages(const Image *images,$/;"	f
SmushXGap	magick/image.c	/^static ssize_t SmushXGap(const Image *smush_image,const Image *images,$/;"	f	file:
SmushYGap	magick/image.c	/^static ssize_t SmushYGap(const Image *smush_image,const Image *images,$/;"	f	file:
SobelKernel	magick/morphology.h	/^  SobelKernel,$/;"	e	enum:__anon69
SoftLight	magick/composite.c	/^static MagickRealType SoftLight(const MagickRealType Sca,$/;"	f	file:
SoftLightCompositeOp	magick/composite.h	/^  SoftLightCompositeOp,$/;"	e	enum:__anon68
SolarizeCommand	magick/display.c	/^  SolarizeCommand,$/;"	e	enum:__anon20	file:
SolarizeImage	magick/fx.c	/^MagickExport MagickBooleanType SolarizeImage(Image *image,$/;"	f
SolarizeImage	magick/methods.h	1142;"	d
SolarizeImageChannel	magick/fx.c	/^MagickExport MagickBooleanType SolarizeImageChannel(Image *image,$/;"	f
SolarizeImageTag	magick/fx.c	4573;"	d	file:
SolarizePreview	magick/effect.h	/^  SolarizePreview,$/;"	e	enum:__anon56
SortColormapByIntensity	magick/colormap.c	/^MagickExport MagickBooleanType SortColormapByIntensity(Image *image)$/;"	f
SortColormapByIntensity	magick/methods.h	1143;"	d
SouthEastGravity	magick/geometry.h	/^  SouthEastGravity = 9,$/;"	e	enum:__anon15
SouthEastGravity	magick/geometry.h	73;"	d
SouthGravity	magick/geometry.h	/^  SouthGravity = 8,$/;"	e	enum:__anon15
SouthGravity	magick/geometry.h	72;"	d
SouthWestGravity	magick/geometry.h	/^  SouthWestGravity = 7,$/;"	e	enum:__anon15
SouthWestGravity	magick/geometry.h	71;"	d
SparseColorImage	magick/distort.c	/^MagickExport Image *SparseColorImage(const Image *image,$/;"	f
SparseColorImage	magick/methods.h	1144;"	d
SparseColorMethod	magick/distort.h	/^} SparseColorMethod;$/;"	t	typeref:enum:__anon51
SparseColorOption	wand/mogrify.c	/^static Image *SparseColorOption(const Image *image,const ChannelType channel,$/;"	f	file:
SparseColorOptions	magick/option.c	/^  SparseColorOptions[] =$/;"	v	file:
SparseColorTag	magick/distort.c	2913;"	d	file:
SpecialOperatorOptionFlag	magick/option.h	/^  SpecialOperatorOptionFlag = 0x0400,  \/* Specially handled Operator Option *\/$/;"	e	enum:__anon88
SpiffCommand	magick/display.c	/^  SpiffCommand,$/;"	e	enum:__anon20	file:
SpiffPreview	magick/effect.h	/^  SpiffPreview,$/;"	e	enum:__anon56
Splay	magick/splay-tree.c	/^static inline NodeInfo *Splay(SplayTreeInfo *splay_tree,const size_t depth,$/;"	f	file:
SplaySplayTree	magick/splay-tree.c	/^static void SplaySplayTree(SplayTreeInfo *splay_tree,const void *key)$/;"	f	file:
SplayTreeInfo	magick/splay-tree.h	/^  SplayTreeInfo;$/;"	t	typeref:struct:_SplayTreeInfo
SplayTreeToNodeArray	magick/splay-tree.c	/^static inline int SplayTreeToNodeArray(NodeInfo *node,const void *nodes)$/;"	f	file:
SpliceImage	magick/methods.h	1147;"	d
SpliceImage	magick/transform.c	/^MagickExport Image *SpliceImage(const Image *image,$/;"	f
SpliceImageIntoList	magick/list.c	/^MagickExport Image *SpliceImageIntoList(Image **images,$/;"	f
SpliceImageIntoList	magick/methods.h	1145;"	d
SpliceImageList	magick/deprecate.c	/^MagickExport Image *SpliceImageList(Image *images,const ssize_t offset,$/;"	f
SpliceImageList	magick/methods.h	1146;"	d
SpliceImageTag	magick/transform.c	1725;"	d	file:
SplineFilter	magick/resample.h	/^  SplineFilter,$/;"	e	enum:__anon76
SplineInterpolatePixel	magick/pixel.h	/^  SplineInterpolatePixel,            \/* Cubic Spline (blurred) interpolation *\/$/;"	e	enum:__anon52
SplineWeights	magick/pixel.c	/^static inline void SplineWeights(const MagickRealType x,$/;"	f	file:
SplitImageList	magick/list.c	/^MagickExport Image *SplitImageList(Image *images)$/;"	f
SplitImageList	magick/methods.h	1148;"	d
SplitStringInfo	magick/methods.h	1149;"	d
SplitStringInfo	magick/string.c	/^MagickExport StringInfo *SplitStringInfo(StringInfo *string_info,$/;"	f
SpreadCommand	magick/display.c	/^  SpreadCommand,$/;"	e	enum:__anon20	file:
SpreadImage	magick/effect.c	/^MagickExport Image *SpreadImage(const Image *image,const double radius,$/;"	f
SpreadImage	magick/methods.h	1150;"	d
SpreadImageTag	magick/effect.c	3874;"	d	file:
SpreadMethod	magick/draw.h	/^} SpreadMethod;$/;"	t	typeref:enum:__anon45
SpreadPreview	magick/effect.h	/^  SpreadPreview,$/;"	e	enum:__anon56
SquareCap	magick/draw.h	/^  SquareCap$/;"	e	enum:__anon40
SquareKernel	magick/morphology.h	/^  SquareKernel,$/;"	e	enum:__anon69
SrcAtopCompositeOp	magick/composite.h	/^  SrcAtopCompositeOp,$/;"	e	enum:__anon68
SrcCompositeOp	magick/composite.h	/^  SrcCompositeOp,$/;"	e	enum:__anon68
SrcInCompositeOp	magick/composite.h	/^  SrcInCompositeOp,$/;"	e	enum:__anon68
SrcOutCompositeOp	magick/composite.h	/^  SrcOutCompositeOp,$/;"	e	enum:__anon68
SrcOverCompositeOp	magick/composite.h	/^  SrcOverCompositeOp,$/;"	e	enum:__anon68
Stability	magick/segment.c	/^static void Stability(IntervalTree *node)$/;"	f	file:
StandardDeviationStatistic	magick/statistic.h	/^  StandardDeviationStatistic$/;"	e	enum:__anon91
StandardStream	magick/blob-private.h	/^  StandardStream,$/;"	e	enum:__anon74
StartTimer	magick/methods.h	1151;"	d
StartTimer	magick/timer.c	/^MagickExport void StartTimer(TimerInfo *time_info,const MagickBooleanType reset)$/;"	f
StaticGravity	magick/geometry.h	/^  StaticGravity = 10 $/;"	e	enum:__anon15
StaticGravity	magick/geometry.h	74;"	d
StatisticImage	magick/statistic.c	/^MagickExport Image *StatisticImage(const Image *image,const StatisticType type,$/;"	f
StatisticImageChannel	magick/statistic.c	/^MagickExport Image *StatisticImageChannel(const Image *image,$/;"	f
StatisticImageTag	magick/statistic.c	3253;"	d	file:
StatisticOptions	magick/option.c	/^  StatisticOptions[] =$/;"	v	file:
StatisticType	magick/statistic.h	/^} StatisticType;$/;"	t	typeref:enum:__anon91
StatisticsFormat	magick/identify.c	447;"	d	file:
StderrHandler	magick/log.c	/^  StderrHandler = 0x0004,$/;"	e	enum:__anon57	file:
StdoutHandler	magick/log.c	/^  StdoutHandler = 0x0002,$/;"	e	enum:__anon57	file:
SteganoImage	magick/fx.c	/^MagickExport Image *SteganoImage(const Image *image,const Image *watermark,$/;"	f
SteganoImage	magick/methods.h	1152;"	d
SteganoImageTag	magick/fx.c	4708;"	d	file:
StepAnimationState	magick/animate.c	84;"	d	file:
StepBackwardCommand	magick/animate.c	/^  StepBackwardCommand,$/;"	e	enum:__anon85	file:
StepCommand	magick/animate.c	/^  StepCommand,$/;"	e	enum:__anon85	file:
StepForwardCommand	magick/animate.c	/^  StepForwardCommand,$/;"	e	enum:__anon85	file:
StereoAnaglyphImage	magick/fx.c	/^MagickExport Image *StereoAnaglyphImage(const Image *left_image,$/;"	f
StereoAnaglyphImage	magick/methods.h	1153;"	d
StereoImage	magick/fx.c	/^MagickExport Image *StereoImage(const Image *left_image,$/;"	f
StereoImage	magick/methods.h	1154;"	d
StereoImageTag	magick/fx.c	4891;"	d	file:
StopInfo	magick/draw.h	/^} StopInfo;$/;"	t	typeref:struct:_StopInfo
StopTimer	magick/timer.c	/^static void StopTimer(TimerInfo *time_info)$/;"	f	file:
StoppedTimerState	magick/timer.h	/^  StoppedTimerState,$/;"	e	enum:__anon75
StorageOptions	magick/option.c	/^  StorageOptions[] =$/;"	v	file:
StorageType	magick/constitute.h	/^} StorageType;$/;"	t	typeref:enum:__anon64
StoreToken	magick/token.c	/^static void StoreToken(TokenInfo *token_info,char *string,$/;"	f	file:
StreamError	magick/exception.h	/^  StreamError = 440,$/;"	e	enum:__anon84
StreamFatalError	magick/exception.h	/^  StreamFatalError = 740,$/;"	e	enum:__anon84
StreamHandler	magick/stream.h	/^  (*StreamHandler)(const Image *,const void *,const size_t);$/;"	t
StreamImage	magick/methods.h	1155;"	d
StreamImage	magick/stream.c	/^MagickExport Image *StreamImage(const ImageInfo *image_info,$/;"	f
StreamImagePixels	magick/stream.c	/^static MagickBooleanType StreamImagePixels(const StreamInfo *stream_info,$/;"	f	file:
StreamInfo	magick/stream-private.h	/^  StreamInfo;$/;"	t	typeref:struct:_StreamInfo
StreamTransmitType	magick/image.h	/^  StreamTransmitType,$/;"	e	enum:__anon82
StreamType	magick/blob-private.h	/^} StreamType;$/;"	t	typeref:enum:__anon74
StreamValidate	magick/option.h	/^  StreamValidate = 0x00400,$/;"	e	enum:__anon87
StreamWarning	magick/exception.h	/^  StreamWarning = 340,$/;"	e	enum:__anon84
StretchOptions	magick/option.c	/^  StretchOptions[] =$/;"	v	file:
StretchType	magick/type.h	/^} StretchType;$/;"	t	typeref:enum:__anon24
StringData	magick/mime-private.h	/^  StringData,$/;"	e	enum:__anon16
StringInfo	magick/string_.h	/^} StringInfo;$/;"	t	typeref:struct:_StringInfo
StringInfoToHexString	magick/methods.h	1156;"	d
StringInfoToHexString	magick/string.c	/^MagickExport char *StringInfoToHexString(const StringInfo *string_info)$/;"	f
StringInfoToString	magick/methods.h	1157;"	d
StringInfoToString	magick/string.c	/^MagickExport char *StringInfoToString(const StringInfo *string_info)$/;"	f
StringRegistryType	magick/registry.h	/^  StringRegistryType$/;"	e	enum:__anon32
StringToArgv	magick/methods.h	1158;"	d
StringToArgv	magick/string.c	/^MagickExport char **StringToArgv(const char *text,int *argc)$/;"	f
StringToArrayOfDoubles	magick/string.c	/^MagickExport double *StringToArrayOfDoubles(const char *string,ssize_t *count,$/;"	f
StringToDouble	magick/string-private.h	/^static inline double StringToDouble(const char *restrict string,$/;"	f
StringToDoubleInterval	magick/string-private.h	/^static inline double StringToDoubleInterval(const char *string,$/;"	f
StringToInteger	magick/string-private.h	/^static inline int StringToInteger(const char *restrict value)$/;"	f
StringToList	magick/methods.h	1160;"	d
StringToList	magick/string.c	/^MagickExport char **StringToList(const char *text)$/;"	f
StringToLong	magick/string-private.h	/^static inline long StringToLong(const char *restrict value)$/;"	f
StringToSizeType	magick/resource.c	/^static inline MagickSizeType StringToSizeType(const char *string,$/;"	f	file:
StringToStringInfo	magick/methods.h	1161;"	d
StringToStringInfo	magick/string.c	/^MagickExport StringInfo *StringToStringInfo(const char *string)$/;"	f
StringToUnsignedLong	magick/string-private.h	/^static inline unsigned long StringToUnsignedLong(const char *restrict value)$/;"	f
StringToken	magick/methods.h	1159;"	d
StringToken	magick/string.c	/^MagickExport char *StringToken(const char *delimiters,char **string)$/;"	f
Strip	magick/deprecate.c	/^MagickExport void Strip(char *message)$/;"	f
Strip	magick/methods.h	1163;"	d
StripImage	magick/image.c	/^MagickExport MagickBooleanType StripImage(Image *image)$/;"	f
StripImage	magick/methods.h	1162;"	d
StripString	magick/methods.h	1164;"	d
StripString	magick/string.c	/^MagickExport void StripString(char *message)$/;"	f
StyleOptions	magick/option.c	/^  StyleOptions[] =$/;"	v	file:
StyleType	magick/type.h	/^} StyleType;$/;"	t	typeref:enum:__anon25
SubimagePath	magick/utility.h	/^  SubimagePath,$/;"	e	enum:__anon31
SubstituteString	magick/methods.h	1165;"	d
SubstituteString	magick/string.c	/^MagickExport MagickBooleanType SubstituteString(char **string,$/;"	f
SubtractComplexOperator	magick/fourier.h	/^  SubtractComplexOperator$/;"	e	enum:__anon2
SubtractCompositeOp	magick/composite.h	105;"	d
SubtractEvaluateOperator	magick/statistic.h	/^  SubtractEvaluateOperator,$/;"	e	enum:__anon89
SumEvaluateOperator	magick/statistic.h	/^  SumEvaluateOperator$/;"	e	enum:__anon89
Suma0	magick/signature.c	614;"	d	file:
Suma1	magick/signature.c	615;"	d	file:
SuspendTime	magick/xwindow-private.h	/^  SuspendTime = 50,$/;"	e	enum:__anon29
Swap	magick/studio.h	365;"	d
SwirlCommand	magick/display.c	/^  SwirlCommand,$/;"	e	enum:__anon20	file:
SwirlImage	magick/fx.c	/^MagickExport Image *SwirlImage(const Image *image,double degrees,$/;"	f
SwirlImage	magick/methods.h	1166;"	d
SwirlImageTag	magick/fx.c	5016;"	d	file:
SwirlPreview	magick/effect.h	/^  SwirlPreview,$/;"	e	enum:__anon56
Sync8BimProfile	magick/profile.c	/^static MagickBooleanType Sync8BimProfile(Image *image,StringInfo *profile)$/;"	f	file:
SyncAuthenticPixelCacheNexus	magick/cache.c	/^MagickExport MagickBooleanType SyncAuthenticPixelCacheNexus(Image *image,$/;"	f
SyncAuthenticPixelCacheNexus	magick/methods.h	1167;"	d
SyncAuthenticPixels	magick/cache.c	/^MagickExport MagickBooleanType SyncAuthenticPixels(Image *image,$/;"	f
SyncAuthenticPixels	magick/methods.h	1168;"	d
SyncAuthenticPixelsCache	magick/cache.c	/^static MagickBooleanType SyncAuthenticPixelsCache(Image *image,$/;"	f	file:
SyncAuthenticPixelsHandler	magick/cache-private.h	/^  (*SyncAuthenticPixelsHandler)(Image *,ExceptionInfo *);$/;"	t
SyncAuthenticPixelsStream	magick/stream.c	/^static MagickBooleanType SyncAuthenticPixelsStream(Image *image,$/;"	f	file:
SyncBlob	magick/blob.c	/^static int SyncBlob(Image *image)$/;"	f	file:
SyncCacheView	magick/deprecate.c	/^MagickExport MagickBooleanType SyncCacheView(CacheView *cache_view)$/;"	f
SyncCacheView	magick/methods.h	1171;"	d
SyncCacheViewAuthenticPixels	magick/cache-view.c	/^MagickExport MagickBooleanType SyncCacheViewAuthenticPixels($/;"	f
SyncCacheViewAuthenticPixels	magick/methods.h	1169;"	d
SyncCacheViewPixels	magick/deprecate.c	/^MagickExport MagickBooleanType SyncCacheViewPixels(CacheView *cache_view)$/;"	f
SyncCacheViewPixels	magick/methods.h	1170;"	d
SyncChannels	magick/magick-type.h	/^  SyncChannels = 0x0100,     \/* channels should be modified equally *\/$/;"	e	enum:__anon9
SyncExifProfile	magick/profile.c	/^static MagickBooleanType SyncExifProfile(Image *image, StringInfo *profile)$/;"	f	file:
SyncImage	magick/image.c	/^MagickExport MagickBooleanType SyncImage(Image *image)$/;"	f
SyncImage	magick/methods.h	1174;"	d
SyncImageList	magick/list.c	/^MagickExport void SyncImageList(Image *images)$/;"	f
SyncImageList	magick/methods.h	1172;"	d
SyncImagePixelCache	magick/cache.c	/^MagickPrivate MagickBooleanType SyncImagePixelCache(Image *image,$/;"	f
SyncImagePixels	magick/deprecate.c	/^MagickExport MagickBooleanType SyncImagePixels(Image *image)$/;"	f
SyncImagePixels	magick/methods.h	1173;"	d
SyncImageProfiles	magick/methods.h	1175;"	d
SyncImageProfiles	magick/profile.c	/^MagickExport MagickBooleanType SyncImageProfiles(Image *image)$/;"	f
SyncImageSettings	magick/image.c	/^MagickExport MagickBooleanType SyncImageSettings(const ImageInfo *image_info,$/;"	f
SyncImageSettings	magick/methods.h	1176;"	d
SyncImagesSettings	magick/image.c	/^MagickExport MagickBooleanType SyncImagesSettings(ImageInfo *image_info,$/;"	f
SyncImagesSettings	magick/methods.h	1177;"	d
SyncNextImageInList	magick/list.c	/^MagickExport Image *SyncNextImageInList(const Image *images)$/;"	f
SyncNextImageInList	magick/methods.h	1178;"	d
SystemCommand	magick/methods.h	1179;"	d
SystemCommand	magick/utility.c	/^MagickExport int SystemCommand(const MagickBooleanType asynchronous,$/;"	f
SystemPolicyDomain	magick/policy.h	/^  SystemPolicyDomain$/;"	e	enum:__anon46
TAG_EXIF_OFFSET	magick/profile.c	1691;"	d	file:
TAG_EXIF_OFFSET	magick/property.c	745;"	d	file:
TAG_GPS_OFFSET	magick/property.c	746;"	d	file:
TAG_INTEROP_OFFSET	magick/profile.c	1692;"	d	file:
TAG_INTEROP_OFFSET	magick/property.c	747;"	d	file:
TBId	magick/compress.c	96;"	d	file:
TBTable	magick/compress.c	/^  TBTable[]=$/;"	v	file:
TGAColormap	coders/tga.c	102;"	d	file:
TGAMonochrome	coders/tga.c	104;"	d	file:
TGARGB	coders/tga.c	103;"	d	file:
TGARLEColormap	coders/tga.c	105;"	d	file:
TGARLEMonochrome	coders/tga.c	107;"	d	file:
TGARLERGB	coders/tga.c	106;"	d	file:
TMP_MAX	magick/resource.c	455;"	d	file:
TRUECOLOR	image_validator/ImageValidator.c	/^    enum { NODATA = 0, COLORMAP, TRUECOLOR, GRAYSCALE } datatypecode;$/;"	e	enum:__anon98::__anon99	file:
TWId	magick/compress.c	94;"	d	file:
TWTable	magick/compress.c	/^  TWTable[]=$/;"	v	file:
TagToCoderModuleName	magick/module.c	/^static void TagToCoderModuleName(const char *tag,char *name)$/;"	f	file:
TagToFilterModuleName	magick/module.c	/^static void TagToFilterModuleName(const char *tag,char *name)$/;"	f	file:
TagToModuleName	magick/module.c	/^static void TagToModuleName(const char *tag,const char *format,char *module)$/;"	f	file:
TailPath	magick/utility.h	/^  TailPath,$/;"	e	enum:__anon31
TargaColormap	coders/tga.c	636;"	d	file:
TargaImage	image_validator/ImageValidator.c	/^} TargaImage;$/;"	t	typeref:struct:__anon98	file:
TargaMonochrome	coders/tga.c	638;"	d	file:
TargaRGB	coders/tga.c	637;"	d	file:
TargaRLEColormap	coders/tga.c	639;"	d	file:
TargaRLEMonochrome	coders/tga.c	641;"	d	file:
TargaRLERGB	coders/tga.c	640;"	d	file:
Tau	magick/segment.c	118;"	d	file:
TauGaussian	magick/gem.c	1512;"	d	file:
TellBlob	magick/blob.c	/^MagickExport MagickOffsetType TellBlob(const Image *image)$/;"	f
TellBlob	magick/methods.h	1180;"	d
TemporaryFilename	magick/deprecate.c	/^MagickExport void TemporaryFilename(char *path)$/;"	f
TemporaryFilename	magick/methods.h	1181;"	d
TextApplyCommand	magick/display.c	/^  TextApplyCommand,$/;"	e	enum:__anon21	file:
TextElement	magick/xwindow-private.h	/^  TextElement,$/;"	e	enum:__anon27
TextHelpCommand	magick/display.c	/^  TextHelpCommand,$/;"	e	enum:__anon21	file:
TextPrimitive	magick/draw.h	/^  TextPrimitive,$/;"	e	enum:__anon43
TextureImage	magick/composite.c	/^MagickExport MagickBooleanType TextureImage(Image *image,const Image *texture)$/;"	f
TextureImage	magick/methods.h	1182;"	d
TextureImageTag	magick/composite.c	2919;"	d	file:
ThickenMorphology	magick/morphology.h	/^  ThickenMorphology,            \/* Add matching pixels from image *\/$/;"	e	enum:__anon70
ThinSEKernel	magick/morphology.h	/^  ThinSEKernel,$/;"	e	enum:__anon69
ThinningMorphology	magick/morphology.h	/^  ThinningMorphology,           \/* Remove matching pixels from image *\/$/;"	e	enum:__anon70
ThreadResource	magick/resource_.h	/^  ThreadResource,$/;"	e	enum:__anon65
Threshold	magick/composite.c	/^static inline MagickRealType Threshold(const MagickRealType p,$/;"	f	file:
ThresholdBlackEvaluateOperator	magick/statistic.h	/^  ThresholdBlackEvaluateOperator,$/;"	e	enum:__anon89
ThresholdCommand	magick/display.c	/^  ThresholdCommand,$/;"	e	enum:__anon20	file:
ThresholdCompositeOp	magick/composite.h	/^  ThresholdCompositeOp,$/;"	e	enum:__anon68
ThresholdEvaluateOperator	magick/statistic.h	/^  ThresholdEvaluateOperator,$/;"	e	enum:__anon89
ThresholdImage	magick/deprecate.c	/^MagickExport unsigned int ThresholdImage(Image *image,const double threshold)$/;"	f
ThresholdImage	magick/methods.h	1184;"	d
ThresholdImageChannel	magick/deprecate.c	/^MagickExport unsigned int ThresholdImageChannel(Image *image,$/;"	f
ThresholdImageChannel	magick/methods.h	1183;"	d
ThresholdImageTag	magick/deprecate.c	7082;"	d	file:
ThresholdImageTag	magick/deprecate.c	7159;"	d	file:
ThresholdImageTag	magick/threshold.c	172;"	d	file:
ThresholdImageTag	magick/threshold.c	1890;"	d	file:
ThresholdImageTag	magick/threshold.c	2225;"	d	file:
ThresholdImageTag	magick/threshold.c	421;"	d	file:
ThresholdImageTag	magick/threshold.c	582;"	d	file:
ThresholdMap	magick/threshold.h	/^  ThresholdMap;$/;"	t	typeref:struct:_ThresholdMap
ThresholdPreview	magick/effect.h	/^  ThresholdPreview,$/;"	e	enum:__anon56
ThresholdWhiteEvaluateOperator	magick/statistic.h	/^  ThresholdWhiteEvaluateOperator,$/;"	e	enum:__anon89
ThresholdsFilename	magick/threshold.c	91;"	d	file:
ThrottleResource	magick/resource_.h	/^  ThrottleResource$/;"	e	enum:__anon65
ThrowBinaryException	magick/exception-private.h	29;"	d
ThrowConvertException	wand/convert.c	500;"	d	file:
ThrowConvertInvalidArgumentException	wand/convert.c	507;"	d	file:
ThrowDrawException	wand/drawing-wand.c	62;"	d	file:
ThrowException	magick/exception.c	/^MagickExport MagickBooleanType ThrowException(ExceptionInfo *exception,$/;"	f
ThrowException	magick/methods.h	1185;"	d
ThrowFatalException	magick/exception-private.h	36;"	d
ThrowFileException	magick/exception-private.h	54;"	d
ThrowFileException	wand/convert.c	54;"	d	file:
ThrowImageException	magick/exception-private.h	64;"	d
ThrowMagickException	magick/exception.c	/^MagickExport MagickBooleanType ThrowMagickException(ExceptionInfo *exception,$/;"	f
ThrowMagickException	magick/methods.h	1187;"	d
ThrowMagickExceptionList	magick/exception.c	/^MagickExport MagickBooleanType ThrowMagickExceptionList($/;"	f
ThrowMagickExceptionList	magick/methods.h	1186;"	d
ThrowMogrifyException	wand/mogrify.c	3724;"	d	file:
ThrowMogrifyInvalidArgumentException	wand/mogrify.c	3731;"	d	file:
ThrowProfileException	magick/profile.c	477;"	d	file:
ThrowReaderException	magick/exception-private.h	70;"	d
ThrowWandException	wand/magick-wand-private.h	30;"	d
ThrowWandFatalException	wand/magick-wand-private.h	36;"	d
ThrowWriterException	magick/exception-private.h	81;"	d
ThrowXWindowException	magick/xwindow-private.h	76;"	d
ThrowXWindowFatalException	magick/xwindow-private.h	88;"	d
ThumbnailImage	magick/methods.h	1188;"	d
ThumbnailImage	magick/resize.c	/^MagickExport Image *ThumbnailImage(const Image *image,const size_t columns,$/;"	f
TileDeleteCommand	magick/display.c	/^  TileDeleteCommand,$/;"	e	enum:__anon21	file:
TileFormerCommand	magick/display.c	/^  TileFormerCommand,$/;"	e	enum:__anon21	file:
TileImageTag	magick/display.c	13473;"	d	file:
TileImageTag	magick/montage.c	340;"	d	file:
TileLoadCommand	magick/display.c	/^  TileLoadCommand,$/;"	e	enum:__anon21	file:
TileNextCommand	magick/display.c	/^  TileNextCommand,$/;"	e	enum:__anon21	file:
TileUpdateCommand	magick/display.c	/^  TileUpdateCommand$/;"	e	enum:__anon21	file:
TileVirtualPixelMethod	magick/cache-view.h	/^  TileVirtualPixelMethod,$/;"	e	enum:__anon63
TimeResource	magick/resource_.h	/^  TimeResource,$/;"	e	enum:__anon65
Timer	magick/timer.h	/^} Timer;$/;"	t	typeref:struct:_Timer
TimerInfo	magick/timer.h	/^} TimerInfo;$/;"	t	typeref:struct:_TimerInfo
TimerState	magick/timer.h	/^} TimerState;$/;"	t	typeref:enum:__anon75
TintImage	magick/fx.c	/^MagickExport Image *TintImage(const Image *image,const char *opacity,$/;"	f
TintImage	magick/methods.h	1189;"	d
TintImageTag	magick/fx.c	5206;"	d	file:
TokenInfo	magick/token.h	/^  TokenInfo;$/;"	t	typeref:struct:_TokenInfo
Tokenizer	magick/methods.h	1190;"	d
Tokenizer	magick/token.c	/^MagickExport int Tokenizer(TokenInfo *token_info,const unsigned flag,$/;"	f
TopHatMorphology	magick/morphology.h	/^  TopHatMorphology,             \/* Close difference from Original *\/$/;"	e	enum:__anon70
TopLeftOrientation	magick/image.h	/^  TopLeftOrientation,$/;"	e	enum:__anon80
TopRightOrientation	magick/image.h	/^  TopRightOrientation,$/;"	e	enum:__anon80
TraceArc	magick/draw.c	/^static void TraceArc(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceArcPath	magick/draw.c	/^static void TraceArcPath(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceBezier	magick/draw.c	/^static void TraceBezier(PrimitiveInfo *primitive_info,$/;"	f	file:
TraceCircle	magick/draw.c	/^static void TraceCircle(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceCubicBezier	magick/annotate.c	/^static int TraceCubicBezier(FT_Vector *p,FT_Vector *q,FT_Vector *to,$/;"	f	file:
TraceEdges	magick/feature.c	/^static MagickBooleanType TraceEdges(Image *edge_image,CacheView *edge_view,$/;"	f	file:
TraceEllipse	magick/draw.c	/^static void TraceEllipse(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceEvent	magick/log.h	/^  TraceEvent = 0x00001,$/;"	e	enum:__anon93
TraceLine	magick/draw.c	/^static void TraceLine(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceLineTo	magick/annotate.c	/^static int TraceLineTo(FT_Vector *to,DrawInfo *draw_info)$/;"	f	file:
TraceMoveTo	magick/annotate.c	/^static int TraceMoveTo(FT_Vector *to,DrawInfo *draw_info)$/;"	f	file:
TracePSClippath	magick/property.c	/^static char *TracePSClippath(const unsigned char *blob,size_t length,$/;"	f	file:
TracePath	magick/draw.c	/^static size_t TracePath(PrimitiveInfo *primitive_info,const char *path)$/;"	f	file:
TracePoint	magick/draw.c	/^static inline void TracePoint(PrimitiveInfo *primitive_info,$/;"	f	file:
TraceQuadraticBezier	magick/annotate.c	/^static int TraceQuadraticBezier(FT_Vector *control,FT_Vector *to,$/;"	f	file:
TraceRectangle	magick/draw.c	/^static void TraceRectangle(PrimitiveInfo *primitive_info,const PointInfo start,$/;"	f	file:
TraceRoundRectangle	magick/draw.c	/^static void TraceRoundRectangle(PrimitiveInfo *primitive_info,$/;"	f	file:
TraceSVGClippath	magick/property.c	/^static char *TraceSVGClippath(const unsigned char *blob,size_t length,$/;"	f	file:
TraceSquareLinecap	magick/draw.c	/^static void TraceSquareLinecap(PrimitiveInfo *primitive_info,$/;"	f	file:
TraceStrokePolygon	magick/draw.c	/^static PrimitiveInfo *TraceStrokePolygon(const DrawInfo *draw_info,$/;"	f	file:
TransferImageViewMethod	magick/image-view.h	/^  (*TransferImageViewMethod)(const ImageView *,ImageView *,const ssize_t,$/;"	t
TransferPixelViewMethod	wand/deprecate.h	/^  (*TransferPixelViewMethod)(const PixelView *,PixelView *,void *),$/;"	t
TransferWandViewMethod	wand/wand-view.h	/^  (*TransferWandViewMethod)(const WandView *,WandView *,const ssize_t,$/;"	t
TransformColorspace	magick/deprecate.c	/^MagickExport unsigned int TransformColorspace(Image *image,$/;"	f
TransformColorspace	magick/methods.h	1191;"	d
TransformEvent	magick/log.h	/^  TransformEvent = 0x04000,$/;"	e	enum:__anon93
TransformHSL	magick/deprecate.c	/^MagickExport void TransformHSL(const Quantum red,const Quantum green,$/;"	f
TransformHSL	magick/methods.h	1192;"	d
TransformImage	magick/methods.h	1194;"	d
TransformImage	magick/transform.c	/^MagickExport MagickBooleanType TransformImage(Image **image,$/;"	f
TransformImageColorspace	magick/colorspace.c	/^MagickExport MagickBooleanType TransformImageColorspace(Image *image,$/;"	f
TransformImageColorspace	magick/methods.h	1193;"	d
TransformImages	magick/methods.h	1195;"	d
TransformImages	magick/transform.c	/^MagickExport MagickBooleanType TransformImages(Image **images,$/;"	f
TransformPacket	magick/colorspace.c	/^} TransformPacket;$/;"	t	typeref:struct:_TransformPacket	file:
TransformRGBImage	magick/colorspace.c	/^MagickExport MagickBooleanType TransformRGBImage(Image *image,$/;"	f
TransformRGBImage	magick/methods.h	1196;"	d
TransformRGBImageTag	magick/colorspace.c	1375;"	d	file:
TransformSignature	magick/signature.c	/^static void TransformSignature(SignatureInfo *signature_info)$/;"	f	file:
TranslateFilename	magick/log.c	/^static char *TranslateFilename(const LogInfo *log_info)$/;"	f	file:
TranslateText	magick/deprecate.c	/^MagickExport char *TranslateText(const ImageInfo *image_info,Image *image,$/;"	f
TranslateText	magick/methods.h	1197;"	d
TransmitType	magick/image.h	/^} TransmitType;$/;"	t	typeref:enum:__anon82
TransparentAlphaChannel	magick/image.h	/^  TransparentAlphaChannel,$/;"	e	enum:__anon77
TransparentColor	magick/image.c	/^  TransparentColor[] = "#00000000";  \/* transparent black *\/$/;"	v
TransparentColorspace	magick/colorspace.h	/^  TransparentColorspace,$/;"	e	enum:__anon55
TransparentImage	magick/deprecate.c	/^MagickExport MagickBooleanType TransparentImage(Image *image,$/;"	f
TransparentImage	magick/methods.h	1198;"	d
TransparentImageTag	magick/deprecate.c	7460;"	d	file:
TransparentOpacity	magick/image.h	28;"	d
TransparentPaintImage	magick/methods.h	1200;"	d
TransparentPaintImage	magick/paint.c	/^MagickExport MagickBooleanType TransparentPaintImage(Image *image,$/;"	f
TransparentPaintImageChroma	magick/methods.h	1199;"	d
TransparentPaintImageChroma	magick/paint.c	/^MagickExport MagickBooleanType TransparentPaintImageChroma(Image *image,$/;"	f
TransparentPaintImageTag	magick/paint.c	1072;"	d	file:
TransparentPaintImageTag	magick/paint.c	936;"	d	file:
TransparentStencil	magick/xwindow-private.h	/^  TransparentStencil$/;"	e	enum:__anon26
TransparentVirtualPixelMethod	magick/cache-view.h	/^  TransparentVirtualPixelMethod,$/;"	e	enum:__anon63
TransposeImage	magick/methods.h	1201;"	d
TransposeImage	magick/transform.c	/^MagickExport Image *TransposeImage(const Image *image,ExceptionInfo *exception)$/;"	f
TransposeImageTag	magick/transform.c	2191;"	d	file:
TransverseImage	magick/methods.h	1202;"	d
TransverseImage	magick/transform.c	/^MagickExport Image *TransverseImage(const Image *image,ExceptionInfo *exception)$/;"	f
TransverseImageTag	magick/transform.c	2320;"	d	file:
TreeLength	magick/segment.c	/^  TreeLength = 600;$/;"	v	file:
Triangle	magick/resize.c	/^static MagickRealType Triangle(const MagickRealType x,$/;"	f	file:
TriangleFilter	magick/resample.h	/^  TriangleFilter,$/;"	e	enum:__anon76
TriangleWeightingFunction	magick/resize-private.h	/^  TriangleWeightingFunction,$/;"	e	enum:__anon30
TrimBoundsLayer	magick/layer.h	/^  TrimBoundsLayer$/;"	e	enum:__anon72
TrimCommand	magick/display.c	/^  TrimCommand,$/;"	e	enum:__anon20	file:
TrimImage	magick/methods.h	1203;"	d
TrimImage	magick/transform.c	/^MagickExport Image *TrimImage(const Image *image,ExceptionInfo *exception)$/;"	f
TroughFactor	magick/decorate.c	693;"	d	file:
TroughModulate	magick/decorate.c	70;"	d	file:
TrueAlphaChannel	magick/magick-type.h	/^  TrueAlphaChannel = 0x0040, \/* extract actual alpha channel from opacity *\/$/;"	e	enum:__anon9
TrueColorMatteType	magick/image.h	/^  TrueColorMatteType,$/;"	e	enum:__anon78
TrueColorType	magick/image.h	/^  TrueColorType,$/;"	e	enum:__anon78
Trunc32	magick/signature.c	/^static inline unsigned int Trunc32(unsigned int x)$/;"	f	file:
TypeCompare	magick/type.c	/^static int TypeCompare(const void *x,const void *y)$/;"	f	file:
TypeComponentGenesis	magick/methods.h	1204;"	d
TypeComponentGenesis	magick/type.c	/^MagickExport MagickBooleanType TypeComponentGenesis(void)$/;"	f
TypeComponentTerminus	magick/methods.h	1205;"	d
TypeComponentTerminus	magick/type.c	/^MagickExport void TypeComponentTerminus(void)$/;"	f
TypeError	magick/exception.h	/^  TypeError = 405,$/;"	e	enum:__anon84
TypeFatalError	magick/exception.h	/^  TypeFatalError = 705,$/;"	e	enum:__anon84
TypeInfo	magick/type.h	/^} TypeInfo;$/;"	t	typeref:struct:_TypeInfo
TypeInfoCompare	magick/type.c	/^static int TypeInfoCompare(const void *x,const void *y)$/;"	f	file:
TypeMap	magick/type.c	/^  *TypeMap = (const char *)$/;"	v	file:
TypeMetric	magick/draw.h	/^} TypeMetric;$/;"	t	typeref:struct:_TypeMetric
TypeOptions	magick/option.c	/^  TypeOptions[] =$/;"	v	file:
TypeWarning	magick/exception.h	/^  TypeWarning = 305,$/;"	e	enum:__anon84
UTF8ToUTF16	magick/deprecate.c	/^static size_t UTF8ToUTF16(const unsigned char *utf8,wchar_t *utf16)$/;"	f	file:
UTFInfo	magick/token-private.h	/^} UTFInfo;$/;"	t	typeref:struct:__anon49
Ulimit	magick/resample.c	/^    Vlimit, Ulimit, Uwidth, slope;$/;"	m	struct:_ResampleFilter	file:
UltraCondensedStretch	magick/type.h	/^  UltraCondensedStretch,$/;"	e	enum:__anon24
UltraExpandedStretch	magick/type.h	/^  UltraExpandedStretch,$/;"	e	enum:__anon24
UnalignedVirtualMemory	magick/memory.c	/^  UnalignedVirtualMemory$/;"	e	enum:__anon33	file:
UndefinedAlign	magick/draw.h	/^  UndefinedAlign,$/;"	e	enum:__anon34
UndefinedAlphaChannel	magick/image.h	/^  UndefinedAlphaChannel,$/;"	e	enum:__anon77
UndefinedBlobMode	magick/blob-private.h	/^  UndefinedBlobMode,$/;"	e	enum:__anon73
UndefinedCache	magick/cache.h	/^  UndefinedCache,$/;"	e	enum:__anon8
UndefinedCap	magick/draw.h	/^  UndefinedCap,$/;"	e	enum:__anon40
UndefinedChannel	magick/magick-type.h	/^  UndefinedChannel,$/;"	e	enum:__anon9
UndefinedClass	magick/magick-type.h	/^  UndefinedClass,$/;"	e	enum:__anon10
UndefinedColorInterpolate	magick/distort.h	/^  UndefinedColorInterpolate = UndefinedDistortion,$/;"	e	enum:__anon51
UndefinedColormap	magick/xwindow-private.h	/^  UndefinedColormap,$/;"	e	enum:__anon28
UndefinedColorspace	magick/colorspace.h	/^  UndefinedColorspace,$/;"	e	enum:__anon55
UndefinedComplexOperator	magick/fourier.h	/^  UndefinedComplexOperator,$/;"	e	enum:__anon2
UndefinedCompliance	magick/color.h	/^  UndefinedCompliance,$/;"	e	enum:__anon83
UndefinedCompositeOp	magick/composite.h	/^  UndefinedCompositeOp,$/;"	e	enum:__anon68
UndefinedCompression	magick/compress.h	/^  UndefinedCompression,$/;"	e	enum:__anon13
UndefinedCompressionQuality	magick/image-private.h	34;"	d
UndefinedCompressionQuality	wand/mogrify.c	62;"	d	file:
UndefinedData	magick/mime-private.h	/^  UndefinedData,$/;"	e	enum:__anon16
UndefinedDecoration	magick/draw.h	/^  UndefinedDecoration,$/;"	e	enum:__anon36
UndefinedDirection	magick/draw.h	/^  UndefinedDirection,$/;"	e	enum:__anon37
UndefinedDispose	magick/layer.h	/^  UndefinedDispose = 0,$/;"	e	enum:__anon71
UndefinedDistortion	magick/distort.h	/^  UndefinedDistortion,$/;"	e	enum:__anon50
UndefinedDitherMethod	magick/quantize.h	/^  UndefinedDitherMethod,$/;"	e	enum:__anon66
UndefinedElement	magick/xwindow-private.h	/^  UndefinedElement,$/;"	e	enum:__anon27
UndefinedEndian	magick/quantum.h	/^  UndefinedEndian,$/;"	e	enum:__anon4
UndefinedErrorMetric	magick/compare.h	/^  UndefinedErrorMetric = 0,$/;"	e	enum:__anon92
UndefinedEvaluateOperator	magick/statistic.h	/^  UndefinedEvaluateOperator,$/;"	e	enum:__anon89
UndefinedEvents	magick/log.h	/^  UndefinedEvents,$/;"	e	enum:__anon93
UndefinedException	magick/exception.h	/^  UndefinedException,$/;"	e	enum:__anon84
UndefinedFilter	magick/resample.h	/^  UndefinedFilter,$/;"	e	enum:__anon76
UndefinedFormatType	magick/magick.h	/^  UndefinedFormatType,$/;"	e	enum:__anon58
UndefinedFunction	magick/statistic.h	/^  UndefinedFunction,$/;"	e	enum:__anon90
UndefinedGradient	magick/draw.h	/^  UndefinedGradient,$/;"	e	enum:__anon39
UndefinedGravity	magick/geometry.h	/^  UndefinedGravity,$/;"	e	enum:__anon15
UndefinedHandler	magick/log.c	/^  UndefinedHandler = 0x0000,$/;"	e	enum:__anon57	file:
UndefinedIntent	magick/profile.h	/^  UndefinedIntent,$/;"	e	enum:__anon1
UndefinedInterlace	magick/image.h	/^  UndefinedInterlace,$/;"	e	enum:__anon79
UndefinedInterpolatePixel	magick/pixel.h	/^  UndefinedInterpolatePixel,$/;"	e	enum:__anon52
UndefinedJoin	magick/draw.h	/^  UndefinedJoin,$/;"	e	enum:__anon41
UndefinedKernel	magick/morphology.h	/^  UndefinedKernel,    \/* equivalent to UnityKernel *\/$/;"	e	enum:__anon69
UndefinedLayer	magick/layer.h	/^  UndefinedLayer,$/;"	e	enum:__anon72
UndefinedMagickLayerMethod	magick/deprecate.h	/^  UndefinedMagickLayerMethod$/;"	e	enum:__anon22
UndefinedMethod	magick/draw.h	/^  UndefinedMethod,$/;"	e	enum:__anon42
UndefinedMetric	magick/compare.h	/^  UndefinedMetric,$/;"	e	enum:__anon92
UndefinedMode	magick/montage.h	/^  UndefinedMode,$/;"	e	enum:__anon3
UndefinedMorphology	magick/morphology.h	/^  UndefinedMorphology,$/;"	e	enum:__anon70
UndefinedNoise	magick/fx.h	/^  UndefinedNoise,$/;"	e	enum:__anon67
UndefinedOptionFlag	magick/option.h	/^  UndefinedOptionFlag       = 0x0000,$/;"	e	enum:__anon88
UndefinedOrientation	magick/image.h	/^  UndefinedOrientation,$/;"	e	enum:__anon80
UndefinedPath	magick/utility.h	/^  UndefinedPath,$/;"	e	enum:__anon31
UndefinedPathUnits	magick/draw.h	/^  UndefinedPathUnits,$/;"	e	enum:__anon35
UndefinedPixel	magick/constitute.h	/^  UndefinedPixel,$/;"	e	enum:__anon64
UndefinedPixelIntensityMethod	magick/pixel.h	/^  UndefinedPixelIntensityMethod = 0,$/;"	e	enum:__anon54
UndefinedPolicyDomain	magick/policy.h	/^  UndefinedPolicyDomain,$/;"	e	enum:__anon46
UndefinedPolicyRights	magick/policy.h	/^  UndefinedPolicyRights = 0x00,$/;"	e	enum:__anon47
UndefinedPreview	magick/effect.h	/^  UndefinedPreview,$/;"	e	enum:__anon56
UndefinedPrimitive	magick/draw.h	/^  UndefinedPrimitive,$/;"	e	enum:__anon43
UndefinedQuantum	magick/quantum.h	/^  UndefinedQuantum,$/;"	e	enum:__anon7
UndefinedQuantumAlpha	magick/quantum.h	/^  UndefinedQuantumAlpha,$/;"	e	enum:__anon5
UndefinedQuantumFormat	magick/quantum.h	/^  UndefinedQuantumFormat,$/;"	e	enum:__anon6
UndefinedReference	magick/draw.h	/^  UndefinedReference,$/;"	e	enum:__anon44
UndefinedRegistryType	magick/registry.h	/^  UndefinedRegistryType,$/;"	e	enum:__anon32
UndefinedResolution	magick/image.h	/^  UndefinedResolution,$/;"	e	enum:__anon81
UndefinedResource	magick/resource_.h	/^  UndefinedResource,$/;"	e	enum:__anon65
UndefinedRule	magick/draw.h	/^  UndefinedRule,$/;"	e	enum:__anon38
UndefinedSpread	magick/draw.h	/^  UndefinedSpread,$/;"	e	enum:__anon45
UndefinedStatistic	magick/statistic.h	/^  UndefinedStatistic,$/;"	e	enum:__anon91
UndefinedStream	magick/blob-private.h	/^  UndefinedStream,$/;"	e	enum:__anon74
UndefinedStretch	magick/type.h	/^  UndefinedStretch,$/;"	e	enum:__anon24
UndefinedStyle	magick/type.h	/^  UndefinedStyle,$/;"	e	enum:__anon25
UndefinedTicksPerSecond	magick/image-private.h	33;"	d
UndefinedTimerState	magick/timer.h	/^  UndefinedTimerState,$/;"	e	enum:__anon75
UndefinedTransmitType	magick/image.h	/^  UndefinedTransmitType,$/;"	e	enum:__anon82
UndefinedType	magick/image.h	/^  UndefinedType,$/;"	e	enum:__anon78
UndefinedValidate	magick/option.h	/^  UndefinedValidate,$/;"	e	enum:__anon87
UndefinedVirtualMemory	magick/memory.c	/^  UndefinedVirtualMemory,$/;"	e	enum:__anon33	file:
UndefinedVirtualPixelMethod	magick/cache-view.h	/^  UndefinedVirtualPixelMethod,$/;"	e	enum:__anon63
UnderlineDecoration	magick/draw.h	/^  UnderlineDecoration,$/;"	e	enum:__anon36
UndoCommand	magick/display.c	/^  UndoCommand,$/;"	e	enum:__anon20	file:
UnframeMode	magick/montage.h	/^  UnframeMode,$/;"	e	enum:__anon3
UniformNoise	magick/fx.h	/^  UniformNoise,$/;"	e	enum:__anon67
UniformNoiseEvaluateOperator	magick/statistic.h	/^  UniformNoiseEvaluateOperator,$/;"	e	enum:__anon89
UniqueColorsImageTag	magick/histogram.c	1237;"	d	file:
UniqueColorsToImage	magick/histogram.c	/^static void UniqueColorsToImage(Image *unique_image,CacheView *unique_view,$/;"	f	file:
UniqueImageColors	magick/histogram.c	/^MagickExport Image *UniqueImageColors(const Image *image,$/;"	f
UniqueImageColors	magick/methods.h	1206;"	d
UnityAddKernelInfo	magick/morphology.c	/^MagickExport void UnityAddKernelInfo(KernelInfo *kernel,$/;"	f
UnityKernel	magick/morphology.h	/^  UnityKernel,        \/* The no-op or 'original image' kernel *\/$/;"	e	enum:__anon69
UnlockMagickMutex	magick/semaphore-private.h	/^static inline void UnlockMagickMutex(void)$/;"	f
UnlockSemaphoreInfo	magick/methods.h	1207;"	d
UnlockSemaphoreInfo	magick/semaphore.c	/^MagickExport void UnlockSemaphoreInfo(SemaphoreInfo *semaphore_info)$/;"	f
UnmapBlob	magick/blob.c	/^MagickExport MagickBooleanType UnmapBlob(void *map,const size_t length)$/;"	f
UnmapBlob	magick/methods.h	1208;"	d
UnrecognizedDispose	magick/layer.h	/^  UnrecognizedDispose,$/;"	e	enum:__anon71
UnregisterARTImage	magick/methods.h	1209;"	d
UnregisterAVSImage	magick/methods.h	1210;"	d
UnregisterBMPImage	magick/methods.h	1211;"	d
UnregisterBRAILLEImage	magick/methods.h	1212;"	d
UnregisterCALSImage	magick/methods.h	1213;"	d
UnregisterCAPTIONImage	magick/methods.h	1214;"	d
UnregisterCINImage	magick/methods.h	1215;"	d
UnregisterCIPImage	magick/methods.h	1216;"	d
UnregisterCLIPImage	magick/methods.h	1217;"	d
UnregisterCMYKImage	magick/methods.h	1218;"	d
UnregisterCUTImage	magick/methods.h	1219;"	d
UnregisterDCMImage	magick/methods.h	1220;"	d
UnregisterDDSImage	magick/methods.h	1221;"	d
UnregisterDIBImage	magick/methods.h	1222;"	d
UnregisterDJVUImage	magick/methods.h	1223;"	d
UnregisterDNGImage	magick/methods.h	1224;"	d
UnregisterDOTImage	magick/methods.h	1225;"	d
UnregisterDPXImage	magick/methods.h	1226;"	d
UnregisterEPTImage	magick/methods.h	1227;"	d
UnregisterFAXImage	magick/methods.h	1228;"	d
UnregisterFITSImage	magick/methods.h	1229;"	d
UnregisterGIFImage	magick/methods.h	1230;"	d
UnregisterGRADIENTImage	magick/methods.h	1231;"	d
UnregisterGRAYImage	magick/methods.h	1232;"	d
UnregisterHALDImage	magick/methods.h	1233;"	d
UnregisterHISTOGRAMImage	magick/methods.h	1234;"	d
UnregisterHRZImage	magick/methods.h	1235;"	d
UnregisterHTMLImage	magick/methods.h	1236;"	d
UnregisterICONImage	magick/methods.h	1237;"	d
UnregisterINFOImage	magick/methods.h	1238;"	d
UnregisterINLINEImage	magick/methods.h	1239;"	d
UnregisterIPLImage	magick/methods.h	1240;"	d
UnregisterJP2Image	magick/methods.h	1241;"	d
UnregisterJPEGImage	magick/methods.h	1242;"	d
UnregisterJSONImage	magick/methods.h	1243;"	d
UnregisterLABELImage	magick/methods.h	1244;"	d
UnregisterMACImage	magick/methods.h	1245;"	d
UnregisterMAGICKImage	magick/methods.h	1246;"	d
UnregisterMAPImage	magick/methods.h	1248;"	d
UnregisterMATImage	magick/methods.h	1249;"	d
UnregisterMATTEImage	magick/methods.h	1250;"	d
UnregisterMETAImage	magick/methods.h	1251;"	d
UnregisterMIFFImage	magick/methods.h	1252;"	d
UnregisterMONOImage	magick/methods.h	1253;"	d
UnregisterMPCImage	magick/methods.h	1254;"	d
UnregisterMPEGImage	magick/methods.h	1255;"	d
UnregisterMPRImage	magick/methods.h	1256;"	d
UnregisterMSLImage	magick/methods.h	1257;"	d
UnregisterMTVImage	magick/methods.h	1258;"	d
UnregisterMVGImage	magick/methods.h	1259;"	d
UnregisterMagickInfo	magick/magick.c	/^MagickExport MagickBooleanType UnregisterMagickInfo(const char *name)$/;"	f
UnregisterMagickInfo	magick/methods.h	1247;"	d
UnregisterModule	magick/module.c	/^static MagickBooleanType UnregisterModule(const ModuleInfo *module_info,$/;"	f	file:
UnregisterNULLImage	magick/methods.h	1260;"	d
UnregisterOTBImage	magick/methods.h	1261;"	d
UnregisterPALMImage	magick/methods.h	1262;"	d
UnregisterPATTERNImage	magick/methods.h	1263;"	d
UnregisterPCDImage	magick/methods.h	1264;"	d
UnregisterPCLImage	magick/methods.h	1265;"	d
UnregisterPCXImage	magick/methods.h	1266;"	d
UnregisterPDBImage	magick/methods.h	1267;"	d
UnregisterPDFImage	magick/methods.h	1268;"	d
UnregisterPICTImage	magick/methods.h	1269;"	d
UnregisterPIXImage	magick/methods.h	1270;"	d
UnregisterPLASMAImage	magick/methods.h	1271;"	d
UnregisterPNGImage	magick/methods.h	1272;"	d
UnregisterPNMImage	magick/methods.h	1273;"	d
UnregisterPREVIEWImage	magick/methods.h	1274;"	d
UnregisterPS2Image	magick/methods.h	1275;"	d
UnregisterPS3Image	magick/methods.h	1276;"	d
UnregisterPSDImage	magick/methods.h	1277;"	d
UnregisterPSImage	magick/methods.h	1278;"	d
UnregisterPWPImage	magick/methods.h	1279;"	d
UnregisterRAWImage	magick/methods.h	1280;"	d
UnregisterRGBImage	magick/methods.h	1281;"	d
UnregisterRLAImage	magick/methods.h	1282;"	d
UnregisterRLEImage	magick/methods.h	1283;"	d
UnregisterSCREENSHOTImage	magick/methods.h	1285;"	d
UnregisterSCRImage	magick/methods.h	1284;"	d
UnregisterSCTImage	magick/methods.h	1286;"	d
UnregisterSFWImage	magick/methods.h	1287;"	d
UnregisterSGIImage	magick/methods.h	1288;"	d
UnregisterSTEGANOImage	magick/methods.h	1290;"	d
UnregisterSUNImage	magick/methods.h	1291;"	d
UnregisterSVGImage	magick/methods.h	1292;"	d
UnregisterStaticModules	magick/methods.h	1289;"	d
UnregisterStaticModules	magick/static.c	/^MagickExport void UnregisterStaticModules(void)$/;"	f
UnregisterTGAImage	coders/tga.c	/^ModuleExport void UnregisterTGAImage(void)$/;"	f
UnregisterTGAImage	magick/methods.h	1293;"	d
UnregisterTHUMBNAILImage	magick/methods.h	1294;"	d
UnregisterTIFFImage	magick/methods.h	1295;"	d
UnregisterTILEImage	magick/methods.h	1296;"	d
UnregisterTIMImage	magick/methods.h	1297;"	d
UnregisterTTFImage	magick/methods.h	1298;"	d
UnregisterTXTImage	magick/methods.h	1299;"	d
UnregisterUILImage	magick/methods.h	1300;"	d
UnregisterURLImage	magick/methods.h	1301;"	d
UnregisterUYVYImage	magick/methods.h	1302;"	d
UnregisterVICARImage	magick/methods.h	1303;"	d
UnregisterVIDImage	magick/methods.h	1304;"	d
UnregisterVIFFImage	magick/methods.h	1305;"	d
UnregisterVIPSImage	magick/methods.h	1306;"	d
UnregisterWBMPImage	magick/methods.h	1307;"	d
UnregisterWMFImage	magick/methods.h	1308;"	d
UnregisterWPGImage	magick/methods.h	1309;"	d
UnregisterXBMImage	magick/methods.h	1310;"	d
UnregisterXCFImage	magick/methods.h	1311;"	d
UnregisterXCImage	magick/methods.h	1312;"	d
UnregisterXImage	magick/methods.h	1313;"	d
UnregisterXPMImage	magick/methods.h	1314;"	d
UnregisterXPSImage	magick/methods.h	1315;"	d
UnregisterXWDImage	magick/methods.h	1316;"	d
UnregisterYCBCRImage	magick/methods.h	1317;"	d
UnregisterYUVImage	magick/methods.h	1318;"	d
UnsharpMaskImage	magick/effect.c	/^MagickExport Image *UnsharpMaskImage(const Image *image,const double radius,$/;"	f
UnsharpMaskImage	magick/methods.h	1320;"	d
UnsharpMaskImageChannel	magick/effect.c	/^MagickExport Image *UnsharpMaskImageChannel(const Image *image,$/;"	f
UnsharpMaskImageChannel	magick/methods.h	1319;"	d
UnshiftImageList	magick/deprecate.c	/^MagickExport unsigned int UnshiftImageList(Image **images,const Image *image,$/;"	f
UnshiftImageList	magick/methods.h	1321;"	d
UnsignedQuantumFormat	magick/quantum.h	/^  UnsignedQuantumFormat$/;"	e	enum:__anon6
UpdateConfigurationState	magick/xwindow-private.h	/^  UpdateConfigurationState = 0x0080,$/;"	e	enum:__anon29
UpdateImageViewMethod	magick/image-view.h	/^  (*UpdateImageViewMethod)(ImageView *,const ssize_t,const int,void *);$/;"	t
UpdatePixelViewMethod	wand/deprecate.h	/^  (*UpdatePixelViewMethod)(PixelView *,void *);$/;"	t
UpdateRegionState	magick/xwindow-private.h	/^  UpdateRegionState = 0x0100$/;"	e	enum:__anon29
UpdateSignature	magick/methods.h	1322;"	d
UpdateSignature	magick/signature.c	/^MagickExport void UpdateSignature(SignatureInfo *signature_info,$/;"	f
UpdateWandViewMethod	wand/wand-view.h	/^  (*UpdateWandViewMethod)(WandView *,const ssize_t,const int,void *);$/;"	t
Upscale	magick/deprecate.h	62;"	d
UserDefinedKernel	magick/morphology.h	/^  UserDefinedKernel,   \/* User Specified Kernel Array *\/$/;"	e	enum:__anon69
UserEvent	magick/log.h	/^  UserEvent = 0x09000,$/;"	e	enum:__anon93
UserSpace	magick/draw.h	/^  UserSpace,$/;"	e	enum:__anon35
UserSpaceOnUse	magick/draw.h	/^  UserSpaceOnUse,$/;"	e	enum:__anon35
UserTime	magick/timer.c	/^static double UserTime(void)$/;"	f	file:
Uwidth	magick/resample.c	/^    Vlimit, Ulimit, Uwidth, slope;$/;"	m	struct:_ResampleFilter	file:
VC_EXTRALEAN	magick/nt-base.h	31;"	d
ValidateColormapIndex	magick/deprecate.c	/^MagickExport IndexPacket ValidateColormapIndex(Image *image,$/;"	f
ValidateColormapIndex	magick/methods.h	1323;"	d
ValidateEntities	magick/xml-tree.c	/^static MagickBooleanType ValidateEntities(char *tag,char *xml,char **entities)$/;"	f	file:
ValidateOptions	magick/option.c	/^  ValidateOptions[] =$/;"	v	file:
ValidatePixelCacheMorphology	magick/cache.c	/^static inline MagickBooleanType ValidatePixelCacheMorphology($/;"	f	file:
ValidateType	magick/option.h	/^} ValidateType;$/;"	t	typeref:enum:__anon87
VersionCommand	magick/animate.c	/^  VersionCommand,$/;"	e	enum:__anon85	file:
VersionCommand	magick/display.c	/^  VersionCommand,$/;"	e	enum:__anon20	file:
VerticalBitmap	magick/display.c	/^  VerticalBitmap[] =$/;"	v	file:
VerticalChopCommand	magick/display.c	/^  VerticalChopCommand,$/;"	e	enum:__anon21	file:
VerticalFilter	magick/resize.c	/^static MagickBooleanType VerticalFilter(const ResizeFilter *resize_filter,$/;"	f	file:
VerticalHeight	magick/display.c	1520;"	d	file:
VerticalRotateCommand	magick/display.c	/^  VerticalRotateCommand,$/;"	e	enum:__anon21	file:
VerticalTileEdgeVirtualPixelMethod	magick/cache-view.h	/^  VerticalTileEdgeVirtualPixelMethod,$/;"	e	enum:__anon63
VerticalTileVirtualPixelMethod	magick/cache-view.h	/^  VerticalTileVirtualPixelMethod,$/;"	e	enum:__anon63
VerticalWidth	magick/display.c	1519;"	d	file:
ViewInfo	magick/deprecate.h	/^typedef struct _ViewInfo ViewInfo;$/;"	t	typeref:struct:_ViewInfo
VignetteCommand	magick/display.c	/^  VignetteCommand,$/;"	e	enum:__anon20	file:
VignetteImage	magick/fx.c	/^MagickExport Image *VignetteImage(const Image *image,const double radius,$/;"	f
VignetteImage	magick/methods.h	1324;"	d
VirtualMemoryType	magick/memory.c	/^} VirtualMemoryType;$/;"	t	typeref:enum:__anon33	file:
VirtualPixelMethod	magick/cache-view.h	/^} VirtualPixelMethod;$/;"	t	typeref:enum:__anon63
VirtualPixelModulo	magick/cache.c	/^static inline MagickModulo VirtualPixelModulo(const ssize_t offset,$/;"	f	file:
VirtualPixelOptions	magick/option.c	/^  VirtualPixelOptions[] =$/;"	v	file:
VisualDirectoryCommand	magick/display.c	/^  VisualDirectoryCommand,$/;"	e	enum:__anon20	file:
VividLight	magick/composite.c	/^static MagickRealType VividLight(const MagickRealType Sca,$/;"	f	file:
VividLightCompositeOp	magick/composite.h	/^  VividLightCompositeOp,$/;"	e	enum:__anon68
Vlimit	magick/resample.c	/^    Vlimit, Ulimit, Uwidth, slope;$/;"	m	struct:_ResampleFilter	file:
VoronoiColorInterpolate	magick/distort.h	/^  VoronoiColorInterpolate = SentinelDistortion,$/;"	e	enum:__anon51
VoronoiMorphology	magick/morphology.h	/^  VoronoiMorphology,            \/* distance matte channel copy nearest color *\/$/;"	e	enum:__anon70
WIN32_LEAN_AND_MEAN	magick/nt-base.h	30;"	d
WLUT_WIDTH	magick/resample.c	85;"	d	file:
WORDS_BIGENDIAN	magick/magick-baseconfig.h	1259;"	d
WORDS_BIGENDIAN	magick/magick-baseconfig.h	1263;"	d
W_OK	magick/nt-base.h	52;"	d
WandError	magick/exception.h	/^  WandError = 470,$/;"	e	enum:__anon84
WandEvent	magick/log.h	/^  WandEvent = 0x10000,$/;"	e	enum:__anon93
WandExport	wand/method-attribute.h	44;"	d
WandExport	wand/method-attribute.h	46;"	d
WandExport	wand/method-attribute.h	53;"	d
WandExport	wand/method-attribute.h	55;"	d
WandExport	wand/method-attribute.h	62;"	d
WandExport	wand/method-attribute.h	89;"	d
WandExport	wand/method-attribute.h	92;"	d
WandFatalError	magick/exception.h	/^  WandFatalError = 770,$/;"	e	enum:__anon84
WandPrivate	wand/method-attribute.h	34;"	d
WandPrivate	wand/method-attribute.h	90;"	d
WandPrivate	wand/method-attribute.h	93;"	d
WandSignature	wand/method-attribute.h	97;"	d
WandView	wand/wand-view.h	/^  WandView;$/;"	t	typeref:struct:_WandView
WandWarning	magick/exception.h	/^  WandWarning = 370,$/;"	e	enum:__anon84
WarningException	magick/exception.h	/^  WarningException = 300,$/;"	e	enum:__anon84
WarningHandler	magick/exception.h	/^  (*WarningHandler)(const ExceptionType,const char *,const char *);$/;"	t
WaveCommand	magick/display.c	/^  WaveCommand,$/;"	e	enum:__anon20	file:
WaveImage	magick/fx.c	/^MagickExport Image *WaveImage(const Image *image,const double amplitude,$/;"	f
WaveImage	magick/methods.h	1325;"	d
WaveImageTag	magick/fx.c	5486;"	d	file:
WavePreview	magick/effect.h	/^  WavePreview,$/;"	e	enum:__anon56
WavyBitmap	magick/display.c	/^  WavyBitmap[] =$/;"	v	file:
WavyHeight	magick/display.c	1522;"	d	file:
WavyWidth	magick/display.c	1521;"	d	file:
WeightingExponent	magick/segment.c	112;"	d	file:
WeightingExponent	magick/segment.c	115;"	d	file:
Welsh	magick/resize.c	/^static MagickRealType Welsh(const MagickRealType x,$/;"	f	file:
WelshFilter	magick/resample.h	/^  WelshFilter,$/;"	e	enum:__anon76
WelshWeightingFunction	magick/resize-private.h	/^  WelshWeightingFunction,$/;"	e	enum:__anon30
WestGravity	magick/geometry.h	/^  WestGravity = 4, $/;"	e	enum:__anon15
WestGravity	magick/geometry.h	68;"	d
WhiteThresholdImage	magick/methods.h	1327;"	d
WhiteThresholdImage	magick/threshold.c	/^MagickExport MagickBooleanType WhiteThresholdImage(Image *image,$/;"	f
WhiteThresholdImageChannel	magick/methods.h	1326;"	d
WhiteThresholdImageChannel	magick/threshold.c	/^MagickExport MagickBooleanType WhiteThresholdImageChannel(Image *image,$/;"	f
WhiteVirtualPixelMethod	magick/cache-view.h	/^  WhiteVirtualPixelMethod,$/;"	e	enum:__anon63
WidthValue	magick/geometry.h	/^  WidthValue = 0x0004,$/;"	e	enum:__anon14
WidthValue	magick/geometry.h	35;"	d
Win32FindData	magick/nt-base-private.h	/^    Win32FindData;$/;"	m	struct:_DIR
WithdrawnState	magick/PreRvIcccm.h	55;"	d
WriteBinaryBlobMode	magick/blob-private.h	/^  WriteBinaryBlobMode,$/;"	e	enum:__anon73
WriteBlob	magick/blob.c	/^MagickExport ssize_t WriteBlob(Image *image,const size_t length,$/;"	f
WriteBlob	magick/methods.h	1335;"	d
WriteBlobByte	magick/blob.c	/^MagickExport ssize_t WriteBlobByte(Image *image,const unsigned char value)$/;"	f
WriteBlobByte	magick/methods.h	1328;"	d
WriteBlobFloat	magick/blob.c	/^MagickExport ssize_t WriteBlobFloat(Image *image,const float value)$/;"	f
WriteBlobFloat	magick/methods.h	1329;"	d
WriteBlobLSBLong	magick/blob.c	/^MagickExport ssize_t WriteBlobLSBLong(Image *image,const unsigned int value)$/;"	f
WriteBlobLSBLong	magick/methods.h	1331;"	d
WriteBlobLSBShort	magick/blob.c	/^MagickExport ssize_t WriteBlobLSBShort(Image *image,const unsigned short value)$/;"	f
WriteBlobLSBShort	magick/methods.h	1332;"	d
WriteBlobLong	magick/blob.c	/^MagickExport ssize_t WriteBlobLong(Image *image,const unsigned int value)$/;"	f
WriteBlobLong	magick/methods.h	1330;"	d
WriteBlobMSBLong	magick/blob.c	/^MagickExport ssize_t WriteBlobMSBLong(Image *image,const unsigned int value)$/;"	f
WriteBlobMSBLong	magick/methods.h	1333;"	d
WriteBlobMSBLongLong	magick/blob.c	/^MagickExport ssize_t WriteBlobMSBLongLong(Image *image,$/;"	f
WriteBlobMSBShort	magick/blob.c	/^MagickExport ssize_t WriteBlobMSBShort(Image *image,const unsigned short value)$/;"	f
WriteBlobMSBShort	magick/methods.h	1334;"	d
WriteBlobMode	magick/blob-private.h	/^  WriteBlobMode,$/;"	e	enum:__anon73
WriteBlobShort	magick/blob.c	/^MagickExport ssize_t WriteBlobShort(Image *image,const unsigned short value)$/;"	f
WriteBlobShort	magick/methods.h	1336;"	d
WriteBlobStream	magick/blob.c	/^static inline ssize_t WriteBlobStream(Image *image,const size_t length,$/;"	f	file:
WriteBlobString	magick/blob.c	/^MagickExport ssize_t WriteBlobString(Image *image,const char *string)$/;"	f
WriteBlobString	magick/methods.h	1337;"	d
WriteDistributeCacheIndexes	magick/distribute-cache.c	/^static MagickBooleanType WriteDistributeCacheIndexes(SplayTreeInfo *registry,$/;"	f	file:
WriteDistributeCachePixels	magick/distribute-cache.c	/^static MagickBooleanType WriteDistributeCachePixels(SplayTreeInfo *registry,$/;"	f	file:
WriteDistributePixelCacheIndexes	magick/distribute-cache.c	/^MagickPrivate MagickOffsetType WriteDistributePixelCacheIndexes($/;"	f
WriteDistributePixelCachePixels	magick/distribute-cache.c	/^MagickPrivate MagickOffsetType WriteDistributePixelCachePixels($/;"	f
WriteImage	magick/constitute.c	/^MagickExport MagickBooleanType WriteImage(const ImageInfo *image_info,$/;"	f
WriteImage	magick/methods.h	1338;"	d
WriteImageTag	magick/constitute.c	1252;"	d	file:
WriteImages	magick/constitute.c	/^MagickExport MagickBooleanType WriteImages(const ImageInfo *image_info,$/;"	f
WriteImages	magick/methods.h	1339;"	d
WriteMatrixElements	magick/matrix.c	/^static inline MagickOffsetType WriteMatrixElements($/;"	f	file:
WriteMode	magick/blob.h	/^  WriteMode,$/;"	e	enum:__anon18
WritePixelCacheIndexes	magick/cache.c	/^static MagickBooleanType WritePixelCacheIndexes(CacheInfo *cache_info,$/;"	f	file:
WritePixelCachePixels	magick/cache.c	/^static MagickBooleanType WritePixelCachePixels(CacheInfo *cache_info,$/;"	f	file:
WritePixelCacheRegion	magick/cache.c	/^static inline MagickOffsetType WritePixelCacheRegion($/;"	f	file:
WritePolicyRights	magick/policy.h	/^  WritePolicyRights = 0x02,$/;"	e	enum:__anon47
WriteProfileLong	magick/profile.c	/^static inline void WriteProfileLong(const EndianType endian,$/;"	f	file:
WriteProfileShort	magick/profile.c	/^static void WriteProfileShort(const EndianType endian,$/;"	f	file:
WriteResourceLong	magick/profile.c	/^static inline void WriteResourceLong(unsigned char *p,$/;"	f	file:
WriteStream	magick/methods.h	1340;"	d
WriteStream	magick/stream.c	/^MagickExport MagickBooleanType WriteStream(const ImageInfo *image_info,$/;"	f
WriteStreamImage	magick/stream.c	/^static size_t WriteStreamImage(const Image *image,const void *pixels,$/;"	f	file:
WriteTGAImage	coders/tga.c	/^static MagickBooleanType WriteTGAImage(const ImageInfo *image_info,Image *image)$/;"	f	file:
WriteTo8BimProfile	magick/profile.c	/^static void WriteTo8BimProfile(Image *image,const char *name,$/;"	f	file:
X11Compliance	magick/color.h	/^  X11Compliance = 0x0002,$/;"	e	enum:__anon83
X11Event	magick/log.h	/^  X11Event = 0x20000,$/;"	e	enum:__anon93
X11_APPLICATION_PATH	magick/studio.h	267;"	d
X11_APPLICATION_PATH	magick/studio.h	294;"	d
X11_APPLICATION_PATH	wand/studio.h	269;"	d
X11_APPLICATION_PATH	wand/studio.h	296;"	d
X11_PREFERENCES_PATH	magick/studio.h	261;"	d
X11_PREFERENCES_PATH	magick/studio.h	276;"	d
X11_PREFERENCES_PATH	magick/studio.h	301;"	d
X11_PREFERENCES_PATH	magick/studio.h	323;"	d
X11_PREFERENCES_PATH	wand/studio.h	263;"	d
X11_PREFERENCES_PATH	wand/studio.h	278;"	d
X11_PREFERENCES_PATH	wand/studio.h	303;"	d
X11_PREFERENCES_PATH	wand/studio.h	325;"	d
XAnimateBackgroundImage	magick/animate.c	/^MagickExport void XAnimateBackgroundImage(Display *display,$/;"	f
XAnimateBackgroundImage	magick/methods.h	1341;"	d
XAnimateImages	magick/animate.c	/^MagickExport Image *XAnimateImages(Display *display,$/;"	f
XAnimateImages	magick/methods.h	1342;"	d
XAnnotateEditImage	magick/display.c	/^static MagickBooleanType XAnnotateEditImage(Display *display,$/;"	f	file:
XAnnotateImage	magick/methods.h	1343;"	d
XAnnotateInfo	magick/xwindow-private.h	/^} XAnnotateInfo;$/;"	t	typeref:struct:_XAnnotateInfo
XBackgroundImage	magick/display.c	/^static MagickBooleanType XBackgroundImage(Display *display,$/;"	f	file:
XBestFont	magick/methods.h	1344;"	d
XBestIconSize	magick/methods.h	1345;"	d
XBestPixel	magick/methods.h	1346;"	d
XBestVisualInfo	magick/methods.h	1347;"	d
XCheckDefineCursor	magick/methods.h	1348;"	d
XCheckRefreshWindows	magick/methods.h	1349;"	d
XChopImage	magick/display.c	/^static MagickBooleanType XChopImage(Display *display,$/;"	f	file:
XClientMessage	magick/methods.h	1350;"	d
XClientName	magick/display.c	13474;"	d	file:
XColorBrowserWidget	magick/methods.h	1351;"	d
XColorEditImage	magick/display.c	/^static MagickBooleanType XColorEditImage(Display *display,$/;"	f	file:
XColormapType	magick/xwindow-private.h	/^} XColormapType;$/;"	t	typeref:enum:__anon28
XCommandWidget	magick/methods.h	1352;"	d
XComponentGenesis	magick/methods.h	1353;"	d
XComponentTerminus	magick/methods.h	1354;"	d
XCompositeImage	magick/display.c	/^static MagickBooleanType XCompositeImage(Display *display,$/;"	f	file:
XConfigureImage	magick/display.c	/^static MagickBooleanType XConfigureImage(Display *display,$/;"	f	file:
XConfigureImageColormap	magick/methods.h	1355;"	d
XConfirmWidget	magick/methods.h	1356;"	d
XConstrainWindowPosition	magick/methods.h	1357;"	d
XCropImage	magick/display.c	/^static MagickBooleanType XCropImage(Display *display,$/;"	f	file:
XDelay	magick/methods.h	1358;"	d
XDestroyResourceInfo	magick/methods.h	1359;"	d
XDestroyWindowColors	magick/methods.h	1360;"	d
XDialogWidget	magick/methods.h	1361;"	d
XDisplayBackgroundImage	magick/display.c	/^MagickExport MagickBooleanType XDisplayBackgroundImage(Display *display,$/;"	f
XDisplayBackgroundImage	magick/methods.h	1362;"	d
XDisplayImage	magick/display.c	/^MagickExport Image *XDisplayImage(Display *display,XResourceInfo *resource_info,$/;"	f
XDisplayImage	magick/methods.h	1364;"	d
XDisplayImageInfo	magick/methods.h	1363;"	d
XDownscale	magick/deprecate.h	63;"	d
XDrawEditImage	magick/display.c	/^static MagickBooleanType XDrawEditImage(Display *display,$/;"	f	file:
XDrawImage	magick/methods.h	1365;"	d
XDrawInfo	magick/xwindow-private.h	/^} XDrawInfo;$/;"	t	typeref:struct:_XDrawInfo
XDrawPanRectangle	magick/display.c	/^static void XDrawPanRectangle(Display *display,XWindows *windows)$/;"	f	file:
XError	magick/methods.h	1366;"	d
XFileBrowserWidget	magick/methods.h	1367;"	d
XFontBrowserWidget	magick/methods.h	1368;"	d
XFreeResources	magick/methods.h	1369;"	d
XFreeStandardColormap	magick/methods.h	1370;"	d
XGetAnnotateInfo	magick/methods.h	1371;"	d
XGetImportInfo	magick/methods.h	1372;"	d
XGetMapInfo	magick/methods.h	1373;"	d
XGetPixelPacket	magick/methods.h	1374;"	d
XGetResourceClass	magick/methods.h	1375;"	d
XGetResourceDatabase	magick/methods.h	1376;"	d
XGetResourceInfo	magick/methods.h	1377;"	d
XGetResourceInstance	magick/methods.h	1378;"	d
XGetScreenDensity	magick/methods.h	1379;"	d
XGetWindowColor	magick/methods.h	1380;"	d
XGetWindowInfo	magick/methods.h	1381;"	d
XHighlightEllipse	magick/methods.h	1382;"	d
XHighlightLine	magick/methods.h	1383;"	d
XHighlightRectangle	magick/methods.h	1384;"	d
XImageCache	magick/display.c	/^static void XImageCache(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XImageWindowCommand	magick/display.c	/^static CommandType XImageWindowCommand(Display *display,$/;"	f	file:
XImportImage	magick/methods.h	1385;"	d
XImportInfo	magick/xwindow.h	/^} XImportInfo;$/;"	t	typeref:struct:_XImportInfo
XInfoWidget	magick/methods.h	1386;"	d
XInitializeWindows	magick/methods.h	1387;"	d
XK_KP_Delete	magick/PreRvIcccm.h	39;"	d
XK_KP_Down	magick/PreRvIcccm.h	33;"	d
XK_KP_End	magick/PreRvIcccm.h	38;"	d
XK_KP_Home	magick/PreRvIcccm.h	29;"	d
XK_KP_Left	magick/PreRvIcccm.h	30;"	d
XK_KP_Next	magick/PreRvIcccm.h	36;"	d
XK_KP_Page_Down	magick/PreRvIcccm.h	37;"	d
XK_KP_Page_Up	magick/PreRvIcccm.h	35;"	d
XK_KP_Prior	magick/PreRvIcccm.h	34;"	d
XK_KP_Right	magick/PreRvIcccm.h	32;"	d
XK_KP_Up	magick/PreRvIcccm.h	31;"	d
XListBrowserWidget	magick/methods.h	1388;"	d
XMLTreeInfo	magick/xml-tree.h	/^  XMLTreeInfo;$/;"	t	typeref:struct:_XMLTreeInfo
XMLTreeInfoToXML	magick/methods.h	1396;"	d
XMLTreeInfoToXML	magick/xml-tree.c	/^MagickExport char *XMLTreeInfoToXML(XMLTreeInfo *xml_info)$/;"	f
XMLTreeRoot	magick/xml-tree.c	/^  XMLTreeRoot;$/;"	t	typeref:struct:_XMLTreeRoot	file:
XMLTreeTagToXML	magick/xml-tree.c	/^static char *XMLTreeTagToXML(XMLTreeInfo *xml_info,char **source,size_t *length,$/;"	f	file:
XMLWhitespace	magick/xml-tree.c	70;"	d	file:
XMagickCommand	magick/animate.c	/^static Image *XMagickCommand(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XMagickCommand	magick/display.c	/^static Image *XMagickCommand(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XMagickProgressMonitor	magick/methods.h	1389;"	d
XMagnifyImage	magick/display.c	/^static void XMagnifyImage(Display *display,XWindows *windows,XEvent *event)$/;"	f	file:
XMagnifyWindowCommand	magick/display.c	/^static void XMagnifyWindowCommand(Display *display,XWindows *windows,$/;"	f	file:
XMakeCursor	magick/methods.h	1390;"	d
XMakeImage	magick/methods.h	1391;"	d
XMakeMagnifyImage	magick/methods.h	1392;"	d
XMakePanImage	magick/display.c	/^static void XMakePanImage(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XMakeStandardColormap	magick/methods.h	1393;"	d
XMakeWindow	magick/methods.h	1394;"	d
XMatteEditImage	magick/display.c	/^static MagickBooleanType XMatteEditImage(Display *display,$/;"	f	file:
XMaxRequestSize	magick/PreRvIcccm.h	52;"	d
XMenuWidget	magick/methods.h	1395;"	d
XNegative	magick/geometry.h	/^  XNegative = 0x0020,$/;"	e	enum:__anon14
XNegative	magick/geometry.h	43;"	d
XNoticeWidget	magick/methods.h	1397;"	d
XOpenImage	magick/display.c	/^static Image *XOpenImage(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XPMCompliance	magick/color.h	/^  XPMCompliance = 0x0004,$/;"	e	enum:__anon83
XPanImage	magick/display.c	/^static void XPanImage(Display *display,XWindows *windows,XEvent *event)$/;"	f	file:
XPasteImage	magick/display.c	/^static MagickBooleanType XPasteImage(Display *display,$/;"	f	file:
XPixelInfo	magick/xwindow-private.h	/^} XPixelInfo;$/;"	t	typeref:struct:_XPixelInfo
XPixelIntensity	magick/xwindow-private.h	/^static inline MagickRealType XPixelIntensity(const XColor *pixel)$/;"	f
XPreferencesWidget	magick/methods.h	1398;"	d
XPrintImage	magick/display.c	/^static MagickBooleanType XPrintImage(Display *display,$/;"	f	file:
XProgressMonitorWidget	magick/methods.h	1399;"	d
XQueryColorDatabase	magick/methods.h	1400;"	d
XQueryPosition	magick/methods.h	1401;"	d
XROIImage	magick/display.c	/^static MagickBooleanType XROIImage(Display *display,$/;"	f	file:
XRefreshWindow	magick/methods.h	1402;"	d
XRemoteCommand	magick/methods.h	1403;"	d
XResourceInfo	magick/xwindow-private.h	/^} XResourceInfo;$/;"	t	typeref:struct:_XResourceInfo
XRetainWindowColors	magick/methods.h	1404;"	d
XRotateImage	magick/display.c	/^static MagickBooleanType XRotateImage(Display *display,$/;"	f	file:
XSaveImage	magick/animate.c	/^static MagickBooleanType XSaveImage(Display *display,$/;"	f	file:
XSaveImage	magick/display.c	/^static MagickBooleanType XSaveImage(Display *display,$/;"	f	file:
XScreenEvent	magick/display.c	/^static void XScreenEvent(Display *display,XWindows *windows,XEvent *event)$/;"	f	file:
XServerError	magick/exception.h	/^  XServerError = 480,$/;"	e	enum:__anon84
XServerFatalError	magick/exception.h	/^  XServerFatalError = 780,$/;"	e	enum:__anon84
XServerWarning	magick/exception.h	/^  XServerWarning = 380,$/;"	e	enum:__anon84
XSetCropGeometry	magick/display.c	/^static void XSetCropGeometry(Display *display,XWindows *windows,$/;"	f	file:
XSetCursorState	magick/methods.h	1405;"	d
XSetWindows	magick/methods.h	1406;"	d
XShearImage	magick/shear.c	/^static MagickBooleanType XShearImage(Image *image,const MagickRealType degrees,$/;"	f	file:
XShearImageTag	magick/shear.c	1138;"	d	file:
XState	magick/xwindow-private.h	/^} XState;$/;"	t	typeref:enum:__anon29
XTextProperty	magick/PreRvIcccm.h	/^} XTextProperty;$/;"	t	typeref:struct:_XTextProperty
XTextViewWidget	magick/methods.h	1407;"	d
XTileImage	magick/display.c	/^static Image *XTileImage(Display *display,XResourceInfo *resource_info,$/;"	f	file:
XTime	magick/cipher.c	/^static inline unsigned int XTime(unsigned char alpha)$/;"	f	file:
XTranslateImage	magick/display.c	/^static void XTranslateImage(Display *display,XWindows *windows,$/;"	f	file:
XTrimImage	magick/display.c	/^static MagickBooleanType XTrimImage(Display *display,$/;"	f	file:
XUpscale	magick/deprecate.h	64;"	d
XUserPreferences	magick/methods.h	1408;"	d
XValue	magick/geometry.h	/^  XValue = 0x0001,$/;"	e	enum:__anon14
XValue	magick/geometry.h	29;"	d
XVisualDirectoryImage	magick/display.c	/^static Image *XVisualDirectoryImage(Display *display,$/;"	f	file:
XWarning	magick/methods.h	1409;"	d
XWindowByID	magick/methods.h	1410;"	d
XWindowByName	magick/methods.h	1411;"	d
XWindowByProperty	magick/methods.h	1412;"	d
XWindowInfo	magick/xwindow-private.h	/^} XWindowInfo;$/;"	t	typeref:struct:_XWindowInfo
XWindows	magick/xwindow-private.h	/^} XWindows;$/;"	t	typeref:struct:_XWindows
XYZColorspace	magick/colorspace.h	/^  XYZColorspace,$/;"	e	enum:__anon55
XiNegative	magick/geometry.h	/^  XiNegative = 0x0020,$/;"	e	enum:__anon14
XiValue	magick/geometry.h	/^  XiValue = 0x0001,$/;"	e	enum:__anon14
Xor	magick/composite.c	/^static MagickRealType Xor(const MagickRealType Sca,const MagickRealType Sa,$/;"	f	file:
XorCompositeOp	magick/composite.h	/^  XorCompositeOp,$/;"	e	enum:__anon68
XorEvaluateOperator	magick/statistic.h	/^  XorEvaluateOperator,$/;"	e	enum:__anon89
YCCColorspace	magick/colorspace.h	/^  YCCColorspace,$/;"	e	enum:__anon55
YCbCrColorspace	magick/colorspace.h	/^  YCbCrColorspace,$/;"	e	enum:__anon55
YDbDrColorspace	magick/colorspace.h	/^  YDbDrColorspace$/;"	e	enum:__anon55
YIQColorspace	magick/colorspace.h	/^  YIQColorspace,$/;"	e	enum:__anon55
YNegative	magick/geometry.h	/^  YNegative = 0x0040,$/;"	e	enum:__anon14
YNegative	magick/geometry.h	46;"	d
YPbPrColorspace	magick/colorspace.h	/^  YPbPrColorspace,$/;"	e	enum:__anon55
YShearImage	magick/shear.c	/^static MagickBooleanType YShearImage(Image *image,const MagickRealType degrees,$/;"	f	file:
YShearImageTag	magick/shear.c	1359;"	d	file:
YUV	image_validator/ImageValidator.c	/^} YUV;$/;"	t	typeref:struct:__anon96	file:
YUVColorspace	magick/colorspace.h	/^  YUVColorspace,$/;"	e	enum:__anon55
YValue	magick/geometry.h	/^  YValue = 0x0002,$/;"	e	enum:__anon14
YValue	magick/geometry.h	32;"	d
YellowChannel	magick/magick-type.h	/^  YellowChannel = 0x0004,$/;"	e	enum:__anon9
YellowQuantum	magick/quantum.h	/^  YellowQuantum,$/;"	e	enum:__anon7
ZLIBEncodeImage	magick/compress.c	/^MagickExport MagickBooleanType ZLIBEncodeImage(Image *image,$/;"	f
ZLIBEncodeImage	magick/compress.c	/^MagickExport MagickBooleanType ZLIBEncodeImage(Image *image,const size_t length,$/;"	f
ZLIBEncodeImage	magick/methods.h	1413;"	d
ZeroCrossHistogram	magick/segment.c	/^static void ZeroCrossHistogram(MagickRealType *second_derivative,$/;"	f	file:
ZeroCrossing	magick/segment.c	/^} ZeroCrossing;$/;"	t	typeref:struct:_ZeroCrossing	file:
ZeroKernelNans	magick/morphology.c	/^MagickExport void ZeroKernelNans(KernelInfo *kernel)$/;"	f
ZipCompression	magick/compress.h	/^  ZipCompression,$/;"	e	enum:__anon13
ZipSCompression	magick/compress.h	/^  ZipSCompression,$/;"	e	enum:__anon13
ZipStream	magick/blob-private.h	/^  ZipStream,$/;"	e	enum:__anon74
ZoomCommand	magick/display.c	/^  ZoomCommand,$/;"	e	enum:__anon20	file:
ZoomImage	magick/deprecate.c	/^MagickExport Image *ZoomImage(const Image *image,const size_t columns,$/;"	f
ZoomImage	magick/methods.h	1414;"	d
_AESInfo	magick/cipher.c	/^typedef struct _AESInfo$/;"	s	file:
_ALL_SOURCE	magick/magick-baseconfig.h	1211;"	d
_AccelerateTimer	magick/opencl-private.h	/^typedef struct _AccelerateTimer {$/;"	s
_AffineMatrix	magick/geometry.h	/^typedef struct _AffineMatrix$/;"	s
_Ascii85Info	magick/compress.c	/^struct _Ascii85Info$/;"	s	file:
_BlobInfo	magick/blob.c	/^struct _BlobInfo$/;"	s	file:
_CRTDBG_MAP_ALLOC	magick/studio.h	97;"	d
_CRTDBG_MAP_ALLOC	wand/studio.h	103;"	d
_CRTDBG_MAP_ALLOC	wand/studio.h	99;"	d
_CRT_SECURE_NO_DEPRECATE	magick/nt-base.h	32;"	d
_CacheInfo	magick/cache-private.h	/^typedef struct _CacheInfo$/;"	s
_CacheMethods	magick/cache-private.h	/^typedef struct _CacheMethods$/;"	s
_CacheView	magick/cache-view.c	/^struct _CacheView$/;"	s	file:
_CannyInfo	magick/feature.c	/^typedef struct _CannyInfo$/;"	s	file:
_ChannelFeatures	magick/feature.h	/^typedef struct _ChannelFeatures$/;"	s
_ChannelMoments	magick/statistic.h	/^typedef struct _ChannelMoments$/;"	s
_ChannelPerceptualHash	magick/statistic.h	/^typedef struct _ChannelPerceptualHash$/;"	s
_ChannelStatistics	magick/statistic.h	/^typedef struct _ChannelStatistics$/;"	s
_ChromaticityInfo	magick/image.h	/^typedef struct _ChromaticityInfo$/;"	s
_Cluster	magick/segment.c	/^typedef struct _Cluster$/;"	s	file:
_CoderInfo	magick/coder.h	/^typedef struct _CoderInfo$/;"	s
_CoderMapInfo	magick/coder.c	/^typedef struct _CoderMapInfo$/;"	s	file:
_ColorInfo	magick/color.h	/^typedef struct _ColorInfo$/;"	s
_ColorMapInfo	magick/color.c	/^typedef struct _ColorMapInfo$/;"	s	file:
_ColorPacket	magick/histogram.h	/^typedef struct _ColorPacket$/;"	s
_ConfigureInfo	magick/configure.h	/^typedef struct _ConfigureInfo$/;"	s
_ConfigureMapInfo	magick/configure.c	/^typedef struct _ConfigureMapInfo$/;"	s	file:
_ContributionInfo	magick/resize.c	/^typedef struct _ContributionInfo$/;"	s	file:
_CubeInfo	magick/histogram.c	/^typedef struct _CubeInfo$/;"	s	file:
_CubeInfo	magick/quantize.c	/^typedef struct _CubeInfo$/;"	s	file:
_DARWIN_USE_64_BIT_INODE	magick/magick-baseconfig.h	1289;"	d
_DIR	magick/nt-base-private.h	/^typedef struct _DIR$/;"	s
_DataSegmentInfo	magick/memory.c	/^typedef struct _DataSegmentInfo$/;"	s	file:
_DelegateInfo	magick/delegate.h	/^typedef struct _DelegateInfo$/;"	s
_DistributeCacheInfo	magick/distribute-cache-private.h	/^typedef struct _DistributeCacheInfo$/;"	s
_DoublePixelPacket	magick/pixel.h	/^typedef struct _DoublePixelPacket$/;"	s
_DrawInfo	magick/draw.h	/^typedef struct _DrawInfo$/;"	s
_DrawVTable	wand/drawing-wand.c	/^struct _DrawVTable$/;"	s	file:
_DrawingWand	wand/drawing-wand.c	/^struct _DrawingWand$/;"	s	file:
_EdgeInfo	magick/draw.c	/^typedef struct _EdgeInfo$/;"	s	file:
_ElementInfo	magick/draw.c	/^typedef struct _ElementInfo$/;"	s	file:
_ElementInfo	magick/hashmap.c	/^typedef struct _ElementInfo$/;"	s	file:
_ElementReference	magick/draw.h	/^typedef struct _ElementReference$/;"	s
_EntryInfo	magick/hashmap.c	/^typedef struct _EntryInfo$/;"	s	file:
_ErrorInfo	magick/color.h	/^typedef struct _ErrorInfo$/;"	s
_EventInfo	magick/log.c	/^typedef struct _EventInfo$/;"	s	file:
_ExceptionInfo	magick/exception.h	/^struct _ExceptionInfo$/;"	s
_ExtentPacket	magick/segment.c	/^typedef struct _ExtentPacket$/;"	s	file:
_FILE_OFFSET_BITS	magick/studio.h	41;"	d
_FILE_OFFSET_BITS	wand/studio.h	41;"	d
_FloatPixelPacket	magick/accelerate-private.h	/^typedef struct _FloatPixelPacket$/;"	s
_FourierInfo	magick/fourier.c	/^typedef struct _FourierInfo$/;"	s	file:
_FrameInfo	magick/decorate.h	/^typedef struct _FrameInfo$/;"	s
_FxInfo	magick/fx.c	/^struct _FxInfo$/;"	s	file:
_GNU_SOURCE	magick/magick-baseconfig.h	1215;"	d
_GeometryInfo	magick/geometry.h	/^typedef struct _GeometryInfo$/;"	s
_GhostInfo	magick/delegate-private.h	/^typedef struct _GhostInfo$/;"	s
_GradientInfo	magick/draw.h	/^typedef struct _GradientInfo$/;"	s
_HandlerInfo	magick/log.c	/^typedef struct _HandlerInfo$/;"	s	file:
_HashmapInfo	magick/hashmap.c	/^struct _HashmapInfo$/;"	s	file:
_Image	magick/image.h	/^struct _Image$/;"	s
_ImageAttribute	magick/deprecate.h	/^typedef struct _ImageAttribute$/;"	s
_ImageInfo	magick/image.h	/^struct _ImageInfo$/;"	s
_ImageStack	wand/mogrify-private.h	/^typedef struct _ImageStack$/;"	s
_IntervalTree	magick/segment.c	/^typedef struct _IntervalTree$/;"	s	file:
_LinkedListInfo	magick/hashmap.c	/^struct _LinkedListInfo$/;"	s	file:
_ListNode	magick/statistic.c	/^typedef struct _ListNode$/;"	s	file:
_LocaleInfo	magick/locale_.h	/^typedef struct _LocaleInfo$/;"	s
_LogInfo	magick/log.c	/^struct _LogInfo$/;"	s	file:
_LogMapInfo	magick/log.c	/^typedef struct _LogMapInfo$/;"	s	file:
_LongPixelPacket	magick/pixel.h	/^typedef struct _LongPixelPacket$/;"	s
_MAGICKCORE_ACCELERATE_H	magick/accelerate.h	19;"	d
_MAGICKCORE_ACCELERATE_PRIVATE_H	magick/accelerate-private.h	20;"	d
_MAGICKCORE_ANIMATE_H	magick/animate.h	19;"	d
_MAGICKCORE_ANIMATE_PRIVATE_H	magick/animate-private.h	19;"	d
_MAGICKCORE_ANNOTATE_H	magick/annotate.h	19;"	d
_MAGICKCORE_API_DEPRECATED_H	magick/api.h	22;"	d
_MAGICKCORE_ARTIFACT_H	magick/artifact.h	19;"	d
_MAGICKCORE_ATTRIBUTE_H	magick/attribute.h	19;"	d
_MAGICKCORE_BLOB_H	magick/blob.h	19;"	d
_MAGICKCORE_BLOB_PRIVATE_H	magick/blob-private.h	19;"	d
_MAGICKCORE_CACHE_H	magick/cache.h	19;"	d
_MAGICKCORE_CACHE_PRIVATE_H	magick/cache-private.h	19;"	d
_MAGICKCORE_CACHE_VIEW_H	magick/cache-view.h	19;"	d
_MAGICKCORE_CHANNEL_H	magick/channel.h	19;"	d
_MAGICKCORE_CIPHER_H	magick/cipher.h	19;"	d
_MAGICKCORE_CLIENT_H	magick/client.h	19;"	d
_MAGICKCORE_CODER_H	magick/coder.h	19;"	d
_MAGICKCORE_COLORMAP_H	magick/colormap.h	19;"	d
_MAGICKCORE_COLORMAP_PRIVATE_H	magick/colormap-private.h	19;"	d
_MAGICKCORE_COLORSPACE_H	magick/colorspace.h	19;"	d
_MAGICKCORE_COLORSPACE_PRIVATE_H	magick/colorspace-private.h	19;"	d
_MAGICKCORE_COLOR_H	magick/color.h	19;"	d
_MAGICKCORE_COLOR_PRIVATE_H	magick/color-private.h	19;"	d
_MAGICKCORE_COMPARE_H	magick/compare.h	19;"	d
_MAGICKCORE_COMPOSITE_H	magick/composite.h	19;"	d
_MAGICKCORE_COMPOSITE_PRIVATE_H	magick/composite-private.h	19;"	d
_MAGICKCORE_COMPRESS_H	magick/compress.h	19;"	d
_MAGICKCORE_CONFIGURE_H	magick/configure.h	19;"	d
_MAGICKCORE_CONFIG_H	magick/MagickCore.h	27;"	d
_MAGICKCORE_CONFIG_H	magick/studio.h	34;"	d
_MAGICKCORE_CONSTITUTE_H	magick/constitute.h	19;"	d
_MAGICKCORE_CORE_H	magick/MagickCore.h	20;"	d
_MAGICKCORE_DECORATE_H	magick/decorate.h	19;"	d
_MAGICKCORE_DELEGATE_H	magick/delegate.h	19;"	d
_MAGICKCORE_DELEGATE_PRIVATE_H	magick/delegate-private.h	19;"	d
_MAGICKCORE_DEPRECATE_H	magick/deprecate.h	19;"	d
_MAGICKCORE_DISPLAY_H	magick/display.h	19;"	d
_MAGICKCORE_DISPLAY_PRIVATE_H	magick/display-private.h	19;"	d
_MAGICKCORE_DISTORT_H	magick/distort.h	19;"	d
_MAGICKCORE_DISTRIBUTE_CACHE_H	magick/distribute-cache.h	19;"	d
_MAGICKCORE_DISTRIBUTE_CACHE_PRIVATE_H	magick/distribute-cache-private.h	19;"	d
_MAGICKCORE_DRAW_H	magick/draw.h	19;"	d
_MAGICKCORE_DRAW_PRIVATE_H	magick/draw-private.h	19;"	d
_MAGICKCORE_EFFECT_H	magick/effect.h	19;"	d
_MAGICKCORE_ENHANCE_H	magick/enhance.h	19;"	d
_MAGICKCORE_EXCEPTION_H	magick/exception.h	19;"	d
_MAGICKCORE_EXCEPTION_PRIVATE_H	magick/exception-private.h	19;"	d
_MAGICKCORE_FEATURE_H	magick/feature.h	19;"	d
_MAGICKCORE_FFT_H	magick/fourier.h	19;"	d
_MAGICKCORE_FX_H	magick/fx.h	19;"	d
_MAGICKCORE_FX_PRIVATE_H	magick/fx-private.h	19;"	d
_MAGICKCORE_GEM_H	magick/gem.h	19;"	d
_MAGICKCORE_GEM_PRIVATE_H	magick/gem-private.h	19;"	d
_MAGICKCORE_GEOMETRY_H	magick/geometry.h	19;"	d
_MAGICKCORE_HASHMAP_H	magick/hashmap.h	19;"	d
_MAGICKCORE_HISTOGRAM_H	magick/histogram.h	19;"	d
_MAGICKCORE_IDENTIFY_H	magick/identify.h	19;"	d
_MAGICKCORE_IMAGEMAGICK_DEPRECATED_H	magick/ImageMagick.h	22;"	d
_MAGICKCORE_IMAGE_H	magick/image.h	19;"	d
_MAGICKCORE_IMAGE_PRIVATE_H	magick/image-private.h	19;"	d
_MAGICKCORE_LAYER_H	magick/layer.h	19;"	d
_MAGICKCORE_LIST_H	magick/list.h	19;"	d
_MAGICKCORE_LOCALE_H	magick/locale_.h	19;"	d
_MAGICKCORE_LOG_H	magick/log.h	19;"	d
_MAGICKCORE_MAGICK_CONFIG_H	magick/magick-config.h	19;"	d
_MAGICKCORE_MAGICK_H	magick/magick.h	19;"	d
_MAGICKCORE_MAGICK_TYPE_H	magick/magick-type.h	19;"	d
_MAGICKCORE_MAGIC_H	magick/magic.h	19;"	d
_MAGICKCORE_MATRIX_H	magick/matrix.h	19;"	d
_MAGICKCORE_MEMORY_H	magick/memory_.h	19;"	d
_MAGICKCORE_MEMORY_PRIVATE_H	magick/memory-private.h	19;"	d
_MAGICKCORE_METHOD_ATTRIBUTE_H	magick/method-attribute.h	19;"	d
_MAGICKCORE_METHOD_H	magick/methods.h	23;"	d
_MAGICKCORE_MODULE_H	magick/module.h	19;"	d
_MAGICKCORE_MONITOR_H	magick/monitor.h	19;"	d
_MAGICKCORE_MONTAGE_H	magick/montage.h	19;"	d
_MAGICKCORE_MORPHOLOGY_H	magick/morphology.h	19;"	d
_MAGICKCORE_NT_BASE_H	magick/nt-base.h	19;"	d
_MAGICKCORE_NT_BASE_PRIVATE_H	magick/nt-base-private.h	19;"	d
_MAGICKCORE_NT_FEATURE_H	magick/nt-feature.h	19;"	d
_MAGICKCORE_OPENCL_H	magick/opencl.h	19;"	d
_MAGICKCORE_OPENCL_PRIVATE_H	magick/opencl-private.h	19;"	d
_MAGICKCORE_OPTION_H	magick/option.h	19;"	d
_MAGICKCORE_PAINT_H	magick/paint.h	19;"	d
_MAGICKCORE_PIXEL_ACCESSOR_H	magick/pixel-accessor.h	19;"	d
_MAGICKCORE_PIXEL_H	magick/pixel.h	19;"	d
_MAGICKCORE_PIXEL_PRIVATE_H	magick/pixel-private.h	19;"	d
_MAGICKCORE_POLICY_H	magick/policy.h	19;"	d
_MAGICKCORE_PREPRESS_H	magick/prepress.h	19;"	d
_MAGICKCORE_PRER5ICCCM_H	magick/PreRvIcccm.h	19;"	d
_MAGICKCORE_PROFILE_H	magick/profile.h	19;"	d
_MAGICKCORE_PROPERTY_H	magick/property.h	19;"	d
_MAGICKCORE_QUANTIZE_H	magick/quantize.h	19;"	d
_MAGICKCORE_QUANTUM_H	magick/quantum.h	19;"	d
_MAGICKCORE_QUANTUM_PRIVATE_H	magick/quantum-private.h	19;"	d
_MAGICKCORE_RANDOM_PRIVATE_H	magick/random-private.h	19;"	d
_MAGICKCORE_RANDOM__H	magick/random_.h	19;"	d
_MAGICKCORE_REGISTRY_H	magick/registry.h	19;"	d
_MAGICKCORE_RESAMPLE_H	magick/resample.h	19;"	d
_MAGICKCORE_RESAMPLE_PRIVATE_H	magick/resample-private.h	19;"	d
_MAGICKCORE_RESIZE_H	magick/resize.h	19;"	d
_MAGICKCORE_RESIZE_PRIVATE_H	magick/resize-private.h	19;"	d
_MAGICKCORE_RESOURCE_H	magick/resource_.h	19;"	d
_MAGICKCORE_SEGMENT_H	magick/segment.h	19;"	d
_MAGICKCORE_SEMAPHORE_H	magick/semaphore.h	19;"	d
_MAGICKCORE_SEMAPHORE_PRIVATE_H	magick/semaphore-private.h	19;"	d
_MAGICKCORE_SHEAR_H	magick/shear.h	19;"	d
_MAGICKCORE_SIGNATURE_H	magick/signature.h	19;"	d
_MAGICKCORE_SIGNATURE_PRIVATE_H	magick/signature-private.h	19;"	d
_MAGICKCORE_SPLAY_H	magick/splay-tree.h	19;"	d
_MAGICKCORE_STATIC_H	magick/static.h	19;"	d
_MAGICKCORE_STATISTIC_H	magick/statistic.h	19;"	d
_MAGICKCORE_STREAM_H	magick/stream.h	19;"	d
_MAGICKCORE_STREAM_PRIVATE_H	magick/stream-private.h	19;"	d
_MAGICKCORE_STRING_H_	magick/string_.h	19;"	d
_MAGICKCORE_STRING_PRIVATE_H	magick/string-private.h	19;"	d
_MAGICKCORE_STUDIO_H	magick/studio.h	19;"	d
_MAGICKCORE_THREAD_H	magick/thread_.h	19;"	d
_MAGICKCORE_THREAD_PRIVATE_H	magick/thread-private.h	19;"	d
_MAGICKCORE_THRESHOLD_H	magick/threshold.h	19;"	d
_MAGICKCORE_TIMER_H	magick/timer.h	19;"	d
_MAGICKCORE_TOKEN_H	magick/token.h	19;"	d
_MAGICKCORE_TOKEN_PRIVATE_H	magick/token-private.h	19;"	d
_MAGICKCORE_TRANSFORM_H	magick/transform.h	19;"	d
_MAGICKCORE_TYPE_H	magick/type.h	19;"	d
_MAGICKCORE_UTILITY_H	magick/utility.h	19;"	d
_MAGICKCORE_UTILITY_PRIVATE_H	magick/utility-private.h	19;"	d
_MAGICKCORE_VERSION_H	magick/version.h	19;"	d
_MAGICKCORE_VERSION_PRIVATE_H	magick/version-private.h	19;"	d
_MAGICKCORE_WIDGET_H	magick/widget.h	19;"	d
_MAGICKCORE_XML_TREE_H	magick/xml-tree.h	19;"	d
_MAGICKCORE_XML_TREE_PRIVATE_H	magick/xml-tree-private.h	19;"	d
_MAGICKCORE_XWINDOW_H	magick/xwindow.h	19;"	d
_MAGICKCORE_XWINDOW_PRIVATE_H	magick/xwindow-private.h	19;"	d
_MAGICKDLL_	magick/method-attribute.h	27;"	d
_MAGICKDLL_	magick/method-attribute.h	36;"	d
_MAGICKDLL_	wand/method-attribute.h	27;"	d
_MAGICKDLL_	wand/method-attribute.h	36;"	d
_MAGICKIMAGE_IMAGE_VIEW_H	magick/image-view.h	19;"	d
_MAGICKLIB_	magick/method-attribute.h	28;"	d
_MAGICKLIB_	wand/method-attribute.h	28;"	d
_MAGICKWAND_ANIMATE_H	wand/animate.h	19;"	d
_MAGICKWAND_COMPARE_H	wand/compare.h	19;"	d
_MAGICKWAND_COMPOSITE_H	wand/composite.h	19;"	d
_MAGICKWAND_CONFIG_H	wand/MagickWand.h	27;"	d
_MAGICKWAND_CONFIG_H	wand/studio.h	34;"	d
_MAGICKWAND_CONJURE_H	wand/conjure.h	19;"	d
_MAGICKWAND_CONVERT_H	wand/convert.h	19;"	d
_MAGICKWAND_DEPRECATE_H	wand/deprecate.h	19;"	d
_MAGICKWAND_DISPLAY_H	wand/display.h	19;"	d
_MAGICKWAND_DRAWING_WAND_H	wand/drawing-wand.h	19;"	d
_MAGICKWAND_IDENTIFY_H	wand/identify.h	19;"	d
_MAGICKWAND_IMPORT_H	wand/import.h	19;"	d
_MAGICKWAND_MAGICK_IMAGE_H	wand/magick-image.h	20;"	d
_MAGICKWAND_MAGICK_PROPERTY_H	wand/magick-property.h	20;"	d
_MAGICKWAND_MAGICK_WAND_DEPRECATED_H	wand/magick-wand.h	20;"	d
_MAGICKWAND_MAGICK_WAND_DEPRECATED_H	wand/magick_wand.h	20;"	d
_MAGICKWAND_MAGICK_WAND_PRIVATE_H	wand/magick-wand-private.h	19;"	d
_MAGICKWAND_METHOD_ATTRIBUTE_H	wand/method-attribute.h	19;"	d
_MAGICKWAND_MOGRIFY_H	wand/mogrify.h	19;"	d
_MAGICKWAND_MOGRIFY_PRIVATE_H	wand/mogrify-private.h	19;"	d
_MAGICKWAND_MONTAGE_H	wand/montage.h	19;"	d
_MAGICKWAND_PIXEL_ITERATOR_H	wand/pixel-iterator.h	19;"	d
_MAGICKWAND_PIXEL_WAND_H	wand/pixel-wand.h	19;"	d
_MAGICKWAND_PIXEL_WAND_PRIVATE_H	wand/pixel-wand-private.h	19;"	d
_MAGICKWAND_STREAM_H	wand/stream.h	19;"	d
_MAGICKWAND_STUDIO_H	wand/studio.h	19;"	d
_MAGICKWAND_WAND_H	wand/wand.h	19;"	d
_MAGICKWAND_WAND_VIEW_H	wand/wand-view.h	19;"	d
_MAGICK_MAGICK_BASECONFIG_H	magick/magick-baseconfig.h	2;"	d
_MAGICK_MIME_PRIVATE_H	magick/mime-private.h	19;"	d
_MAGICK_MONITOR_PRIVATE_H	magick/monitor-private.h	19;"	d
_MAGICK_MORPHOLOGY_PRIVATE_H	magick/morphology-private.h	19;"	d
_MAGICK_WAND_H	wand/MagickWand.h	20;"	d
_MIME_MIME_H	magick/mime.h	19;"	d
_MagicInfo	magick/magic.h	/^typedef struct _MagicInfo$/;"	s
_MagicMapInfo	magick/magic.c	/^typedef struct _MagicMapInfo$/;"	s	file:
_MagickCLEnv	magick/opencl-private.h	/^struct _MagickCLEnv {$/;"	s
_MagickInfo	magick/magick.h	/^typedef struct _MagickInfo$/;"	s
_MagickMemoryMethods	magick/memory.c	/^typedef struct _MagickMemoryMethods$/;"	s	file:
_MagickModulo	magick/cache.c	/^typedef struct _MagickModulo$/;"	s	file:
_MagickPixelPacket	magick/pixel.h	/^typedef struct _MagickPixelPacket$/;"	s
_MagickWand	wand/magick-wand-private.h	/^struct _MagickWand$/;"	s
_MatrixInfo	magick/matrix.c	/^struct _MatrixInfo$/;"	s	file:
_MemoryInfo	magick/memory.c	/^struct _MemoryInfo$/;"	s	file:
_MemoryPool	magick/memory.c	/^typedef struct _MemoryPool$/;"	s	file:
_MimeInfo	magick/mime.c	/^struct _MimeInfo$/;"	s	file:
_ModuleInfo	magick/module.h	/^typedef struct _ModuleInfo$/;"	s
_MontageInfo	magick/montage.h	/^typedef struct _MontageInfo$/;"	s
_NTMEMORYSTATUSEX	magick/nt-base-private.h	/^typedef struct _NTMEMORYSTATUSEX$/;"	s
_NexusInfo	magick/cache-private.h	/^typedef struct _NexusInfo$/;"	s
_NodeInfo	magick/histogram.c	/^typedef struct _NodeInfo$/;"	s	file:
_NodeInfo	magick/quantize.c	/^typedef struct _NodeInfo$/;"	s	file:
_NodeInfo	magick/splay-tree.c	/^typedef struct _NodeInfo$/;"	s	file:
_Nodes	magick/histogram.c	/^typedef struct _Nodes$/;"	s	file:
_Nodes	magick/quantize.c	/^typedef struct _Nodes$/;"	s	file:
_O_BINARY	magick/blob.c	86;"	d	file:
_O_RANDOM	magick/nt-base.h	271;"	d
_O_RANDOM	magick/nt-base.h	272;"	d
_O_SEQUENTIAL	magick/nt-base.h	273;"	d
_O_SEQUENTIAL	magick/nt-base.h	274;"	d
_O_SHORT_LIVED	magick/nt-base.h	275;"	d
_O_SHORT_LIVED	magick/nt-base.h	276;"	d
_O_TEMPORARY	magick/nt-base.h	277;"	d
_O_TEMPORARY	magick/nt-base.h	278;"	d
_OffsetInfo	magick/geometry.h	/^typedef struct _OffsetInfo$/;"	s
_OptionInfo	magick/option.h	/^typedef struct _OptionInfo$/;"	s
_POSIX_PTHREAD_SEMANTICS	magick/magick-baseconfig.h	1218;"	d
_POSIX_PTHREAD_SEMANTICS	magick/magick-baseconfig.h	1222;"	d
_PathInfo	magick/draw.c	/^typedef struct _PathInfo$/;"	s	file:
_PixelIterator	wand/pixel-iterator.c	/^struct _PixelIterator$/;"	s	file:
_PixelList	magick/statistic.c	/^typedef struct _PixelList$/;"	s	file:
_PixelPacket	magick/pixel.h	/^typedef struct _PixelPacket$/;"	s
_PixelWand	wand/pixel-wand.c	/^struct _PixelWand$/;"	s	file:
_PointInfo	magick/draw.h	/^typedef struct _PointInfo$/;"	s
_PolicyInfo	magick/policy.c	/^struct _PolicyInfo$/;"	s	file:
_PolicyMapInfo	magick/policy.c	/^typedef struct _PolicyMapInfo$/;"	s	file:
_PolygonInfo	magick/draw.c	/^typedef struct _PolygonInfo$/;"	s	file:
_PrimaryInfo	magick/image.h	/^typedef struct _PrimaryInfo$/;"	s
_PrimitiveInfo	magick/draw.h	/^typedef struct _PrimitiveInfo$/;"	s
_ProfileInfo	magick/profile.h	/^typedef struct _ProfileInfo$/;"	s
_QuantizeInfo	magick/quantize.h	/^typedef struct _QuantizeInfo$/;"	s
_QuantumInfo	magick/quantum-private.h	/^struct _QuantumInfo$/;"	s
_QuantumPixelPacket	magick/pixel.h	/^typedef struct _QuantumPixelPacket$/;"	s
_QuantumState	magick/quantum-private.h	/^typedef struct _QuantumState$/;"	s
_RandomInfo	magick/random.c	/^struct _RandomInfo$/;"	s	file:
_RealPixelPacket	magick/quantize.c	/^typedef struct _RealPixelPacket$/;"	s	file:
_RectangleInfo	magick/geometry.h	/^typedef struct _RectangleInfo$/;"	s
_RegistryInfo	magick/registry.c	/^typedef struct _RegistryInfo$/;"	s	file:
_ResampleFilter	magick/resample.c	/^struct _ResampleFilter$/;"	s	file:
_ResizeFilter	magick/resize.c	/^struct _ResizeFilter$/;"	s	file:
_ResourceInfo	magick/resource.c	/^typedef struct _ResourceInfo$/;"	s	file:
_Restrict	magick/magick-baseconfig.h	1415;"	d
_SC_OPEN_MAX	magick/nt-base.h	56;"	d
_SC_PAGESIZE	magick/nt-base.h	54;"	d
_SC_PHYS_PAGES	magick/nt-base.h	55;"	d
_SegmentInfo	magick/image.h	/^typedef struct _SegmentInfo$/;"	s
_SignatureInfo	magick/signature.c	/^struct _SignatureInfo$/;"	s	file:
_SkipList	magick/statistic.c	/^typedef struct _SkipList$/;"	s	file:
_SplayTreeInfo	magick/splay-tree.c	/^struct _SplayTreeInfo$/;"	s	file:
_StopInfo	magick/draw.h	/^typedef struct _StopInfo$/;"	s
_StreamInfo	magick/stream.c	/^struct _StreamInfo$/;"	s	file:
_StringInfo	magick/string_.h	/^typedef struct _StringInfo$/;"	s
_TANDEM_SOURCE	magick/magick-baseconfig.h	1227;"	d
_ThresholdMap	magick/threshold.c	/^struct _ThresholdMap$/;"	s	file:
_Timer	magick/timer.h	/^typedef struct _Timer$/;"	s
_TimerInfo	magick/timer.h	/^typedef struct _TimerInfo$/;"	s
_TokenInfo	magick/token.c	/^struct _TokenInfo$/;"	s	file:
_TransformPacket	magick/colorspace.c	/^typedef struct _TransformPacket$/;"	s	file:
_TypeInfo	magick/type.h	/^typedef struct _TypeInfo$/;"	s
_TypeMetric	magick/draw.h	/^typedef struct _TypeMetric$/;"	s
_XAnnotateInfo	magick/xwindow-private.h	/^typedef struct _XAnnotateInfo$/;"	s
_XDrawInfo	magick/xwindow-private.h	/^typedef struct _XDrawInfo$/;"	s
_XImportInfo	magick/xwindow.h	/^typedef struct _XImportInfo$/;"	s
_XMLTreeInfo	magick/xml-tree.c	/^struct _XMLTreeInfo$/;"	s	file:
_XMLTreeRoot	magick/xml-tree.c	/^struct _XMLTreeRoot$/;"	s	file:
_XPixelInfo	magick/xwindow-private.h	/^typedef struct _XPixelInfo$/;"	s
_XResourceInfo	magick/xwindow-private.h	/^typedef struct _XResourceInfo$/;"	s
_XTextProperty	magick/PreRvIcccm.h	/^typedef struct _XTextProperty$/;"	s
_XWindowInfo	magick/xwindow-private.h	/^typedef struct _XWindowInfo$/;"	s
_XWindows	magick/xwindow-private.h	/^typedef struct _XWindows$/;"	s
_ZeroCrossing	magick/segment.c	/^typedef struct _ZeroCrossing$/;"	s	file:
__CYGWIN__	magick/magick-config.h	76;"	d
__EXTENSIONS__	magick/magick-baseconfig.h	1231;"	d
__func__	magick/magick-baseconfig.h	1344;"	d
__restrict__	magick/magick-baseconfig.h	1416;"	d
_clocks	magick/opencl-private.h	/^  long long _clocks;$/;"	m	struct:_AccelerateTimer
_freq	magick/opencl-private.h	/^  long long _freq;	$/;"	m	struct:_AccelerateTimer
_magickcore_restrict	magick/magick-baseconfig.h	1401;"	d
_magickcore_restrict	magick/magick-baseconfig.h	1403;"	d
_magickcore_restrict	magick/magick-baseconfig.h	1407;"	d
_start	magick/opencl-private.h	/^  long long _start;$/;"	m	struct:_AccelerateTimer
accelerateKernels	magick/accelerate-private.h	/^const char* accelerateKernels =$/;"	v
accelerateKernels2	magick/accelerate-private.h	/^  const char* accelerateKernels2 =$/;"	v
access	magick/nt-base.h	81;"	d
access_utf8	magick/utility-private.h	/^static inline int access_utf8(const char *path,int mode)$/;"	f
accumulator	magick/signature.c	/^    *accumulator,$/;"	m	struct:_SignatureInfo	file:
acquire_memory_handler	magick/memory.c	/^    acquire_memory_handler;$/;"	m	struct:_MagickMemoryMethods	file:
active	wand/pixel-iterator.c	/^    active;$/;"	m	struct:_PixelIterator	file:
active_index_channel	magick/cache-private.h	/^    active_index_channel;$/;"	m	struct:_CacheInfo
active_mutex	magick/semaphore-private.h	/^  active_mutex = MagickFalse;$/;"	v
adjoin	magick/image.h	/^    adjoin,$/;"	m	struct:_ImageInfo
adjoin	magick/magick.h	/^    adjoin,$/;"	m	struct:_MagickInfo
affine	magick/draw.h	/^    affine;$/;"	m	struct:_DrawInfo
affirm	magick/image.h	/^    affirm,$/;"	m	struct:_ImageInfo
align	magick/draw.h	/^    align;$/;"	m	struct:_DrawInfo
allocation	magick/memory.c	/^    *allocation,$/;"	m	struct:_DataSegmentInfo	file:
allocation	magick/memory.c	/^    allocation;$/;"	m	struct:_MemoryPool	file:
alpha	magick/color.c	/^    alpha;$/;"	m	struct:_ColorMapInfo	file:
alpha_type	magick/quantum-private.h	/^    alpha_type;$/;"	m	struct:_QuantumInfo
alphabits	image_validator/ImageValidator.c	/^    unsigned char  alphabits;$/;"	m	struct:__anon98	file:
analyzeImage	filters/analyze.c	/^ModuleExport size_t analyzeImage(Image **images,const int argc,$/;"	f
analyzeImage	magick/methods.h	102;"	d
angle	magick/draw.c	/^    angle;$/;"	m	struct:_ElementInfo	file:
angle	magick/morphology.h	/^    angle;$/;"	m	struct:KernelInfo
angular_second_moment	magick/feature.h	/^    angular_second_moment[4],$/;"	m	struct:_ChannelFeatures
annotate_context	magick/xwindow-private.h	/^    annotate_context,$/;"	m	struct:_XPixelInfo
annotate_context	magick/xwindow-private.h	/^    annotate_context,$/;"	m	struct:_XWindowInfo
annotate_semaphore	magick/annotate.c	/^  *annotate_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
antialias	magick/image.h	/^    antialias;$/;"	m	struct:_ImageInfo
append	magick/log.c	/^    append,$/;"	m	struct:_LogInfo	file:
area	magick/resource.c	/^    area,$/;"	m	struct:_ResourceInfo	file:
area_limit	magick/resource.c	/^    area_limit,$/;"	m	struct:_ResourceInfo	file:
artifacts	magick/image.h	/^    *artifacts;        \/* per image sequence image artifacts *\/$/;"	m	struct:_Image
ascent	magick/draw.h	/^    ascent,$/;"	m	struct:_TypeMetric
ascii85	magick/image.h	/^    *ascii85;$/;"	m	struct:_Image
associate_alpha	magick/quantize.c	/^    associate_alpha;$/;"	m	struct:_CubeInfo	file:
attr	image_validator/ImageValidator.c	/^    unsigned char attr;$/;"	m	struct:__anon97	file:
attributes	magick/image.h	/^    *attributes;      \/* deprecated *\/$/;"	m	struct:_Image
attributes	magick/image.h	/^    *attributes;  \/* deprecated *\/$/;"	m	struct:_ImageInfo
attributes	magick/xml-tree.c	/^    ***attributes;$/;"	m	struct:_XMLTreeRoot	file:
attributes	magick/xml-tree.c	/^    **attributes,$/;"	m	struct:_XMLTreeInfo	file:
attributes	magick/xwindow-private.h	/^    attributes;$/;"	m	struct:_XWindowInfo
authentic_pixel_cache	magick/cache-private.h	/^    authentic_pixel_cache;$/;"	m	struct:_NexusInfo
authenticate	magick/image.h	/^    *authenticate;$/;"	m	struct:_ImageInfo
average_defined	magick/resample.c	/^    average_defined;$/;"	m	struct:_ResampleFilter	file:
average_pixel	magick/resample.c	/^    average_pixel;$/;"	m	struct:_ResampleFilter	file:
avg_only	image_validator/ImageValidator.c	/^    unsigned int  avg_only     : 1;$/;"	m	struct:__anon100	file:
backdrop	magick/xwindow-private.h	/^    backdrop,$/;"	m	struct:_XWindows
backdrop	magick/xwindow-private.h	/^    backdrop;$/;"	m	struct:_XResourceInfo
background_color	magick/image.h	/^    background_color, \/* current background color attribute *\/$/;"	m	struct:_Image
background_color	magick/image.h	/^    background_color,$/;"	m	struct:_ImageInfo
background_color	magick/montage.h	/^    background_color,$/;"	m	struct:_MontageInfo
background_color	magick/xwindow-private.h	/^    *background_color,$/;"	m	struct:_XResourceInfo
background_color	magick/xwindow-private.h	/^    background_color,$/;"	m	struct:_XPixelInfo
balance	magick/splay-tree.c	/^    balance;$/;"	m	struct:_SplayTreeInfo	file:
base	magick/opencl-private.h	/^  void * base;$/;"	m	struct:MagickLibraryRec
base1	image_validator/ImageValidator.c	/^    char         *base1;$/;"	m	struct:__anon100	file:
base2	image_validator/ImageValidator.c	/^    char         *base2;$/;"	m	struct:__anon100	file:
basename	image_validator/ImageValidator.c	99;"	d	file:
bias	magick/image.h	/^    bias,$/;"	m	struct:_Image
bits	magick/quantum-private.h	/^    bits;$/;"	m	struct:_QuantumState
bitsperpixel	image_validator/ImageValidator.c	/^    unsigned char  bitsperpixel;$/;"	m	struct:__anon98	file:
black_point_compensation	magick/image.h	/^    black_point_compensation;$/;"	m	struct:_Image
blob	magick/image.h	/^    *blob;$/;"	m	struct:_Image
blob	magick/image.h	/^    *blob;$/;"	m	struct:_ImageInfo
blob	magick/memory.c	/^    *blob;$/;"	m	struct:_MemoryInfo	file:
blob_support	magick/magick.h	/^    blob_support,$/;"	m	struct:_MagickInfo
blocks	magick/memory.c	/^    *blocks[MaxBlocks+1];$/;"	m	struct:_MemoryPool	file:
blocksize	magick/cipher.c	/^    blocksize,$/;"	m	struct:_AESInfo	file:
blocksize	magick/signature.c	/^    blocksize;$/;"	m	struct:_SignatureInfo	file:
blue	image_validator/ImageValidator.c	/^    unsigned char blue;$/;"	m	struct:__anon97	file:
blue	magick/accelerate-private.h	/^    blue,$/;"	m	struct:_FloatPixelPacket
blue	magick/color.c	/^    blue;$/;"	m	struct:_ColorMapInfo	file:
blue	magick/pixel.h	/^    blue,$/;"	m	struct:_DoublePixelPacket
blue	magick/pixel.h	/^    blue,$/;"	m	struct:_LongPixelPacket
blue	magick/pixel.h	/^    blue,$/;"	m	struct:_MagickPixelPacket
blue	magick/pixel.h	/^    blue,$/;"	m	struct:_PixelPacket
blue	magick/pixel.h	/^    blue,$/;"	m	struct:_QuantumPixelPacket
blue	magick/quantize.c	/^    blue,$/;"	m	struct:_RealPixelPacket	file:
blue	magick/segment.c	/^    blue;$/;"	m	struct:_Cluster	file:
blue_primary	magick/image.h	/^    blue_primary,$/;"	m	struct:_ChromaticityInfo
blur	magick/image.h	/^    blur,           \/* deprecated *\/$/;"	m	struct:_Image
blur	magick/resize.c	/^    blur,           \/* x-scale (blur-sharpen) *\/$/;"	m	struct:_ResizeFilter	file:
border_color	magick/draw.h	/^    border_color;$/;"	m	struct:_DrawInfo
border_color	magick/image.h	/^    border_color,     \/* current bordercolor attribute *\/$/;"	m	struct:_Image
border_color	magick/image.h	/^    border_color,$/;"	m	struct:_ImageInfo
border_color	magick/montage.h	/^    border_color,$/;"	m	struct:_MontageInfo
border_color	magick/xwindow-private.h	/^    *border_color;$/;"	m	struct:_XResourceInfo
border_color	magick/xwindow-private.h	/^    border_color,$/;"	m	struct:_XPixelInfo
border_width	magick/montage.h	/^    border_width;$/;"	m	struct:_MontageInfo
border_width	magick/xwindow-private.h	/^    border_width;$/;"	m	struct:_XResourceInfo
border_width	magick/xwindow-private.h	/^    border_width;$/;"	m	struct:_XWindowInfo
borders	magick/xwindow.h	/^    borders,$/;"	m	struct:_XImportInfo
bound	magick/memory.c	/^    *bound;$/;"	m	struct:_DataSegmentInfo	file:
bounding_box	magick/draw.h	/^    bounding_box;$/;"	m	struct:_GradientInfo
bounds	magick/draw.c	/^    bounds;$/;"	m	struct:_EdgeInfo	file:
bounds	magick/draw.h	/^    bounds;$/;"	m	struct:_DrawInfo
bounds	magick/draw.h	/^    bounds;$/;"	m	struct:_TypeMetric
box_color	magick/xwindow-private.h	/^    box_color,$/;"	m	struct:_XPixelInfo
box_index	magick/xwindow-private.h	/^    box_index,$/;"	m	struct:_XPixelInfo
buckets	image_validator/ImageValidator.c	/^    unsigned int *buckets;$/;"	m	struct:__anon100	file:
buffer	magick/compress.c	/^    buffer[10];$/;"	m	struct:_Ascii85Info	file:
busy_cursor	magick/xwindow-private.h	/^    busy_cursor;$/;"	m	struct:_XWindowInfo
bzfile	magick/blob.c	/^    *bzfile;$/;"	m	union:FileInfo	file:
c_locale	magick/locale.c	/^  c_locale = (locale_t) NULL;$/;"	v	file:
cabs	magick/fourier.c	71;"	d	file:
cache	magick/cache-private.h	/^    *cache,$/;"	m	struct:_NexusInfo
cache	magick/image.h	/^    *cache,$/;"	m	struct:_Image
cache	magick/image.h	/^    *cache;$/;"	m	struct:_ImageInfo
cache	magick/quantize.c	/^    *cache;$/;"	m	struct:_CubeInfo	file:
cache_filename	magick/cache-private.h	/^    cache_filename[MaxTextExtent];$/;"	m	struct:_CacheInfo
cache_semaphore	magick/cache.c	/^  *cache_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
cache_threads	magick/cache.c	621;"	d	file:
capacity	magick/hashmap.c	/^    capacity,$/;"	m	struct:_HashmapInfo	file:
capacity	magick/hashmap.c	/^    capacity,$/;"	m	struct:_LinkedListInfo	file:
carg	magick/fourier.c	74;"	d	file:
center	magick/draw.h	/^    center;$/;"	m	struct:_GradientInfo
center	magick/fourier.c	/^    center;$/;"	m	struct:_FourierInfo	file:
center	magick/segment.c	/^    center;$/;"	m	struct:_ExtentPacket	file:
centroid	magick/statistic.h	/^    centroid,$/;"	m	struct:_ChannelMoments
channel	magick/fourier.c	/^    channel;$/;"	m	struct:_FourierInfo	file:
channel	magick/image.h	/^    channel;$/;"	m	struct:_ImageInfo
channels	magick/cache-private.h	/^    channels;$/;"	m	struct:_CacheInfo
channels	magick/image.h	/^    channels;$/;"	m	struct:_Image
chdir	magick/nt-base.h	85;"	d
checkAccelerateCondition	magick/accelerate.c	/^static MagickBooleanType checkAccelerateCondition(const Image* image, const ChannelType channel)$/;"	f	file:
checkHistogramCondition	magick/accelerate.c	/^static MagickBooleanType checkHistogramCondition(Image *image, const ChannelType channel)$/;"	f	file:
checkOpenCLEnvironment	magick/accelerate.c	/^static MagickBooleanType checkOpenCLEnvironment(ExceptionInfo* exception)$/;"	f	file:
check_malloc	image_validator/ImageValidator.c	91;"	d	file:
chi	magick/geometry.h	/^    chi;$/;"	m	struct:_GeometryInfo
child	magick/histogram.c	/^    *child[16];$/;"	m	struct:_NodeInfo	typeref:struct:_NodeInfo::_NodeInfo	file:
child	magick/quantize.c	/^    *child[16];$/;"	m	struct:_NodeInfo	typeref:struct:_NodeInfo::	file:
child	magick/segment.c	/^    *child;$/;"	m	struct:_IntervalTree	typeref:struct:_IntervalTree::	file:
child	magick/xml-tree.c	/^    *child;$/;"	m	struct:_XMLTreeInfo	file:
chromaticity	magick/image.h	/^    chromaticity;$/;"	m	struct:_Image
chsize	magick/nt-base.h	73;"	d
chsize	magick/nt-base.h	75;"	d
cimag	magick/fourier.c	77;"	d	file:
clBuildProgram	magick/opencl-private.h	/^  MAGICKpfn_clBuildProgram                           clBuildProgram;$/;"	m	struct:MagickLibraryRec
clCreateBuffer	magick/opencl-private.h	/^  MAGICKpfn_clCreateBuffer                           clCreateBuffer;$/;"	m	struct:MagickLibraryRec
clCreateCommandQueue	magick/opencl-private.h	/^  MAGICKpfn_clCreateCommandQueue                     clCreateCommandQueue;$/;"	m	struct:MagickLibraryRec
clCreateContext	magick/opencl-private.h	/^  MAGICKpfn_clCreateContext                          clCreateContext;$/;"	m	struct:MagickLibraryRec
clCreateKernel	magick/opencl-private.h	/^  MAGICKpfn_clCreateKernel                           clCreateKernel;$/;"	m	struct:MagickLibraryRec
clCreateProgramWithBinary	magick/opencl-private.h	/^  MAGICKpfn_clCreateProgramWithBinary                clCreateProgramWithBinary;$/;"	m	struct:MagickLibraryRec
clCreateProgramWithSource	magick/opencl-private.h	/^  MAGICKpfn_clCreateProgramWithSource                clCreateProgramWithSource;$/;"	m	struct:MagickLibraryRec
clEnqueueMapBuffer	magick/opencl-private.h	/^  MAGICKpfn_clEnqueueMapBuffer                       clEnqueueMapBuffer;$/;"	m	struct:MagickLibraryRec
clEnqueueNDRangeKernel	magick/opencl-private.h	/^  MAGICKpfn_clEnqueueNDRangeKernel                   clEnqueueNDRangeKernel;$/;"	m	struct:MagickLibraryRec
clEnqueueReadBuffer	magick/opencl-private.h	/^  MAGICKpfn_clEnqueueReadBuffer                      clEnqueueReadBuffer;$/;"	m	struct:MagickLibraryRec
clEnqueueUnmapMemObject	magick/opencl-private.h	/^  MAGICKpfn_clEnqueueUnmapMemObject                  clEnqueueUnmapMemObject;$/;"	m	struct:MagickLibraryRec
clEnqueueWriteBuffer	magick/opencl-private.h	/^  MAGICKpfn_clEnqueueWriteBuffer                     clEnqueueWriteBuffer;$/;"	m	struct:MagickLibraryRec
clFinish	magick/opencl-private.h	/^  MAGICKpfn_clFinish                                 clFinish;$/;"	m	struct:MagickLibraryRec
clFlush	magick/opencl-private.h	/^  MAGICKpfn_clFlush                                  clFlush;$/;"	m	struct:MagickLibraryRec
clGetDeviceIDs	magick/opencl-private.h	/^  MAGICKpfn_clGetDeviceIDs                           clGetDeviceIDs;$/;"	m	struct:MagickLibraryRec
clGetDeviceInfo	magick/opencl-private.h	/^  MAGICKpfn_clGetDeviceInfo                          clGetDeviceInfo;$/;"	m	struct:MagickLibraryRec
clGetPlatformIDs	magick/opencl-private.h	/^  MAGICKpfn_clGetPlatformIDs                         clGetPlatformIDs;$/;"	m	struct:MagickLibraryRec
clGetPlatformInfo	magick/opencl-private.h	/^  MAGICKpfn_clGetPlatformInfo                        clGetPlatformInfo;$/;"	m	struct:MagickLibraryRec
clGetProgramBuildInfo	magick/opencl-private.h	/^  MAGICKpfn_clGetProgramBuildInfo                    clGetProgramBuildInfo;$/;"	m	struct:MagickLibraryRec
clGetProgramInfo	magick/opencl-private.h	/^  MAGICKpfn_clGetProgramInfo                         clGetProgramInfo;$/;"	m	struct:MagickLibraryRec
clReleaseCommandQueue	magick/opencl-private.h	/^  MAGICKpfn_clReleaseCommandQueue                    clReleaseCommandQueue;$/;"	m	struct:MagickLibraryRec
clReleaseKernel	magick/opencl-private.h	/^  MAGICKpfn_clReleaseKernel                          clReleaseKernel;$/;"	m	struct:MagickLibraryRec
clReleaseMemObject	magick/opencl-private.h	/^  MAGICKpfn_clReleaseMemObject                       clReleaseMemObject;$/;"	m	struct:MagickLibraryRec
clReleaseProgram	magick/opencl-private.h	/^  MAGICKpfn_clReleaseProgram                         clReleaseProgram;$/;"	m	struct:MagickLibraryRec
clSetKernelArg	magick/opencl-private.h	/^  MAGICKpfn_clSetKernelArg                           clSetKernelArg;$/;"	m	struct:MagickLibraryRec
cl_command_queue	magick/opencl-private.h	/^  typedef void* cl_command_queue;$/;"	t
cl_context	magick/opencl-private.h	/^  typedef void* cl_context;$/;"	t
cl_device_id	magick/opencl-private.h	/^  typedef void* cl_device_id;$/;"	t
cl_device_type	magick/opencl-private.h	/^  typedef struct { unsigned char t[8]; } cl_device_type; \/* 64-bit *\/$/;"	t	typeref:struct:__anon12
cl_kernel	magick/opencl-private.h	/^  typedef void* cl_kernel;$/;"	t
cl_mem	magick/opencl-private.h	/^  typedef void* cl_mem;$/;"	t
cl_platform_id	magick/opencl-private.h	/^  typedef void* cl_platform_id;$/;"	t
clampval	image_validator/ImageValidator.c	758;"	d	file:
class_hints	magick/xwindow-private.h	/^    *class_hints;$/;"	m	struct:_XWindows
client_data	magick/image.h	/^    *client_data,$/;"	m	struct:_Image
client_data	magick/image.h	/^    *client_data,$/;"	m	struct:_ImageInfo
client_data	magick/magick.h	/^    *client_data;$/;"	m	struct:_MagickInfo
client_data	magick/stream.c	/^    *client_data;$/;"	m	struct:_StreamInfo	file:
client_name	magick/xwindow-private.h	/^    *client_name;$/;"	m	struct:_XResourceInfo
clip_mask	magick/draw.h	/^    *clip_mask;$/;"	m	struct:_DrawInfo
clip_mask	magick/image.h	/^    *clip_mask;$/;"	m	struct:_Image	typeref:struct:_Image::_Image
clip_units	magick/draw.h	/^    clip_units;$/;"	m	struct:_DrawInfo
close	magick/nt-base.h	88;"	d
close_server	magick/xwindow-private.h	/^    close_server,$/;"	m	struct:_XResourceInfo
closedir	magick/nt-base.h	91;"	d
cmsColorSpaceSignature	magick/profile.c	92;"	d	file:
cmsCreateTransformTHR	magick/profile.c	95;"	d	file:
cmsOpenProfileFromMemTHR	magick/profile.c	98;"	d	file:
cmsSetLogErrorHandler	magick/profile.c	94;"	d	file:
cmsSigCmykData	magick/profile.c	84;"	d	file:
cmsSigGrayData	magick/profile.c	85;"	d	file:
cmsSigLabData	magick/profile.c	86;"	d	file:
cmsSigLinkClass	magick/profile.c	91;"	d	file:
cmsSigLuvData	magick/profile.c	87;"	d	file:
cmsSigRgbData	magick/profile.c	88;"	d	file:
cmsSigXYZData	magick/profile.c	89;"	d	file:
cmsSigYCbCrData	magick/profile.c	90;"	d	file:
cmsUInt32Number	magick/profile.c	93;"	d	file:
cmsUInt32Number	magick/property.c	101;"	d	file:
cmsUInt32Number	magick/property.c	2918;"	d	file:
code	magick/compress.c	/^    code,$/;"	m	struct:HuffmanTable	file:
code	magick/draw.c	/^    code;$/;"	m	struct:_PathInfo	file:
code_mask	magick/token-private.h	/^    code_mask,$/;"	m	struct:__anon49
code_value	magick/token-private.h	/^    code_value,$/;"	m	struct:__anon49
coder_cache	magick/coder.c	/^  *coder_cache = (SplayTreeInfo *) NULL;$/;"	v	file:
coder_semaphore	magick/coder.c	/^  *coder_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
coefficient	magick/resize.c	/^    coefficient[7]; \/* cubic coefficents for BC-cubic filters *\/$/;"	m	struct:_ResizeFilter	file:
color	magick/color.h	/^    color;$/;"	m	struct:_ColorInfo
color	magick/draw.h	/^    color;$/;"	m	struct:_StopInfo
color_cache	magick/color.c	/^  *color_cache = (LinkedListInfo *) NULL;$/;"	v	file:
color_number	magick/quantize.c	/^    color_number,$/;"	m	struct:_NodeInfo	file:
color_number	magick/quantize.c	/^    color_number;$/;"	m	struct:_CubeInfo	file:
color_profile	magick/image.h	/^    color_profile,$/;"	m	struct:_Image
color_recovery	magick/xwindow-private.h	/^    color_recovery,$/;"	m	struct:_XResourceInfo
color_semaphore	magick/color.c	/^  *color_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
colormap	magick/image.h	/^    *colormap,$/;"	m	struct:_Image
colormap	magick/xwindow-private.h	/^    colormap;$/;"	m	struct:_XResourceInfo
colormapdata	image_validator/ImageValidator.c	/^    Pixel         *colormapdata;$/;"	m	struct:__anon98	file:
colormapdepth	image_validator/ImageValidator.c	/^    unsigned char  colormapdepth;$/;"	m	struct:__anon98	file:
colormaplength	image_validator/ImageValidator.c	/^    unsigned short colormaplength;$/;"	m	struct:__anon98	file:
colormaporigin	image_validator/ImageValidator.c	/^    unsigned short colormaporigin;$/;"	m	struct:__anon98	file:
colormaptype	image_validator/ImageValidator.c	/^    unsigned char  colormaptype;$/;"	m	struct:__anon98	file:
colors	magick/fx.c	/^    *colors,$/;"	m	struct:_FxInfo	file:
colors	magick/histogram.c	/^    colors,$/;"	m	struct:_CubeInfo	file:
colors	magick/image.h	/^    colors;          \/* size of color table on read *\/$/;"	m	struct:_Image
colors	magick/image.h	/^    colors;$/;"	m	struct:_ImageInfo
colors	magick/quantize.c	/^    colors,$/;"	m	struct:_CubeInfo	file:
colors	magick/xwindow-private.h	/^    colors;$/;"	m	struct:_XPixelInfo
colors	magick/xwindow-private.h	/^    colors;$/;"	m	struct:_XResourceInfo
colorspace	magick/cache-private.h	/^    colorspace;$/;"	m	struct:_CacheInfo
colorspace	magick/image.h	/^    colorspace;      \/* colorspace of image data *\/$/;"	m	struct:_Image
colorspace	magick/image.h	/^    colorspace;$/;"	m	struct:_ImageInfo
colorspace	magick/pixel.h	/^    colorspace;$/;"	m	struct:_MagickPixelPacket
colorspace	magick/quantize.h	/^    colorspace;$/;"	m	struct:_QuantizeInfo
columns	magick/cache-private.h	/^    columns,$/;"	m	struct:_CacheInfo
columns	magick/image.h	/^    columns,         \/* physical size of image *\/$/;"	m	struct:_Image
columns	magick/matrix.c	/^    columns,$/;"	m	struct:_MatrixInfo	file:
command	magick/xwindow-private.h	/^    command,$/;"	m	struct:_XWindows
commands	magick/delegate.h	/^    *commands;$/;"	m	struct:_DelegateInfo
compare	magick/hashmap.c	/^    (*compare)(const void *,const void *);$/;"	m	struct:_HashmapInfo	file:
compare	magick/splay-tree.c	/^    (*compare)(const void *,const void *);$/;"	m	struct:_SplayTreeInfo	file:
compliance	magick/color.c	/^    compliance;$/;"	m	struct:_ColorMapInfo	file:
compliance	magick/color.h	/^    compliance;$/;"	m	struct:_ColorInfo
compose	magick/draw.h	/^    compose;$/;"	m	struct:_DrawInfo
compose	magick/image.h	/^    compose;        \/* alpha composition method for layered images *\/$/;"	m	struct:_Image
compression	magick/deprecate.h	/^    compression;$/;"	m	struct:_ImageAttribute
compression	magick/image.h	/^    compression;     \/* compression of image when read\/write *\/$/;"	m	struct:_Image
compression	magick/image.h	/^    compression;$/;"	m	struct:_ImageInfo
computeSSIM	image_validator/ImageValidator.c	/^int computeSSIM(params param) {$/;"	f
configure_cache	magick/configure.c	/^  *configure_cache = (LinkedListInfo *) NULL;$/;"	v	file:
configure_semaphore	magick/configure.c	/^  *configure_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
confirm_edit	magick/xwindow-private.h	/^    confirm_edit;$/;"	m	struct:_XResourceInfo
confirm_exit	magick/xwindow-private.h	/^    confirm_exit,$/;"	m	struct:_XResourceInfo
const	magick/MagickCore.h	34;"	d
const	magick/studio.h	44;"	d
const	wand/MagickWand.h	34;"	d
const	wand/studio.h	44;"	d
content	magick/xml-tree.c	/^    *content;$/;"	m	struct:_XMLTreeInfo	file:
context	magick/opencl-private.h	/^  cl_context context;$/;"	m	struct:_MagickCLEnv
context	magick/xwindow-private.h	/^    context,$/;"	m	struct:_XWindows
contrast	magick/feature.h	/^    contrast[4],$/;"	m	struct:_ChannelFeatures
conversion	image_validator/ImageValidator.c	/^    enum { REC709, REC601, HSP } conversion;$/;"	m	struct:__anon100	typeref:enum:__anon100::__anon101	file:
coordinate_info	magick/xwindow-private.h	/^    *coordinate_info;$/;"	m	struct:_XDrawInfo
coordinates	magick/draw.h	/^    coordinates;$/;"	m	struct:_PrimitiveInfo
copy_image	magick/xwindow-private.h	/^    *copy_image;$/;"	m	struct:_XResourceInfo
correlation	magick/feature.h	/^    correlation[4],$/;"	m	struct:_ChannelFeatures
count	magick/compress.c	/^    count;$/;"	m	struct:HuffmanTable	file:
count	magick/histogram.h	/^    count;$/;"	m	struct:_ColorPacket
count	magick/segment.c	/^    count,$/;"	m	struct:_Cluster	file:
count	magick/statistic.c	/^    count,$/;"	m	struct:_ListNode	file:
count	wand/pixel-wand.c	/^    count;$/;"	m	struct:_PixelWand	file:
covariance	image_validator/ImageValidator.c	/^double covariance(double *values1, double *values2, double mean1, double mean2, int n) {$/;"	f
creal	magick/fourier.c	80;"	d	file:
create_utf8_string	magick/nt-base.c	/^static inline char *create_utf8_string(const wchar_t *wideChar)$/;"	f	file:
create_wchar_path	magick/utility-private.h	/^static inline wchar_t *create_wchar_path(const char *utf8)$/;"	f
crop_geometry	magick/xwindow-private.h	/^    *crop_geometry;$/;"	m	struct:_XWindowInfo
crossings	magick/segment.c	/^    crossings[256];$/;"	m	struct:_ZeroCrossing	file:
cursor	magick/xwindow-private.h	/^    cursor,$/;"	m	struct:_XWindowInfo
cx	magick/draw.c	/^    cx,$/;"	m	struct:_ElementInfo	file:
cy	magick/draw.c	/^    cy,$/;"	m	struct:_ElementInfo	file:
d_name	magick/nt-base-private.h	/^    d_name[2048];$/;"	m	struct:dirent
d_namlen	magick/nt-base-private.h	/^    d_namlen;$/;"	m	struct:dirent
dash_offset	magick/draw.h	/^    dash_offset;$/;"	m	struct:_DrawInfo
dash_pattern	magick/draw.h	/^    *dash_pattern;$/;"	m	struct:_DrawInfo
data	magick/blob.c	/^    *data;$/;"	m	struct:_BlobInfo	file:
data	magick/xwindow-private.h	/^    data,$/;"	m	struct:_XWindowInfo
data_type	magick/mime.c	/^    data_type;$/;"	m	struct:_MimeInfo	file:
datatypecode	image_validator/ImageValidator.c	/^    enum { NODATA = 0, COLORMAP, TRUECOLOR, GRAYSCALE } datatypecode;$/;"	m	struct:__anon98	typeref:enum:__anon98::__anon99	file:
datum	magick/string_.h	/^    *datum;$/;"	m	struct:_StringInfo
debug	image_validator/ImageValidator.c	/^    unsigned int  debug        : 3;$/;"	m	struct:__anon100	file:
debug	magick/blob.c	/^    debug;$/;"	m	struct:_BlobInfo	file:
debug	magick/cache-private.h	/^    debug;$/;"	m	struct:_CacheInfo
debug	magick/cache-view.c	/^    debug;$/;"	m	struct:_CacheView	file:
debug	magick/distribute-cache-private.h	/^    debug;$/;"	m	struct:_DistributeCacheInfo
debug	magick/draw.h	/^    debug;$/;"	m	struct:_DrawInfo
debug	magick/draw.h	/^    debug;$/;"	m	struct:_GradientInfo
debug	magick/image.h	/^    debug;            \/* debug output attribute *\/$/;"	m	struct:_Image
debug	magick/image.h	/^    debug;$/;"	m	struct:_ImageInfo
debug	magick/montage.h	/^    debug;$/;"	m	struct:_MontageInfo
debug	magick/policy.c	/^    debug;$/;"	m	struct:_PolicyInfo	file:
debug	magick/resample.c	/^    debug;$/;"	m	struct:_ResampleFilter	file:
debug	magick/splay-tree.c	/^    debug;$/;"	m	struct:_SplayTreeInfo	file:
debug	magick/xml-tree.c	/^    debug;$/;"	m	struct:_XMLTreeInfo	file:
debug	magick/xml-tree.c	/^    debug;$/;"	m	struct:_XMLTreeRoot	file:
debug	wand/drawing-wand.c	/^    debug;$/;"	m	struct:_DrawingWand	file:
debug	wand/magick-wand-private.h	/^    debug;$/;"	m	struct:_MagickWand
debug	wand/pixel-iterator.c	/^    debug;$/;"	m	struct:_PixelIterator	file:
debug	wand/pixel-wand.c	/^    debug;$/;"	m	struct:_PixelWand	file:
decipher_key	magick/cipher.c	/^    *decipher_key;$/;"	m	struct:_AESInfo	file:
decode	magick/delegate.h	/^    *decode,$/;"	m	struct:_DelegateInfo
decoder	magick/magick.h	/^    *decoder;$/;"	m	struct:_MagickInfo
decorate	magick/draw.h	/^    decorate;$/;"	m	struct:_DrawInfo
degrees	magick/xwindow-private.h	/^    degrees;$/;"	m	struct:_XAnnotateInfo
degrees	magick/xwindow-private.h	/^    degrees;$/;"	m	struct:_XDrawInfo
delay	magick/image.h	/^    delay;          \/* Animation delay time *\/$/;"	m	struct:_Image
delay	magick/xwindow-private.h	/^    delay;$/;"	m	struct:_XResourceInfo
delegate_cache	magick/delegate.c	/^  *delegate_cache = (LinkedListInfo *) NULL;$/;"	v	file:
delegate_semaphore	magick/delegate.c	/^  *delegate_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
delete_instance	magick/delegate-private.h	/^    (MagickDLLCall *delete_instance)(gs_main_instance *);$/;"	m	struct:_GhostInfo
density	magick/draw.h	/^    *density;$/;"	m	struct:_DrawInfo
density	magick/image.h	/^    *density;$/;"	m	struct:_ImageInfo
depth	magick/image.h	/^    depth,           \/* depth of image on read\/write *\/$/;"	m	struct:_Image
depth	magick/image.h	/^    depth;$/;"	m	struct:_ImageInfo
depth	magick/pixel.h	/^    depth;$/;"	m	struct:_MagickPixelPacket
depth	magick/quantize.c	/^    depth;$/;"	m	struct:_CubeInfo	file:
depth	magick/quantum-private.h	/^    depth,$/;"	m	struct:_QuantumInfo
depth	magick/statistic.h	/^    depth;$/;"	m	struct:_ChannelStatistics
depth	magick/xwindow-private.h	/^    depth;$/;"	m	struct:_XWindowInfo
depth_color	magick/xwindow-private.h	/^    depth_color,$/;"	m	struct:_XPixelInfo
descend	magick/xwindow.h	/^    descend,$/;"	m	struct:_XImportInfo
descent	magick/draw.h	/^    descent,$/;"	m	struct:_TypeMetric
description	magick/exception.h	/^    *description;$/;"	m	struct:_ExceptionInfo
description	magick/magick.h	/^    *description,$/;"	m	struct:_MagickInfo
description	magick/mime.c	/^    *description,$/;"	m	struct:_MimeInfo	file:
description	magick/threshold.c	/^    *description;$/;"	m	struct:_ThresholdMap	file:
description	magick/type.h	/^    *description,$/;"	m	struct:_TypeInfo
destroy	magick/xwindow-private.h	/^    destroy;$/;"	m	struct:_XWindowInfo
destroy	wand/drawing-wand.c	/^    destroy,$/;"	m	struct:_DrawingWand	file:
destroy_memory_handler	magick/memory.c	/^    destroy_memory_handler;$/;"	m	struct:_MagickMemoryMethods	file:
destroy_pixel_handler	magick/cache-private.h	/^    destroy_pixel_handler;$/;"	m	struct:_CacheMethods
device	magick/opencl-private.h	/^  cl_device_id device;$/;"	m	struct:_MagickCLEnv
deviceType	magick/opencl-private.h	/^  cl_device_type deviceType;$/;"	m	struct:_MagickCLEnv
diff	image_validator/ImageValidator.c	/^    char         *diff;$/;"	m	struct:__anon100	file:
difference_entropy	magick/feature.h	/^    difference_entropy[4],$/;"	m	struct:_ChannelFeatures
difference_variance	magick/feature.h	/^    difference_variance[4],$/;"	m	struct:_ChannelFeatures
digest	magick/signature.c	/^    *digest,$/;"	m	struct:_SignatureInfo	file:
digestsize	magick/signature.c	/^    digestsize,$/;"	m	struct:_SignatureInfo	file:
direction	magick/draw.c	/^    direction;$/;"	m	struct:_EdgeInfo	file:
direction	magick/draw.h	/^    direction;$/;"	m	struct:_DrawInfo
directory	magick/image.h	/^    *directory,$/;"	m	struct:_Image
dirent	magick/nt-base-private.h	/^struct dirent$/;"	s
dirent	magick/studio.h	176;"	d
dirent	wand/studio.h	177;"	d
disableProgramCache	magick/opencl-private.h	/^  MagickBooleanType disableProgramCache; \/* disable the OpenCL program cache *\/$/;"	m	struct:_MagickCLEnv
disk	magick/resource.c	/^    disk,$/;"	m	struct:_ResourceInfo	file:
disk_limit	magick/resource.c	/^    disk_limit,$/;"	m	struct:_ResourceInfo	file:
display	magick/xwindow-private.h	/^    *display;$/;"	m	struct:_XWindows
display_gamma	magick/xwindow-private.h	/^    *display_gamma;$/;"	m	struct:_XResourceInfo
display_warnings	magick/xwindow-private.h	/^    display_warnings,$/;"	m	struct:_XResourceInfo
dispose	magick/image.h	/^    dispose;        \/* GIF animation disposal method *\/$/;"	m	struct:_Image
distance	magick/quantize.c	/^    distance,$/;"	m	struct:_CubeInfo	file:
dither	magick/image.h	/^    dither,$/;"	m	struct:_ImageInfo
dither	magick/image.h	/^    dither;            \/* dithering method during color reduction *\/$/;"	m	struct:_Image
dither	magick/quantize.h	/^    dither;$/;"	m	struct:_QuantizeInfo
dither_method	magick/quantize.h	/^    dither_method;$/;"	m	struct:_QuantizeInfo
divisor	magick/threshold.c	/^    divisor,$/;"	m	struct:_ThresholdMap	file:
dnd_protocols	magick/xwindow-private.h	/^    dnd_protocols;$/;"	m	struct:_XWindows
do_interpolate	magick/resample.c	/^    do_interpolate,$/;"	m	struct:_ResampleFilter	file:
domain	magick/log.c	/^  const char *domain,const char *event)$/;"	v	file:
domain	magick/policy.c	/^    domain;$/;"	m	struct:_PolicyInfo	file:
domain	magick/policy.c	/^    domain;$/;"	m	struct:_PolicyMapInfo	file:
dpc_read	magick/distribute-cache.c	/^static inline MagickOffsetType dpc_read(int file,const MagickSizeType length,$/;"	f	file:
dpc_send	magick/distribute-cache.c	/^static inline MagickOffsetType dpc_send(int file,const MagickSizeType length,$/;"	f	file:
dump_header	image_validator/ImageValidator.c	/^void dump_header(const char *fname, TargaImage *tga) {$/;"	f
dump_le16	image_validator/ImageValidator.c	930;"	d	file:
dump_le8	image_validator/ImageValidator.c	929;"	d	file:
dump_tga	image_validator/ImageValidator.c	/^void dump_tga(const char *fname, TargaImage *tga) {$/;"	f
dumpdiff	image_validator/ImageValidator.c	/^    unsigned int  dumpdiff     : 1;$/;"	m	struct:__anon100	file:
dumpfile	image_validator/ImageValidator.c	/^    unsigned int  dumpfile     : 1;$/;"	m	struct:__anon100	file:
dumpheader	image_validator/ImageValidator.c	/^    unsigned int  dumpheader   : 1;$/;"	m	struct:__anon100	file:
dumpluma	image_validator/ImageValidator.c	/^    unsigned int  dumpluma     : 1;$/;"	m	struct:__anon100	file:
dumptable	image_validator/ImageValidator.c	558;"	d	file:
duration	magick/image.h	/^    duration;       \/* Total animation duration sum(delay*iterations) *\/$/;"	m	struct:_Image
dwLength	magick/nt-base-private.h	/^    dwLength,$/;"	m	struct:_NTMEMORYSTATUSEX
dwMemoryLoad	magick/nt-base-private.h	/^    dwMemoryLoad;$/;"	m	struct:_NTMEMORYSTATUSEX
edges	magick/draw.c	/^    *edges;$/;"	m	struct:_PolygonInfo	file:
elapsed	magick/timer.h	/^    elapsed;$/;"	m	struct:_TimerInfo
element	magick/xwindow-private.h	/^    element;$/;"	m	struct:_XDrawInfo
element_reference	magick/draw.h	/^    element_reference;$/;"	m	struct:_DrawInfo
elements	magick/hashmap.c	/^    elements;$/;"	m	struct:_LinkedListInfo	file:
elements	magick/matrix.c	/^    *elements;$/;"	m	struct:_MatrixInfo	file:
ellipse_angle	magick/statistic.h	/^    ellipse_angle,$/;"	m	struct:_ChannelMoments
ellipse_axis	magick/statistic.h	/^    ellipse_axis;$/;"	m	struct:_ChannelMoments
ellipse_eccentricity	magick/statistic.h	/^    ellipse_eccentricity,$/;"	m	struct:_ChannelMoments
ellipse_intensity	magick/statistic.h	/^    ellipse_intensity;$/;"	m	struct:_ChannelMoments
encipher_key	magick/cipher.c	/^    *encipher_key,$/;"	m	struct:_AESInfo	file:
encode	magick/delegate.h	/^    *encode,$/;"	m	struct:_DelegateInfo
encoder	magick/magick.h	/^    *encoder;$/;"	m	struct:_MagickInfo
encoding	magick/PreRvIcccm.h	/^    encoding;$/;"	m	struct:_XTextProperty
encoding	magick/draw.h	/^    *encoding;$/;"	m	struct:_DrawInfo
encoding	magick/type.h	/^    *encoding,$/;"	m	struct:_TypeInfo
endian	magick/image.h	/^    endian;         \/* raw data integer ordering on read\/write *\/$/;"	m	struct:_Image
endian	magick/image.h	/^    endian;$/;"	m	struct:_ImageInfo
endian	magick/mime.c	/^    endian;$/;"	m	struct:_MimeInfo	file:
endian	magick/quantum-private.h	/^    endian;$/;"	m	struct:_QuantumInfo
endian_support	magick/magick.h	/^    endian_support,$/;"	m	struct:_MagickInfo
entities	magick/xml-tree.c	/^    **entities,$/;"	m	struct:_XMLTreeRoot	file:
entries	magick/hashmap.c	/^    entries,$/;"	m	struct:_HashmapInfo	file:
entropy	magick/feature.h	/^    entropy[4],$/;"	m	struct:_ChannelFeatures
environ	magick/random.c	118;"	d	file:
eof	magick/blob.c	/^    eof;$/;"	m	struct:_BlobInfo	file:
error	magick/image.h	/^    error;$/;"	m	struct:_Image
error	magick/quantize.c	/^    error[ErrorQueueLength];$/;"	m	struct:_CubeInfo	file:
error_handler	magick/exception.c	/^  error_handler = DefaultErrorHandler;$/;"	v	file:
error_number	magick/exception.h	/^    error_number;$/;"	m	struct:_ExceptionInfo
event	magick/display.c	/^static int XPredicate(Display *magick_unused(display),XEvent *event,char *data)$/;"	v	file:
event	magick/log.c	/^    event;$/;"	m	struct:_EventInfo	file:
event_mask	magick/log.c	/^    event_mask;$/;"	m	struct:_LogInfo	file:
event_mask	magick/log.c	/^    event_mask;$/;"	m	struct:_LogMapInfo	file:
event_semaphore	magick/log.c	/^  *event_semaphore = (SemaphoreInfo *) NULL,$/;"	v	file:
exception	magick/fx.c	/^    *exception;$/;"	m	struct:_FxInfo	file:
exception	magick/image.h	/^    exception;        \/* Error handling report *\/$/;"	m	struct:_Image
exception	magick/resample.c	/^    *exception;$/;"	m	struct:_ResampleFilter	file:
exception	magick/stream.c	/^    *exception;$/;"	m	struct:_StreamInfo	file:
exception	wand/drawing-wand.c	/^    *exception;$/;"	m	struct:_DrawingWand	file:
exception	wand/magick-wand-private.h	/^    *exception;$/;"	m	struct:_MagickWand
exception	wand/pixel-iterator.c	/^    *exception;$/;"	m	struct:_PixelIterator	file:
exception	wand/pixel-wand.c	/^    *exception;$/;"	m	struct:_PixelWand	file:
exceptions	magick/exception.h	/^    *exceptions;$/;"	m	struct:_ExceptionInfo
exempt	magick/blob.c	/^    exempt,$/;"	m	struct:_BlobInfo	file:
exempt	magick/coder.h	/^    exempt,$/;"	m	struct:_CoderInfo
exempt	magick/color.h	/^    exempt,$/;"	m	struct:_ColorInfo
exempt	magick/configure.h	/^    exempt,$/;"	m	struct:_ConfigureInfo
exempt	magick/magic.h	/^    exempt,$/;"	m	struct:_MagicInfo
exempt	magick/policy.c	/^    exempt,$/;"	m	struct:_PolicyInfo	file:
exit	magick/delegate-private.h	/^    (MagickDLLCall *exit)(gs_main_instance *);$/;"	m	struct:_GhostInfo
expression	magick/fx.c	/^    *expression;$/;"	m	struct:_FxInfo	file:
extent	magick/blob.c	/^    extent,$/;"	m	struct:_BlobInfo	file:
extent	magick/image.h	/^    extent;$/;"	m	struct:_Image
extent	magick/mime.c	/^    extent;$/;"	m	struct:_MimeInfo	file:
extent	magick/quantum-private.h	/^    extent;$/;"	m	struct:_QuantumInfo
extract	magick/image.h	/^    *extract,$/;"	m	struct:_ImageInfo
extract_info	magick/image.h	/^    extract_info,$/;"	m	struct:_Image
extract_info	magick/stream.c	/^    extract_info;$/;"	m	struct:_StreamInfo	file:
face	magick/draw.h	/^    face;$/;"	m	struct:_DrawInfo
face	magick/type.h	/^    face;$/;"	m	struct:_TypeInfo
fact	magick/morphology.c	/^static inline size_t fact(size_t n)$/;"	f	file:
fact	magick/morphology.c	111;"	d	file:
fact	magick/morphology.c	113;"	d	file:
family	magick/draw.h	/^    *family;$/;"	m	struct:_DrawInfo
family	magick/type.h	/^    *family;$/;"	m	struct:_TypeInfo
fatal_error_handler	magick/exception.c	/^  fatal_error_handler = DefaultFatalErrorHandler;$/;"	v	file:
fdopen	magick/nt-base.h	94;"	d
file	magick/blob.c	/^    *file;$/;"	m	union:FileInfo	file:
file	magick/cache-private.h	/^    file;$/;"	m	struct:_CacheInfo
file	magick/distribute-cache-private.h	/^    file;$/;"	m	struct:_DistributeCacheInfo
file	magick/fx.c	/^    *file;$/;"	m	struct:_FxInfo	file:
file	magick/image.h	/^    *file;$/;"	m	struct:_ImageInfo
file	magick/log.c	/^    *file;$/;"	m	struct:_LogInfo	file:
file	magick/matrix.c	/^    file;$/;"	m	struct:_MatrixInfo	file:
file	magick/resource.c	/^    file,$/;"	m	struct:_ResourceInfo	file:
file1	image_validator/ImageValidator.c	/^    char         *file1;$/;"	m	struct:__anon100	file:
file2	image_validator/ImageValidator.c	/^    char         *file2;$/;"	m	struct:__anon100	file:
file_info	magick/blob.c	/^    file_info;$/;"	m	struct:_BlobInfo	file:
file_info	magick/nt-base-private.h	/^    file_info;$/;"	m	struct:_DIR	typeref:struct:_DIR::dirent
file_limit	magick/resource.c	/^    file_limit,$/;"	m	struct:_ResourceInfo	file:
file_semaphore	magick/cache-private.h	/^    *file_semaphore;$/;"	m	struct:_CacheInfo
filename	magick/cache-private.h	/^    filename[MaxTextExtent],$/;"	m	struct:_CacheInfo
filename	magick/image.h	/^    filename[MaxTextExtent],         \/* images input filename *\/$/;"	m	struct:_Image
filename	magick/image.h	/^    filename[MaxTextExtent];$/;"	m	struct:_ImageInfo
filename	magick/log.c	/^    *filename,$/;"	m	struct:_LogInfo	file:
filename	magick/log.c	/^    *filename,$/;"	m	struct:_LogMapInfo	file:
filename	magick/memory.c	/^    filename[MaxTextExtent];$/;"	m	struct:_MemoryInfo	file:
filename	magick/montage.h	/^    filename[MaxTextExtent];$/;"	m	struct:_MontageInfo
fileno	magick/nt-base.h	97;"	d
fill	magick/draw.h	/^    fill,$/;"	m	struct:_DrawInfo
fill	magick/montage.h	/^    fill,$/;"	m	struct:_MontageInfo
fill_pattern	magick/draw.h	/^    *fill_pattern,$/;"	m	struct:_DrawInfo
fill_rule	magick/draw.h	/^    fill_rule;$/;"	m	struct:_DrawInfo
filter	magick/image.h	/^    filter;         \/* resize\/distort filter to apply *\/$/;"	m	struct:_Image
filter	magick/resample.c	/^    filter;$/;"	m	struct:_ResampleFilter	file:
filter	magick/resize.c	/^    (*filter)(const MagickRealType,const ResizeFilter *),$/;"	m	struct:_ResizeFilter	file:
filterWeightingType	magick/resize.c	/^    filterWeightingType,$/;"	m	struct:_ResizeFilter	file:
filter_def	magick/resample.c	/^    *filter_def;$/;"	m	struct:_ResampleFilter	file:
filter_lut	magick/resample.c	/^    filter_lut[WLUT_WIDTH];$/;"	m	struct:_ResampleFilter	file:
filter_off	wand/drawing-wand.c	/^    filter_off;         \/* true if not filtering attributes *\/$/;"	m	struct:_DrawingWand	file:
firsttime	magick/nt-base-private.h	/^    firsttime;$/;"	m	struct:_DIR
flag	magick/token.c	/^    flag;$/;"	m	struct:_TokenInfo	file:
flags	magick/option.h	/^    flags;$/;"	m	struct:_OptionInfo
flags	magick/xwindow-private.h	/^    flags;$/;"	m	struct:_XWindowInfo
font	magick/draw.h	/^    *font,$/;"	m	struct:_DrawInfo
font	magick/image.h	/^    *font,$/;"	m	struct:_ImageInfo
font	magick/montage.h	/^    *font;$/;"	m	struct:_MontageInfo
font	magick/xwindow-private.h	/^    *font,$/;"	m	struct:_XResourceInfo
font_info	magick/xwindow-private.h	/^    *font_info;$/;"	m	struct:_XAnnotateInfo
font_info	magick/xwindow-private.h	/^    *font_info;$/;"	m	struct:_XWindowInfo
font_info	magick/xwindow-private.h	/^    *font_info;$/;"	m	struct:_XWindows
font_name	magick/xwindow-private.h	/^    *font_name[MaxNumberFonts],$/;"	m	struct:_XResourceInfo
fopen_utf8	magick/utility-private.h	/^static inline FILE *fopen_utf8(const char *path,const char *mode)$/;"	f
foreground_color	magick/xwindow-private.h	/^    *foreground_color;$/;"	m	struct:_XResourceInfo
foreground_color	magick/xwindow-private.h	/^    foreground_color,$/;"	m	struct:_XPixelInfo
format	magick/PreRvIcccm.h	/^    format;$/;"	m	struct:_XTextProperty
format	magick/log.c	/^    *format;$/;"	m	struct:_LogInfo	file:
format	magick/log.c	/^    *format;$/;"	m	struct:_LogMapInfo	file:
format	magick/quantum-private.h	/^    format;$/;"	m	struct:_QuantumInfo
format	magick/type.h	/^    *format,$/;"	m	struct:_TypeInfo
format_type	magick/magick.h	/^    format_type;$/;"	m	struct:_MagickInfo
foundry	magick/type.h	/^    *foundry,$/;"	m	struct:_TypeInfo
fprintf_l	magick/nt-base.h	198;"	d
frame	magick/montage.h	/^    *frame,$/;"	m	struct:_MontageInfo
frame	magick/xwindow.h	/^    frame,$/;"	m	struct:_XImportInfo
free_nodes	magick/histogram.c	/^    free_nodes;$/;"	m	struct:_CubeInfo	file:
free_nodes	magick/quantize.c	/^    free_nodes,$/;"	m	struct:_CubeInfo	file:
free_segments	magick/memory.c	/^  *free_segments = (DataSegmentInfo *) NULL;$/;"	v	file:
fseek	magick/blob-private.h	31;"	d
fseek	magick/nt-base.h	102;"	d
fstat	magick/nt-base.h	108;"	d
fstat	magick/nt-base.h	110;"	d
fsync	magick/nt-base.h	114;"	d
ftell	magick/blob-private.h	32;"	d
ftell	magick/nt-base.h	119;"	d
ftruncate	magick/nt-base.h	123;"	d
function	magick/log.c	/^  const char *module,const char *function,const size_t line,$/;"	v	file:
fuzz	magick/image.h	/^    fuzz;           \/* current color fuzz attribute *\/$/;"	m	struct:_Image
fuzz	magick/image.h	/^    fuzz;$/;"	m	struct:_ImageInfo
fuzz	magick/pixel.h	/^    fuzz;$/;"	m	struct:_MagickPixelPacket
gamma	magick/image.h	/^    gamma;$/;"	m	struct:_Image
gamma	magick/studio.h	247;"	d
gamma	wand/studio.h	249;"	d
gamma_correct	magick/xwindow-private.h	/^    gamma_correct;$/;"	m	struct:_XResourceInfo
gamma_pow	magick/enhance.c	/^static inline double gamma_pow(const double value,const double gamma)$/;"	f	file:
gather_true_random	magick/random.c	/^  gather_true_random = MagickFalse;$/;"	v	file:
generation	magick/log.c	/^    generation;$/;"	m	struct:_LogInfo	file:
generations	magick/log.c	/^    generations,$/;"	m	struct:_LogInfo	file:
generic_profile	magick/image.h	/^    *generic_profile;$/;"	m	struct:_Image
generic_profiles	magick/image.h	/^    generic_profiles;  \/* this & ProfileInfo is deprecated *\/$/;"	m	struct:_Image
geometry	magick/draw.h	/^    *geometry;$/;"	m	struct:_DrawInfo
geometry	magick/image.h	/^    *geometry;$/;"	m	struct:_Image
geometry	magick/montage.h	/^    *geometry,$/;"	m	struct:_MontageInfo
geometry	magick/xwindow-private.h	/^    *geometry,$/;"	m	struct:_XWindowInfo
geometry	magick/xwindow-private.h	/^    geometry[MaxTextExtent];$/;"	m	struct:_XAnnotateInfo
geometry	magick/xwindow-private.h	/^    geometry[MaxTextExtent];$/;"	m	struct:_XDrawInfo
get_authentic_indexes_from_handler	magick/cache-private.h	/^    get_authentic_indexes_from_handler;$/;"	m	struct:_CacheMethods
get_authentic_pixels_from_handler	magick/cache-private.h	/^    get_authentic_pixels_from_handler;$/;"	m	struct:_CacheMethods
get_authentic_pixels_handler	magick/cache-private.h	/^    get_authentic_pixels_handler;$/;"	m	struct:_CacheMethods
get_one_authentic_pixel_from_handler	magick/cache-private.h	/^    get_one_authentic_pixel_from_handler;$/;"	m	struct:_CacheMethods
get_one_virtual_pixel_from_handler	magick/cache-private.h	/^    get_one_virtual_pixel_from_handler;$/;"	m	struct:_CacheMethods
get_version	image_validator/ImageValidator.c	/^char *get_version(void) {$/;"	f
get_virtual_indexes_from_handler	magick/cache-private.h	/^    get_virtual_indexes_from_handler;$/;"	m	struct:_CacheMethods
get_virtual_pixel_handler	magick/cache-private.h	/^    get_virtual_pixel_handler;$/;"	m	struct:_CacheMethods
get_virtual_pixels_handler	magick/cache-private.h	/^    get_virtual_pixels_handler;$/;"	m	struct:_CacheMethods
getcwd	magick/nt-base.h	126;"	d
getpid	magick/nt-base.h	129;"	d
gettimeofday	magick/nt-base.c	/^MagickPrivate int gettimeofday (struct timeval *time_value,$/;"	f
gettimeofday	magick/nt-base.h	281;"	d
ghost_handle	magick/nt-base.c	/^  *ghost_handle = (void *) NULL;$/;"	v	file:
ghost_info	magick/nt-base.c	/^  ghost_info;$/;"	v	file:
ghostline	magick/draw.c	/^    ghostline;$/;"	m	struct:_EdgeInfo	file:
glyphs	magick/type.h	/^    *glyphs;$/;"	m	struct:_TypeInfo
gpuSupportedResizeWeighting	magick/accelerate.c	/^static MagickBooleanType gpuSupportedResizeWeighting(ResizeWeightingFunctionType f)$/;"	f	file:
gradient	magick/draw.h	/^    gradient;$/;"	m	struct:_DrawInfo
gradient	magick/draw.h	/^    gradient;$/;"	m	struct:_ElementReference
gradient_vector	magick/draw.h	/^    gradient_vector;$/;"	m	struct:_GradientInfo
graphic_context	wand/drawing-wand.c	/^    **graphic_context;$/;"	m	struct:_DrawingWand	file:
gravity	magick/draw.h	/^    gravity;$/;"	m	struct:_DrawInfo
gravity	magick/image.h	/^    gravity;        \/* Gravity attribute for positioning in image *\/$/;"	m	struct:_Image
gravity	magick/montage.h	/^    gravity;$/;"	m	struct:_MontageInfo
gravity	magick/xwindow-private.h	/^    gravity;$/;"	m	struct:_XResourceInfo
green	image_validator/ImageValidator.c	/^    unsigned char green;$/;"	m	struct:__anon97	file:
green	magick/accelerate-private.h	/^    green,$/;"	m	struct:_FloatPixelPacket
green	magick/color.c	/^    green,$/;"	m	struct:_ColorMapInfo	file:
green	magick/pixel.h	/^    green,$/;"	m	struct:_DoublePixelPacket
green	magick/pixel.h	/^    green,$/;"	m	struct:_LongPixelPacket
green	magick/pixel.h	/^    green,$/;"	m	struct:_MagickPixelPacket
green	magick/pixel.h	/^    green,$/;"	m	struct:_PixelPacket
green	magick/pixel.h	/^    green,$/;"	m	struct:_QuantumPixelPacket
green	magick/quantize.c	/^    green,$/;"	m	struct:_RealPixelPacket	file:
green	magick/segment.c	/^    green,$/;"	m	struct:_Cluster	file:
green_primary	magick/image.h	/^    green_primary,$/;"	m	struct:_ChromaticityInfo
group	magick/image.h	/^    group;$/;"	m	struct:_ImageInfo
group_leader	magick/xwindow-private.h	/^    group_leader,$/;"	m	struct:_XWindows
gs_main_instance	magick/delegate-private.h	/^  gs_main_instance;$/;"	t	typeref:struct:gs_main_instance_s
gs_main_instance_DEFINED	magick/delegate-private.h	31;"	d
gzfile	magick/blob.c	/^    gzfile;$/;"	m	union:FileInfo	file:
hSearch	magick/nt-base-private.h	/^    hSearch;$/;"	m	struct:_DIR
handle	magick/module.h	/^    *handle,$/;"	m	struct:_ModuleInfo
handler	magick/log.c	/^    handler;$/;"	m	struct:_HandlerInfo	file:
handler_mask	magick/log.c	/^    handler_mask;$/;"	m	struct:_LogInfo	file:
handler_mask	magick/log.c	/^    handler_mask;$/;"	m	struct:_LogMapInfo	file:
hash	magick/hashmap.c	/^    (*hash)(const void *);$/;"	m	struct:_HashmapInfo	file:
hash	magick/hashmap.c	/^    hash;$/;"	m	struct:_EntryInfo	file:
head	magick/hashmap.c	/^    *head,$/;"	m	struct:_LinkedListInfo	file:
head_of_list	magick/hashmap.c	/^    head_of_list;$/;"	m	struct:_HashmapInfo	file:
height	image_validator/ImageValidator.c	/^    unsigned int  height;$/;"	m	struct:__anon100	file:
height	image_validator/ImageValidator.c	/^    unsigned short height;$/;"	m	struct:__anon98	file:
height	magick/decorate.h	/^    height;$/;"	m	struct:_FrameInfo
height	magick/draw.h	/^    height,$/;"	m	struct:_TypeMetric
height	magick/fourier.c	/^    height;$/;"	m	struct:_FourierInfo	file:
height	magick/geometry.h	/^    height;$/;"	m	struct:_RectangleInfo
height	magick/morphology.h	/^    height;$/;"	m	struct:KernelInfo
height	magick/threshold.c	/^    height;$/;"	m	struct:_ThresholdMap	file:
height	magick/xwindow-private.h	/^    height,$/;"	m	struct:_XWindowInfo
height	magick/xwindow-private.h	/^    height;$/;"	m	struct:_XAnnotateInfo
height	magick/xwindow-private.h	/^    height;$/;"	m	struct:_XDrawInfo
height_inc	magick/xwindow-private.h	/^    height_inc,$/;"	m	struct:_XWindowInfo
high_order	magick/signature.c	/^    high_order;$/;"	m	struct:_SignatureInfo	file:
highlight_color	magick/xwindow-private.h	/^    highlight_color,$/;"	m	struct:_XPixelInfo
highlight_context	magick/xwindow-private.h	/^    highlight_context,$/;"	m	struct:_XPixelInfo
highlight_context	magick/xwindow-private.h	/^    highlight_context,$/;"	m	struct:_XWindowInfo
highlight_stipple	magick/xwindow-private.h	/^    highlight_stipple,$/;"	m	struct:_XWindowInfo
highwater	magick/draw.c	/^    highwater;$/;"	m	struct:_EdgeInfo	file:
histogram	magick/segment.c	/^    histogram[256];$/;"	m	struct:_ZeroCrossing	file:
hkey	magick/nt-base.c	/^    hkey;$/;"	m	struct:__anon23	file:
home_directory	magick/xwindow-private.h	/^    home_directory[MaxTextExtent];$/;"	m	struct:_XResourceInfo
hostname	magick/distribute-cache-private.h	/^    hostname[MaxTextExtent];$/;"	m	struct:_DistributeCacheInfo
hypot	magick/nt-base.h	132;"	d
i	magick/random.c	/^    i;$/;"	m	struct:_RandomInfo	file:
icon	magick/xwindow-private.h	/^    icon,$/;"	m	struct:_XWindows
icon_geometry	magick/xwindow-private.h	/^    *icon_geometry,$/;"	m	struct:_XWindowInfo
icon_geometry	magick/xwindow-private.h	/^    *icon_geometry;$/;"	m	struct:_XResourceInfo
icon_map	magick/xwindow-private.h	/^    *icon_map;$/;"	m	struct:_XWindows
icon_name	magick/xwindow-private.h	/^    *icon_name,$/;"	m	struct:_XWindowInfo
icon_pixel	magick/xwindow-private.h	/^    *icon_pixel;$/;"	m	struct:_XWindows
icon_resources	magick/xwindow-private.h	/^    *icon_resources;$/;"	m	struct:_XWindows
icon_visual	magick/xwindow-private.h	/^    *icon_visual;$/;"	m	struct:_XWindows
iconic	magick/xwindow-private.h	/^    iconic,$/;"	m	struct:_XResourceInfo
id	magick/cache-private.h	/^    id;$/;"	m	struct:_CacheInfo
id	magick/compress.c	/^    id,$/;"	m	struct:HuffmanTable	file:
id	magick/draw.h	/^    *id;$/;"	m	struct:_ElementReference
id	magick/quantize.c	/^    id,$/;"	m	struct:_NodeInfo	file:
id	magick/segment.c	/^    id;$/;"	m	struct:_Cluster	file:
id	magick/semaphore.c	/^    id;$/;"	m	struct:SemaphoreInfo	file:
id	magick/xwindow-private.h	/^    id;$/;"	m	struct:_XWindowInfo
id	wand/drawing-wand.c	/^    id;$/;"	m	struct:_DrawingWand	file:
id	wand/magick-wand-private.h	/^    id;$/;"	m	struct:_MagickWand
id	wand/pixel-iterator.c	/^    id;$/;"	m	struct:_PixelIterator	file:
id	wand/pixel-wand.c	/^    id;$/;"	m	struct:_PixelWand	file:
idlength	image_validator/ImageValidator.c	/^    unsigned char  idlength;$/;"	m	struct:__anon98	file:
im_exit	magick/xwindow-private.h	/^    im_exit,$/;"	m	struct:_XWindows
im_former_image	magick/xwindow-private.h	/^    im_former_image,$/;"	m	struct:_XWindows
im_next_image	magick/xwindow-private.h	/^    im_next_image,$/;"	m	struct:_XWindows
im_protocols	magick/xwindow-private.h	/^    im_protocols,$/;"	m	struct:_XWindows
im_remote_command	magick/xwindow-private.h	/^    im_remote_command,$/;"	m	struct:_XWindows
im_retain_colors	magick/xwindow-private.h	/^    im_retain_colors,$/;"	m	struct:_XWindows
im_update_colormap	magick/xwindow-private.h	/^    im_update_colormap,$/;"	m	struct:_XWindows
im_update_widget	magick/xwindow-private.h	/^    im_update_widget,$/;"	m	struct:_XWindows
image	magick/cache-view.c	/^    *image;$/;"	m	struct:_CacheView	file:
image	magick/resample.c	/^    *image;$/;"	m	struct:_ResampleFilter	file:
image	magick/stream.c	/^    *image;$/;"	m	struct:_StreamInfo	file:
image	magick/xwindow-private.h	/^    *image;$/;"	m	struct:_XWindowInfo
image	magick/xwindow-private.h	/^    image,$/;"	m	struct:_XWindows
image	wand/drawing-wand.c	/^    *image;$/;"	m	struct:_DrawingWand	file:
image	wand/mogrify-private.h	/^    *image;$/;"	m	struct:_ImageStack
image_area	magick/resample.c	/^    image_area;$/;"	m	struct:_ResampleFilter	file:
image_geometry	magick/xwindow-private.h	/^    *image_geometry;$/;"	m	struct:_XResourceInfo
image_id	image_validator/ImageValidator.c	/^    unsigned char  image_id[256];$/;"	m	struct:__anon98	file:
image_info	magick/magick.h	/^    *image_info;$/;"	m	struct:_MagickInfo
image_info	magick/stream.c	/^    *image_info;$/;"	m	struct:_StreamInfo	file:
image_info	magick/xwindow-private.h	/^    *image_info;$/;"	m	struct:_XResourceInfo
image_info	wand/magick-wand-private.h	/^    *image_info;$/;"	m	struct:_MagickWand
image_info	wand/mogrify-private.h	/^    *image_info;$/;"	m	struct:_ImageStack
image_pending	wand/magick-wand-private.h	/^    image_pending,$/;"	m	struct:_MagickWand
imagedata	image_validator/ImageValidator.c	/^    Pixel        **imagedata;$/;"	m	struct:__anon98	file:
imagedescriptor	image_validator/ImageValidator.c	/^    unsigned char  imagedescriptor;$/;"	m	struct:__anon98	file:
images	magick/fx.c	/^    *images;$/;"	m	struct:_FxInfo	file:
images	wand/magick-wand-private.h	/^    *images;$/;"	m	struct:_MagickWand
img1	image_validator/ImageValidator.c	/^    TargaImage   *img1;$/;"	m	struct:__anon100	file:
img1luma	image_validator/ImageValidator.c	/^    TargaImage   *img1luma;$/;"	m	struct:__anon100	file:
img2	image_validator/ImageValidator.c	/^    TargaImage   *img2;$/;"	m	struct:__anon100	file:
img2luma	image_validator/ImageValidator.c	/^    TargaImage   *img2luma;$/;"	m	struct:__anon100	file:
imgdiff	image_validator/ImageValidator.c	/^    TargaImage   *imgdiff;$/;"	m	struct:__anon100	file:
immutable	magick/xwindow-private.h	/^    immutable,$/;"	m	struct:_XWindowInfo
immutable	magick/xwindow-private.h	/^    immutable;$/;"	m	struct:_XResourceInfo
increase	magick/methods.h	636;"	d
indent_depth	wand/drawing-wand.c	/^    indent_depth;       \/* number of left-hand pad characters *\/$/;"	m	struct:_DrawingWand	file:
index	magick/histogram.h	/^    index;$/;"	m	struct:_ColorPacket
index	magick/pixel.h	/^    index;$/;"	m	struct:_DoublePixelPacket
index	magick/pixel.h	/^    index;$/;"	m	struct:_LongPixelPacket
index	magick/pixel.h	/^    index;$/;"	m	struct:_MagickPixelPacket
index	magick/pixel.h	/^    index;$/;"	m	struct:_QuantumPixelPacket
index	magick/segment.c	/^    index,$/;"	m	struct:_ExtentPacket	file:
index	magick/studio.h	248;"	d
index	magick/xwindow-private.h	74;"	d
index	wand/drawing-wand.c	/^    index;              \/* array index *\/$/;"	m	struct:_DrawingWand	file:
index	wand/studio.h	250;"	d
indexes	magick/cache-private.h	/^    *indexes;$/;"	m	struct:_CacheInfo
indexes	magick/cache-private.h	/^    *indexes;$/;"	m	struct:_NexusInfo
info	magick/profile.h	/^    *info;$/;"	m	struct:_ProfileInfo
info	magick/xwindow-private.h	/^    info,$/;"	m	struct:_XWindows
init_targa	image_validator/ImageValidator.c	/^TargaImage *init_targa(TargaImage *ref, params param) {$/;"	f
init_with_args	magick/delegate-private.h	/^    (MagickDLLCall *init_with_args)(gs_main_instance *,int,char **);$/;"	m	struct:_GhostInfo
inline	magick/MagickCore.h	37;"	d
inline	magick/MagickCore.h	43;"	d
inline	magick/magick-baseconfig.h	1357;"	d
inline	magick/nt-base.h	135;"	d
inline	magick/studio.h	47;"	d
inline	magick/studio.h	53;"	d
inline	wand/MagickWand.h	37;"	d
inline	wand/MagickWand.h	43;"	d
inline	wand/studio.h	47;"	d
inline	wand/studio.h	53;"	d
inner_bevel	magick/decorate.h	/^    inner_bevel,$/;"	m	struct:_FrameInfo
insert_before	wand/magick-wand-private.h	/^    insert_before,$/;"	m	struct:_MagickWand
instantiate_cache	magick/cache.c	/^  instantiate_cache = MagickFalse;$/;"	v	file:
instantiate_magickcore	magick/magick.c	/^  instantiate_magickcore = MagickFalse;$/;"	v	file:
instantiate_wand	wand/wand.c	/^  instantiate_wand = MagickFalse;$/;"	v	file:
intensity	magick/feature.c	/^    intensity;$/;"	m	struct:_CannyInfo	file:
intensity	magick/image.h	/^    intensity;      \/* method to generate an intensity value from a pixel *\/$/;"	m	struct:_Image
interface	magick/annotate.c	80;"	d	file:
interlace	magick/image.h	/^    interlace;$/;"	m	struct:_Image
interlace	magick/image.h	/^    interlace;$/;"	m	struct:_ImageInfo
interline_spacing	magick/draw.h	/^    interline_spacing;$/;"	m	struct:_DrawInfo
interpolate	magick/image.h	/^    interpolate;       \/* Interpolation of color for between pixel lookups *\/$/;"	m	struct:_Image
interpolate	magick/resample.c	/^    interpolate;$/;"	m	struct:_ResampleFilter	file:
interword_spacing	magick/draw.h	/^    interword_spacing,$/;"	m	struct:_DrawInfo
inverse_difference_moment	magick/feature.h	/^    inverse_difference_moment[4],$/;"	m	struct:_ChannelFeatures
inverse_scale	magick/quantum-private.h	/^    inverse_scale;$/;"	m	struct:_QuantumState
iptc_profile	magick/image.h	/^    iptc_profile,$/;"	m	struct:_Image
isatty	magick/nt-base.h	138;"	d
iterations	magick/image.h	/^    iterations,$/;"	m	struct:_Image
kerning	magick/draw.h	/^    kerning,$/;"	m	struct:_DrawInfo
key	magick/cipher.c	/^    *key;$/;"	m	struct:_AESInfo	file:
key	magick/deprecate.h	/^    *key,$/;"	m	struct:_ImageAttribute
key	magick/hashmap.c	/^    *key,$/;"	m	struct:_EntryInfo	file:
key	magick/splay-tree.c	/^    *key,$/;"	m	struct:_SplayTreeInfo	file:
key	magick/splay-tree.c	/^    *key;$/;"	m	struct:_NodeInfo	file:
klass	magick/xwindow-private.h	44;"	d
klass	magick/xwindow-private.h	46;"	d
kurtosis	magick/statistic.h	/^    kurtosis,$/;"	m	struct:_ChannelStatistics
left	magick/segment.c	/^    left,$/;"	m	struct:_ExtentPacket	file:
left	magick/segment.c	/^    left,$/;"	m	struct:_IntervalTree	file:
left	magick/splay-tree.c	/^    *left,$/;"	m	struct:_NodeInfo	typeref:struct:_NodeInfo::_NodeInfo	file:
length	magick/blob.c	/^    length,$/;"	m	struct:_BlobInfo	file:
length	magick/cache-private.h	/^    length;$/;"	m	struct:_CacheInfo
length	magick/cache-private.h	/^    length;$/;"	m	struct:_NexusInfo
length	magick/compress.c	/^    length,$/;"	m	struct:HuffmanTable	file:
length	magick/image.h	/^    length;$/;"	m	struct:_ImageInfo
length	magick/magic.c	/^    length;$/;"	m	struct:_MagicMapInfo	file:
length	magick/magic.h	/^    length;$/;"	m	struct:_MagicInfo
length	magick/matrix.c	/^    length;$/;"	m	struct:_MatrixInfo	file:
length	magick/memory.c	/^    length;$/;"	m	struct:_DataSegmentInfo	file:
length	magick/memory.c	/^    length;$/;"	m	struct:_MemoryInfo	file:
length	magick/mime.c	/^    length;$/;"	m	struct:_MimeInfo	file:
length	magick/profile.h	/^    length;$/;"	m	struct:_ProfileInfo
length	magick/statistic.c	/^    length,$/;"	m	struct:_PixelList	file:
length	magick/string_.h	/^    length,$/;"	m	struct:_StringInfo
level	magick/histogram.c	/^    level;$/;"	m	struct:_NodeInfo	file:
level	magick/quantize.c	/^    level;$/;"	m	struct:_NodeInfo	file:
level	magick/statistic.c	/^    level;$/;"	m	struct:_SkipList	file:
levels	magick/threshold.c	/^    *levels;$/;"	m	struct:_ThresholdMap	file:
library	magick/opencl-private.h	/^  MagickLibrary * library;$/;"	m	struct:_MagickCLEnv
limit	magick/log.c	/^    limit;$/;"	m	struct:_LogInfo	file:
limit_reached	magick/resample.c	/^    limit_reached,$/;"	m	struct:_ResampleFilter	file:
line	magick/log.c	/^  const char *module,const char *function,const size_t line,$/;"	v	file:
line_break	magick/compress.c	/^    line_break;$/;"	m	struct:_Ascii85Info	file:
line_info	magick/xwindow-private.h	/^    line_info;$/;"	m	struct:_XDrawInfo
line_width	magick/xwindow-private.h	/^    line_width;$/;"	m	struct:_XDrawInfo
linecap	magick/draw.h	/^    linecap;$/;"	m	struct:_DrawInfo
linejoin	magick/draw.h	/^    linejoin;$/;"	m	struct:_DrawInfo
list	magick/histogram.c	/^    *list;$/;"	m	struct:_NodeInfo	file:
list	magick/image.h	/^    *list,             \/* Undo\/Redo image processing list (for display) *\/$/;"	m	struct:_Image	typeref:struct:_Image::
lists	magick/statistic.c	/^    lists[ListChannels];$/;"	m	struct:_PixelList	file:
load_image_file	image_validator/ImageValidator.c	/^char *load_image_file(const char *fname, TargaImage *img, params param) {$/;"	f
locale_cache	magick/locale.c	/^  *locale_cache = (SplayTreeInfo *) NULL;$/;"	v	file:
locale_semaphore	magick/locale.c	/^  *locale_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
locale_t	magick/locale.c	/^  *locale_t;$/;"	t	typeref:struct:_locale_t	file:
locale_t	magick/nt-base.h	141;"	d
lock	magick/opencl-private.h	/^  SemaphoreInfo* lock;$/;"	m	struct:_MagickCLEnv
log_cache	magick/log.c	/^  *log_cache = (LinkedListInfo *) NULL;$/;"	v	file:
log_name	magick/log.c	/^  log_name[MaxTextExtent] = "Magick";$/;"	v	file:
log_semaphore	magick/log.c	/^  *log_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
low_order	magick/signature.c	/^    low_order,$/;"	m	struct:_SignatureInfo	file:
lsb_first	magick/signature.c	/^    lsb_first;$/;"	m	struct:_SignatureInfo	file:
lseek	magick/nt-base.h	145;"	d
lseek	magick/nt-base.h	147;"	d
lt_dlclose	magick/nt-base.h	151;"	d
lt_dlerror	magick/nt-base.h	154;"	d
lt_dlexit	magick/nt-base.h	157;"	d
lt_dlinit	magick/nt-base.h	160;"	d
lt_dlopen	magick/nt-base.h	163;"	d
lt_dlsetsearchpath	magick/nt-base.h	166;"	d
lt_dlsym	magick/nt-base.h	169;"	d
lt_slsearchpath	magick/nt-base.c	/^  *lt_slsearchpath = (char *) NULL;$/;"	v	file:
magic	magick/magic.c	/^    *magic;$/;"	m	struct:_MagicMapInfo	file:
magic	magick/magic.h	/^    *magic;$/;"	m	struct:_MagicInfo
magic	magick/mime.c	/^    *magic;$/;"	m	struct:_MimeInfo	file:
magic_cache	magick/magic.c	/^  *magic_cache = (LinkedListInfo *) NULL;$/;"	v	file:
magic_semaphore	magick/magic.c	/^  *magic_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
magick	magick/coder.c	/^    *magick,$/;"	m	struct:_CoderMapInfo	file:
magick	magick/coder.h	/^    *magick,$/;"	m	struct:_CoderInfo
magick	magick/image.h	/^    magick[MaxTextExtent],$/;"	m	struct:_ImageInfo
magick	magick/image.h	/^    magick[MaxTextExtent];           \/* Coder used to decode image *\/$/;"	m	struct:_Image
magick	magick/magick.h	/^    *magick;$/;"	m	struct:_MagickInfo
magick_aligned	magick/method-attribute.h	110;"	d
magick_aligned	magick/method-attribute.h	115;"	d
magick_aligned	magick/method-attribute.h	120;"	d
magick_alloc_size	magick/method-attribute.h	127;"	d
magick_alloc_size	magick/method-attribute.h	132;"	d
magick_alloc_size	wand/method-attribute.h	120;"	d
magick_alloc_sizes	magick/method-attribute.h	128;"	d
magick_alloc_sizes	magick/method-attribute.h	133;"	d
magick_alloc_sizes	wand/method-attribute.h	121;"	d
magick_attribute	magick/deprecate.h	41;"	d
magick_attribute	magick/deprecate.h	43;"	d
magick_attribute	magick/method-attribute.h	111;"	d
magick_attribute	magick/method-attribute.h	116;"	d
magick_attribute	magick/method-attribute.h	121;"	d
magick_cold_spot	magick/method-attribute.h	129;"	d
magick_cold_spot	magick/method-attribute.h	134;"	d
magick_cold_spot	wand/method-attribute.h	122;"	d
magick_columns	magick/image.h	/^    magick_columns,$/;"	m	struct:_Image
magick_filename	magick/image.h	/^    magick_filename[MaxTextExtent],  \/* ditto with coders, and read_mods *\/$/;"	m	struct:_Image
magick_hot_spot	magick/method-attribute.h	130;"	d
magick_hot_spot	magick/method-attribute.h	135;"	d
magick_hot_spot	wand/method-attribute.h	123;"	d
magick_list	magick/magick.c	/^  *magick_list = (SplayTreeInfo *) NULL;$/;"	v	file:
magick_rows	magick/image.h	/^    magick_rows;$/;"	m	struct:_Image
magick_semaphore	magick/magick.c	/^  *magick_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
magick_threads	magick/thread-private.h	32;"	d
magick_unreferenced	magick/method-attribute.h	113;"	d
magick_unreferenced	magick/method-attribute.h	118;"	d
magick_unreferenced	magick/method-attribute.h	123;"	d
magick_unused	magick/accelerate.c	/^  ExceptionInfo *magick_unused(exception))$/;"	f
magick_unused	magick/accelerate.c	/^  ExceptionInfo* magick_unused(exception))$/;"	f
magick_unused	magick/accelerate.c	/^  Image *magick_unused(convolve_image),ExceptionInfo *magick_unused(exception))$/;"	f
magick_unused	magick/accelerate.c	/^  const double magick_unused(angle),ExceptionInfo *magick_unused(exception))$/;"	f
magick_unused	magick/accelerate.c	/^  const double magick_unused(sigma),ExceptionInfo *magick_unused(exception))$/;"	f
magick_unused	magick/method-attribute.h	112;"	d
magick_unused	magick/method-attribute.h	117;"	d
magick_unused	magick/method-attribute.h	122;"	d
magick_unused	magick/module.c	/^  ExceptionInfo *magick_unused(exception))$/;"	f
magick_unused	magick/module.c	/^  ExceptionInfo *magick_unused(exception))$/;"	f	file:
magick_unused	magick/resize.c	/^  const ResizeFilter *magick_unused(resize_filter))$/;"	f	file:
magnify	magick/xwindow-private.h	/^    magnify,$/;"	m	struct:_XResourceInfo
magnify	magick/xwindow-private.h	/^    magnify,$/;"	m	struct:_XWindows
magnitude	magick/feature.c	/^    magnitude,$/;"	m	struct:_CannyInfo	file:
main	image_validator/ImageValidator.c	/^int main(int argc, char *argv[]) {$/;"	f
main	utilities/convert.c	/^int main(int argc,char **argv)$/;"	f
major	magick/draw.c	/^    major,$/;"	m	struct:_ElementInfo	file:
manager_hints	magick/xwindow-private.h	/^    *manager_hints;$/;"	m	struct:_XWindows
map	magick/hashmap.c	/^    **map;$/;"	m	struct:_HashmapInfo	file:
map	magick/resource.c	/^    map,$/;"	m	struct:_ResourceInfo	file:
map	magick/stream.c	/^    *map;$/;"	m	struct:_StreamInfo	file:
map_id	magick/threshold.c	/^    *map_id,$/;"	m	struct:_ThresholdMap	file:
map_info	magick/xwindow-private.h	/^    *map_info,$/;"	m	struct:_XWindows
map_info	magick/xwindow-private.h	/^    *map_info;$/;"	m	struct:_XWindowInfo
map_limit	magick/resource.c	/^    map_limit,$/;"	m	struct:_ResourceInfo	file:
map_type	magick/xwindow-private.h	/^    *map_type,$/;"	m	struct:_XResourceInfo
mapped	magick/blob.c	/^    mapped,$/;"	m	struct:_BlobInfo	file:
mapped	magick/cache-private.h	/^    mapped;$/;"	m	struct:_CacheInfo
mapped	magick/cache-private.h	/^    mapped;$/;"	m	struct:_NexusInfo
mapped	magick/matrix.c	/^    mapped,$/;"	m	struct:_MatrixInfo	file:
mapped	magick/memory.c	/^    mapped;$/;"	m	struct:_DataSegmentInfo	file:
mapped	magick/xwindow-private.h	/^    mapped,$/;"	m	struct:_XWindowInfo
mask	magick/image.h	/^    *mask;$/;"	m	struct:_Image	typeref:struct:_Image::_Image
mask	magick/mime.c	/^    mask,$/;"	m	struct:_MimeInfo	file:
mask	magick/quantum-private.h	/^    *mask;$/;"	m	struct:_QuantumState
mask	magick/xwindow-private.h	/^    mask;$/;"	m	struct:_XWindowInfo
matte	magick/image.h	/^    matte;           \/* is transparency channel defined and active *\/$/;"	m	struct:_Image
matte	magick/pixel.h	/^    matte;$/;"	m	struct:_MagickPixelPacket
matte_color	magick/image.h	/^    matte_color;      \/* current mattecolor attribute *\/$/;"	m	struct:_Image
matte_color	magick/image.h	/^    matte_color;$/;"	m	struct:_ImageInfo
matte_color	magick/montage.h	/^    matte_color;$/;"	m	struct:_MontageInfo
matte_color	magick/xwindow-private.h	/^    *matte_color,$/;"	m	struct:_XResourceInfo
matte_color	magick/xwindow-private.h	/^    matte_color,$/;"	m	struct:_XPixelInfo
matte_image	magick/xwindow-private.h	/^    *matte_image;$/;"	m	struct:_XWindowInfo
matte_pixmap	magick/xwindow-private.h	/^    matte_pixmap,$/;"	m	struct:_XWindowInfo
matte_pixmaps	magick/xwindow-private.h	/^    *matte_pixmaps;$/;"	m	struct:_XWindowInfo
max_advance	magick/draw.h	/^    max_advance,$/;"	m	struct:_TypeMetric
maxima	magick/statistic.h	/^    maxima,$/;"	m	struct:_ChannelStatistics
maximum	magick/morphology.h	/^    maximum,$/;"	m	struct:KernelInfo
maximum	magick/quantum-private.h	/^    maximum,$/;"	m	struct:_QuantumInfo
maximum_colors	magick/quantize.c	/^    maximum_colors;$/;"	m	struct:_CubeInfo	file:
maximum_correlation_coefficient	magick/feature.h	/^    maximum_correlation_coefficient[4];$/;"	m	struct:_ChannelFeatures
maxthresh	image_validator/ImageValidator.c	/^    unsigned int  maxthresh;$/;"	m	struct:__anon100	file:
maxthreshpct	image_validator/ImageValidator.c	/^    double        maxthreshpct;$/;"	m	struct:__anon100	file:
mean	image_validator/ImageValidator.c	/^double mean(double *values, int n) {$/;"	f
mean	magick/statistic.h	/^    mean,$/;"	m	struct:_ChannelStatistics
mean_error_per_pixel	magick/color.h	/^    mean_error_per_pixel,$/;"	m	struct:_ErrorInfo
mean_stability	magick/segment.c	/^    mean_stability,$/;"	m	struct:_IntervalTree	file:
measure_error	magick/quantize.h	/^    measure_error;$/;"	m	struct:_QuantizeInfo
measure_of_correlation_1	magick/feature.h	/^    measure_of_correlation_1[4],$/;"	m	struct:_ChannelFeatures
measure_of_correlation_2	magick/feature.h	/^    measure_of_correlation_2[4],$/;"	m	struct:_ChannelFeatures
memory	magick/resource.c	/^    memory,$/;"	m	struct:_ResourceInfo	file:
memory_info	magick/quantize.c	/^    *memory_info;$/;"	m	struct:_CubeInfo	file:
memory_limit	magick/resource.c	/^    memory_limit,$/;"	m	struct:_ResourceInfo	file:
memory_methods	magick/memory.c	/^  memory_methods =$/;"	v	file:
memory_pool	magick/memory.c	/^  memory_pool;$/;"	v	file:
memory_semaphore	magick/memory.c	/^  *memory_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
message	magick/locale_.h	/^    *message;$/;"	m	struct:_LocaleInfo
message	magick/signature.c	/^    *message;$/;"	m	struct:_SignatureInfo	file:
method	magick/draw.h	/^    method;$/;"	m	struct:_PrimitiveInfo
method	magick/log.c	/^    method;$/;"	m	struct:_LogInfo	file:
methods	magick/cache-private.h	/^    methods;$/;"	m	struct:_CacheInfo
metrics	magick/draw.h	/^    *metrics,$/;"	m	struct:_DrawInfo
metrics	magick/type.h	/^    *metrics,$/;"	m	struct:_TypeInfo
mime_cache	magick/mime.c	/^  *mime_cache = (LinkedListInfo *) NULL;$/;"	v	file:
mime_semaphore	magick/mime.c	/^  *mime_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
mime_type	magick/magick.h	/^    *mime_type;$/;"	m	struct:_MagickInfo
min_height	magick/xwindow-private.h	/^    min_height,$/;"	m	struct:_XWindowInfo
min_is_white	magick/quantum-private.h	/^    min_is_white,$/;"	m	struct:_QuantumInfo
min_width	magick/xwindow-private.h	/^    min_width,$/;"	m	struct:_XWindowInfo
minima	magick/statistic.h	/^    minima,$/;"	m	struct:_ChannelStatistics
minimum	magick/morphology.h	/^    minimum,$/;"	m	struct:KernelInfo
minimum	magick/quantum-private.h	/^    minimum,$/;"	m	struct:_QuantumInfo
minor	magick/draw.c	/^    minor,$/;"	m	struct:_ElementInfo	file:
miterlimit	magick/draw.h	/^    miterlimit;$/;"	m	struct:_DrawInfo
mkdir	magick/nt-base.h	173;"	d
mmap	magick/nt-base.h	176;"	d
mnemonic	magick/option.h	/^    *mnemonic;$/;"	m	struct:_OptionInfo
mode	magick/cache-private.h	/^    mode;$/;"	m	struct:_CacheInfo
mode	magick/delegate.h	/^    mode;$/;"	m	struct:_DelegateInfo
mode_t	magick/utility-private.h	/^  mode_t;$/;"	t
module	magick/log.c	/^  const char *module,const char *function,const size_t line,$/;"	v	file:
module	magick/magick.h	/^    *module;$/;"	m	struct:_MagickInfo
module_list	magick/module.c	/^  *module_list = (SplayTreeInfo *) NULL;$/;"	v	file:
module_semaphore	magick/module.c	/^  *module_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
modulus	magick/fourier.c	/^    modulus;$/;"	m	struct:_FourierInfo	file:
monitor_handler	magick/deprecate.c	/^  monitor_handler = (MonitorHandler) NULL;$/;"	v	file:
monochrome	magick/image.h	/^    monochrome;$/;"	m	struct:_ImageInfo
montage	magick/image.h	/^    *montage,$/;"	m	struct:_Image
msync	magick/nt-base.h	180;"	d
munmap	magick/nt-base.h	183;"	d
mutex	magick/semaphore.c	/^    mutex;$/;"	m	struct:SemaphoreInfo	file:
mvg	wand/drawing-wand.c	/^    *mvg;               \/* MVG data *\/$/;"	m	struct:_DrawingWand	file:
mvg_alloc	wand/drawing-wand.c	/^    mvg_alloc,          \/* total allocated memory *\/$/;"	m	struct:_DrawingWand	file:
mvg_length	wand/drawing-wand.c	/^    mvg_length;         \/* total MVG length *\/$/;"	m	struct:_DrawingWand	file:
mvg_width	wand/drawing-wand.c	/^    mvg_width;          \/* current line width *\/$/;"	m	struct:_DrawingWand	file:
name	magick/coder.c	/^    *name;$/;"	m	struct:_CoderMapInfo	file:
name	magick/coder.h	/^    *name;$/;"	m	struct:_CoderInfo
name	magick/color.c	/^    *name;$/;"	m	struct:_ColorMapInfo	file:
name	magick/color.h	/^    *name;$/;"	m	struct:_ColorInfo
name	magick/configure.c	/^    *name,$/;"	m	struct:_ConfigureMapInfo	file:
name	magick/configure.h	/^    *name,$/;"	m	struct:_ConfigureInfo
name	magick/log.c	/^    *name,$/;"	m	struct:_LogInfo	file:
name	magick/log.c	/^    *name;$/;"	m	struct:_EventInfo	file:
name	magick/log.c	/^    *name;$/;"	m	struct:_HandlerInfo	file:
name	magick/magic.c	/^    *name;$/;"	m	struct:_MagicMapInfo	file:
name	magick/magic.h	/^    *name,$/;"	m	struct:_MagicInfo
name	magick/magick.h	/^    *name,$/;"	m	struct:_MagickInfo
name	magick/nt-base.c	/^    *name;$/;"	m	struct:__anon23	file:
name	magick/policy.c	/^    *name,$/;"	m	struct:_PolicyInfo	file:
name	magick/policy.c	/^    *name,$/;"	m	struct:_PolicyMapInfo	file:
name	magick/profile.h	/^    *name;$/;"	m	struct:_ProfileInfo
name	magick/type.h	/^    *name,$/;"	m	struct:_TypeInfo
name	magick/xwindow-private.h	/^    *name,$/;"	m	struct:_XWindowInfo
name	magick/xwindow-private.h	/^    *name;$/;"	m	struct:_XResourceInfo
name	wand/drawing-wand.c	/^    name[MaxTextExtent];$/;"	m	struct:_DrawingWand	file:
name	wand/magick-wand-private.h	/^    name[MaxTextExtent];$/;"	m	struct:_MagickWand
name	wand/pixel-iterator.c	/^    name[MaxTextExtent];$/;"	m	struct:_PixelIterator	file:
name	wand/pixel-wand.c	/^    name[MaxTextExtent];$/;"	m	struct:_PixelWand	file:
negative_range	magick/morphology.h	/^    negative_range,$/;"	m	struct:KernelInfo
new_instance	magick/delegate-private.h	/^    (MagickDLLCall *new_instance)(gs_main_instance **,void *);$/;"	m	struct:_GhostInfo
next	magick/coder.h	/^    *next;  \/* deprecated, use GetCoderInfoList() *\/$/;"	m	struct:_CoderInfo	typeref:struct:_CoderInfo::
next	magick/color.h	/^    *next;  \/* deprecated, use GetColorInfoList() *\/$/;"	m	struct:_ColorInfo	typeref:struct:_ColorInfo::
next	magick/configure.h	/^    *next;  \/* deprecated, use GetConfigureInfoList() *\/$/;"	m	struct:_ConfigureInfo	typeref:struct:_ConfigureInfo::
next	magick/delegate.h	/^    *next;  \/* deprecated, use GetDelegateInfoList() *\/$/;"	m	struct:_DelegateInfo	typeref:struct:_DelegateInfo::
next	magick/deprecate.h	/^    *next;  \/* deprecated *\/$/;"	m	struct:_ImageAttribute	typeref:struct:_ImageAttribute::
next	magick/draw.h	/^    *next;$/;"	m	struct:_ElementReference	typeref:struct:_ElementReference::
next	magick/hashmap.c	/^    *next;$/;"	m	struct:_ElementInfo	typeref:struct:_ElementInfo::_ElementInfo	file:
next	magick/hashmap.c	/^    *next;$/;"	m	struct:_LinkedListInfo	file:
next	magick/hashmap.c	/^    next;$/;"	m	struct:_HashmapInfo	file:
next	magick/histogram.c	/^    *next;$/;"	m	struct:_Nodes	typeref:struct:_Nodes::_Nodes	file:
next	magick/image.h	/^    *next;             \/* Image list links *\/$/;"	m	struct:_Image	typeref:struct:_Image::
next	magick/locale_.h	/^    *next;  \/* deprecated, use GetLocaleInfoList() *\/$/;"	m	struct:_LocaleInfo	typeref:struct:_LocaleInfo::
next	magick/magic.h	/^    *next;  \/* deprecated, use GetMagicInfoList() *\/$/;"	m	struct:_MagicInfo	typeref:struct:_MagicInfo::
next	magick/magick.h	/^    *next;  \/* deprecated, use GetMagickInfoList() *\/$/;"	m	struct:_MagickInfo	typeref:struct:_MagickInfo::
next	magick/memory.c	/^    *next;$/;"	m	struct:_DataSegmentInfo	typeref:struct:_DataSegmentInfo::	file:
next	magick/module.h	/^    *next;  \/* deprecated, use GetModuleInfoList() *\/$/;"	m	struct:_ModuleInfo	typeref:struct:_ModuleInfo::
next	magick/morphology.h	/^    *next;$/;"	m	struct:KernelInfo	typeref:struct:KernelInfo::KernelInfo
next	magick/quantize.c	/^    *next;$/;"	m	struct:_Nodes	typeref:struct:_Nodes::_Nodes	file:
next	magick/segment.c	/^    *next;$/;"	m	struct:_Cluster	typeref:struct:_Cluster::_Cluster	file:
next	magick/splay-tree.c	/^    *next;$/;"	m	struct:_SplayTreeInfo	file:
next	magick/statistic.c	/^    next[9],$/;"	m	struct:_ListNode	file:
next	magick/type.h	/^    *next;  \/* deprecated, use GetTypeInfoList() *\/$/;"	m	struct:_TypeInfo	typeref:struct:_TypeInfo::
next	magick/xml-tree.c	/^    *next,$/;"	m	struct:_XMLTreeInfo	file:
next	magick/xwindow-private.h	/^    *next,$/;"	m	struct:_XAnnotateInfo	typeref:struct:_XAnnotateInfo::_XAnnotateInfo
next_node	magick/quantize.c	/^    *next_node;$/;"	m	struct:_CubeInfo	file:
next_threshold	magick/quantize.c	/^    next_threshold;$/;"	m	struct:_CubeInfo	file:
nexus_info	magick/cache-private.h	/^    **nexus_info;$/;"	m	struct:_CacheInfo
nexus_info	magick/cache-view.c	/^    **nexus_info;$/;"	m	struct:_CacheView	file:
nitems	magick/PreRvIcccm.h	/^    nitems;$/;"	m	struct:_XTextProperty
node	magick/xml-tree.c	/^    *node;$/;"	m	struct:_XMLTreeRoot	file:
node_info	magick/histogram.c	/^    *node_info;$/;"	m	struct:_CubeInfo	file:
node_queue	magick/histogram.c	/^    *node_queue;$/;"	m	struct:_CubeInfo	file:
node_queue	magick/quantize.c	/^    *node_queue;$/;"	m	struct:_CubeInfo	file:
nodes	magick/histogram.c	/^    nodes[NodesInAList];$/;"	m	struct:_Nodes	file:
nodes	magick/quantize.c	/^    *nodes;$/;"	m	struct:_Nodes	file:
nodes	magick/quantize.c	/^    nodes,$/;"	m	struct:_CubeInfo	file:
nodes	magick/splay-tree.c	/^    nodes;$/;"	m	struct:_SplayTreeInfo	file:
nodes	magick/statistic.c	/^    *nodes;$/;"	m	struct:_SkipList	file:
nonce	magick/random.c	/^    *nonce,$/;"	m	struct:_RandomInfo	file:
normalize	magick/random.c	/^    normalize;$/;"	m	struct:_RandomInfo	file:
normalized_maximum_error	magick/color.h	/^    normalized_maximum_error;$/;"	m	struct:_ErrorInfo
normalized_mean_error	magick/color.h	/^    normalized_mean_error,$/;"	m	struct:_ErrorInfo
note	magick/magick.h	/^    *note,$/;"	m	struct:_MagickInfo
numGenerators	magick/opencl-private.h	/^  unsigned int numGenerators;$/;"	m	struct:_MagickCLEnv
number_colors	magick/quantize.h	/^    number_colors;$/;"	m	struct:_QuantizeInfo
number_connections	magick/cache-private.h	/^    number_connections;$/;"	m	struct:_CacheInfo
number_coordinates	magick/xwindow-private.h	/^    number_coordinates;$/;"	m	struct:_XDrawInfo
number_edges	magick/draw.c	/^    number_edges;$/;"	m	struct:_PolygonInfo	file:
number_points	magick/draw.c	/^    number_points;$/;"	m	struct:_EdgeInfo	file:
number_scenes	magick/image.h	/^    number_scenes,$/;"	m	struct:_ImageInfo
number_segments	magick/memory.c	/^    number_segments;$/;"	m	struct:_MemoryPool	file:
number_stops	magick/draw.h	/^    number_stops;$/;"	m	struct:_GradientInfo
number_threads	magick/cache-private.h	/^    number_threads;$/;"	m	struct:_CacheInfo
number_threads	magick/cache-view.c	/^    number_threads;$/;"	m	struct:_CacheView	file:
number_threads	magick/quantum-private.h	/^    number_threads;$/;"	m	struct:_QuantumInfo
number_unique	magick/histogram.c	/^    number_unique;$/;"	m	struct:_NodeInfo	file:
number_unique	magick/quantize.c	/^    number_unique;$/;"	m	struct:_NodeInfo	file:
numbuckets	image_validator/ImageValidator.c	/^    unsigned int  numbuckets;$/;"	m	struct:__anon100	file:
offset	magick/blob.c	/^    offset;$/;"	m	struct:_BlobInfo	file:
offset	magick/cache-private.h	/^    offset;$/;"	m	struct:_CacheInfo
offset	magick/compress.c	/^    offset,$/;"	m	struct:_Ascii85Info	file:
offset	magick/draw.h	/^    offset;$/;"	m	struct:_StopInfo
offset	magick/image.h	/^    offset;$/;"	m	struct:_Image
offset	magick/magic.c	/^    offset;$/;"	m	struct:_MagicMapInfo	file:
offset	magick/magic.h	/^    offset;$/;"	m	struct:_MagicInfo
offset	magick/mime.c	/^    offset;$/;"	m	struct:_MimeInfo	file:
offset	magick/quantize.c	/^    offset;$/;"	m	struct:_CubeInfo	file:
offset	magick/signature.c	/^    offset;$/;"	m	struct:_SignatureInfo	file:
offset	magick/token.c	/^    offset;$/;"	m	struct:_TokenInfo	file:
offset	magick/xml-tree.c	/^    offset;$/;"	m	struct:_XMLTreeInfo	file:
opacity	magick/accelerate-private.h	/^    opacity;$/;"	m	struct:_FloatPixelPacket
opacity	magick/draw.h	/^    opacity;$/;"	m	struct:_DrawInfo
opacity	magick/pixel.h	/^    opacity,$/;"	m	struct:_DoublePixelPacket
opacity	magick/pixel.h	/^    opacity,$/;"	m	struct:_LongPixelPacket
opacity	magick/pixel.h	/^    opacity,$/;"	m	struct:_MagickPixelPacket
opacity	magick/pixel.h	/^    opacity,$/;"	m	struct:_QuantumPixelPacket
opacity	magick/pixel.h	/^    opacity;$/;"	m	struct:_PixelPacket
opacity	magick/quantize.c	/^    opacity;$/;"	m	struct:_RealPixelPacket	file:
open	magick/nt-base.h	189;"	d
open_utf8	magick/utility-private.h	/^static inline int open_utf8(const char *path,int flags,mode_t mode)$/;"	f
opendir	magick/nt-base.h	186;"	d
options	magick/image.h	/^    *options;$/;"	m	struct:_ImageInfo
ordered	magick/xml-tree.c	/^    *ordered,$/;"	m	struct:_XMLTreeInfo	file:
orientation	magick/feature.c	/^    orientation;$/;"	m	struct:_CannyInfo	file:
orientation	magick/image.h	/^    orientation;     \/* photo orientation of image *\/$/;"	m	struct:_Image
orientation	magick/image.h	/^    orientation;$/;"	m	struct:_ImageInfo
origin	magick/draw.h	/^    origin;$/;"	m	struct:_TypeMetric
orphan	magick/xwindow-private.h	/^    orphan,$/;"	m	struct:_XWindowInfo
outer_bevel	magick/decorate.h	/^    outer_bevel;$/;"	m	struct:_FrameInfo
pack	magick/quantum-private.h	/^    pack;$/;"	m	struct:_QuantumInfo
pad	magick/quantum-private.h	/^    pad;$/;"	m	struct:_QuantumInfo
padGlobalWorkgroupSizeToLocalWorkgroupSize	magick/accelerate.c	/^  padGlobalWorkgroupSizeToLocalWorkgroupSize(const unsigned int orgGlobalSize,$/;"	f	file:
page	magick/image.h	/^    *page,$/;"	m	struct:_ImageInfo
page	magick/image.h	/^    page,           \/* virtual canvas size and offset of image *\/$/;"	m	struct:_Image
pan	magick/xwindow-private.h	/^    pan,$/;"	m	struct:_XWindows
params	image_validator/ImageValidator.c	/^} params;$/;"	t	typeref:struct:__anon100	file:
parent	magick/quantize.c	/^    *parent,$/;"	m	struct:_NodeInfo	typeref:struct:_NodeInfo::_NodeInfo	file:
parent	magick/xml-tree.c	/^    *parent,$/;"	m	struct:_XMLTreeInfo	file:
path	magick/coder.h	/^    *path,$/;"	m	struct:_CoderInfo
path	magick/color.h	/^    *path,$/;"	m	struct:_ColorInfo
path	magick/configure.h	/^    *path,$/;"	m	struct:_ConfigureInfo
path	magick/delegate.h	/^    *path,$/;"	m	struct:_DelegateInfo
path	magick/locale_.h	/^    *path,$/;"	m	struct:_LocaleInfo
path	magick/log.c	/^    *path,$/;"	m	struct:_LogInfo	file:
path	magick/magic.h	/^    *path,$/;"	m	struct:_MagicInfo
path	magick/matrix.c	/^    path[MaxTextExtent];$/;"	m	struct:_MatrixInfo	file:
path	magick/mime.c	/^    *path,$/;"	m	struct:_MimeInfo	file:
path	magick/module.h	/^    *path,$/;"	m	struct:_ModuleInfo
path	magick/policy.c	/^    *path;$/;"	m	struct:_PolicyInfo	file:
path	magick/string_.h	/^    path[MaxTextExtent];$/;"	m	struct:_StringInfo
path	magick/type.h	/^    *path,$/;"	m	struct:_TypeInfo
path_mode	wand/drawing-wand.c	/^    path_mode;$/;"	m	struct:_DrawingWand	file:
path_operation	wand/drawing-wand.c	/^    path_operation;$/;"	m	struct:_DrawingWand	file:
pattern	magick/mime.c	/^    *pattern;$/;"	m	struct:_MimeInfo	file:
pattern	magick/policy.c	/^    *pattern,$/;"	m	struct:_PolicyInfo	file:
pattern	magick/policy.c	/^    *pattern,$/;"	m	struct:_PolicyMapInfo	file:
pattern_bounds	wand/drawing-wand.c	/^    pattern_bounds;$/;"	m	struct:_DrawingWand	file:
pattern_id	wand/drawing-wand.c	/^    *pattern_id;$/;"	m	struct:_DrawingWand	file:
pattern_offset	wand/drawing-wand.c	/^    pattern_offset;$/;"	m	struct:_DrawingWand	file:
pause	magick/xwindow-private.h	/^    pause;$/;"	m	struct:_XResourceInfo
pclose	magick/nt-base.h	192;"	d
pen	magick/image.h	/^    pen;  \/* deprecated *\/$/;"	m	struct:_ImageInfo
pen_color	magick/xwindow-private.h	/^    pen_color,$/;"	m	struct:_XPixelInfo
pen_colors	magick/xwindow-private.h	/^    *pen_colors[MaxNumberPens];$/;"	m	struct:_XResourceInfo
pen_colors	magick/xwindow-private.h	/^    pen_colors[MaxNumberPens];$/;"	m	struct:_XPixelInfo
pen_index	magick/xwindow-private.h	/^    pen_index;$/;"	m	struct:_XPixelInfo
ping	magick/image.h	/^    ping,$/;"	m	struct:_ImageInfo
ping	magick/image.h	/^    ping;$/;"	m	struct:_Image
pipe	magick/studio.h	249;"	d
pipe	wand/studio.h	251;"	d
pixel	magick/histogram.h	/^    pixel;$/;"	m	struct:_ColorPacket
pixel	magick/quantum-private.h	/^    pixel;$/;"	m	struct:_QuantumState
pixel	magick/resize.c	/^    pixel;$/;"	m	struct:_ContributionInfo	file:
pixel	wand/pixel-wand.c	/^    pixel;$/;"	m	struct:_PixelWand	file:
pixel_info	magick/xwindow-private.h	/^    *pixel_info,$/;"	m	struct:_XWindows
pixel_info	magick/xwindow-private.h	/^    *pixel_info;$/;"	m	struct:_XWindowInfo
pixel_wands	wand/pixel-iterator.c	/^    **pixel_wands;$/;"	m	struct:_PixelIterator	file:
pixels	magick/cache-private.h	/^    *pixels;$/;"	m	struct:_CacheInfo
pixels	magick/cache-private.h	/^    *pixels;$/;"	m	struct:_NexusInfo
pixels	magick/quantum-private.h	/^    **pixels;$/;"	m	struct:_QuantumInfo
pixels	magick/stream.c	/^    *pixels;$/;"	m	struct:_StreamInfo	file:
pixels	magick/xwindow-private.h	/^    *pixels;$/;"	m	struct:_XPixelInfo
pixels_per_em	magick/draw.h	/^    pixels_per_em;$/;"	m	struct:_TypeMetric
pixmap	magick/xwindow-private.h	/^    pixmap,$/;"	m	struct:_XWindowInfo
pixmaps	magick/xwindow-private.h	/^    *pixmaps,$/;"	m	struct:_XWindowInfo
platform	magick/opencl-private.h	/^  cl_platform_id platform;$/;"	m	struct:_MagickCLEnv
point	magick/draw.c	/^    point;$/;"	m	struct:_PathInfo	file:
point	magick/draw.h	/^    point;$/;"	m	struct:_PrimitiveInfo
points	magick/draw.c	/^    *points;$/;"	m	struct:_EdgeInfo	file:
pointsize	magick/draw.h	/^    pointsize;$/;"	m	struct:_DrawInfo
pointsize	magick/image.h	/^    pointsize,$/;"	m	struct:_ImageInfo
pointsize	magick/montage.h	/^    pointsize;$/;"	m	struct:_MontageInfo
policy_cache	magick/policy.c	/^  *policy_cache = (LinkedListInfo *) NULL;$/;"	v	file:
policy_semaphore	magick/policy.c	/^  *policy_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
poly_basis_dx	magick/distort.c	/^static double poly_basis_dx(ssize_t n, double x, double y)$/;"	f	file:
poly_basis_dy	magick/distort.c	/^static double poly_basis_dy(ssize_t n, double x, double y)$/;"	f	file:
poly_basis_fn	magick/distort.c	/^static double poly_basis_fn(ssize_t n, double x, double y)$/;"	f	file:
poly_basis_str	magick/distort.c	/^static const char *poly_basis_str(ssize_t n)$/;"	f	file:
poly_number_terms	magick/distort.c	/^static size_t poly_number_terms(double order)$/;"	f	file:
popen	magick/nt-base.h	195;"	d
popen_utf8	magick/utility-private.h	/^static inline FILE *popen_utf8(const char *command,const char *type)$/;"	f
popup	magick/xwindow-private.h	/^    popup;$/;"	m	struct:_XWindows
port	magick/distribute-cache-private.h	/^    port;$/;"	m	struct:_DistributeCacheInfo
positive_range	magick/morphology.h	/^    positive_range,$/;"	m	struct:KernelInfo
preview_type	magick/image.h	/^    preview_type;$/;"	m	struct:_ImageInfo
previous	magick/coder.h	/^    *previous,$/;"	m	struct:_CoderInfo	typeref:struct:_CoderInfo::_CoderInfo
previous	magick/color.h	/^    *previous,$/;"	m	struct:_ColorInfo	typeref:struct:_ColorInfo::_ColorInfo
previous	magick/configure.h	/^    *previous,$/;"	m	struct:_ConfigureInfo	typeref:struct:_ConfigureInfo::_ConfigureInfo
previous	magick/delegate.h	/^    *previous,$/;"	m	struct:_DelegateInfo	typeref:struct:_DelegateInfo::_DelegateInfo
previous	magick/deprecate.h	/^    *previous,$/;"	m	struct:_ImageAttribute	typeref:struct:_ImageAttribute::_ImageAttribute
previous	magick/draw.h	/^    *previous,$/;"	m	struct:_ElementReference	typeref:struct:_ElementReference::_ElementReference
previous	magick/image.h	/^    *previous,         \/* Image list links *\/$/;"	m	struct:_Image	typeref:struct:_Image::_Image
previous	magick/locale_.h	/^    *previous,$/;"	m	struct:_LocaleInfo	typeref:struct:_LocaleInfo::_LocaleInfo
previous	magick/magic.h	/^    *previous,$/;"	m	struct:_MagicInfo	typeref:struct:_MagicInfo::_MagicInfo
previous	magick/magick.h	/^    *previous,$/;"	m	struct:_MagickInfo	typeref:struct:_MagickInfo::_MagickInfo
previous	magick/memory.c	/^    *previous,$/;"	m	struct:_DataSegmentInfo	typeref:struct:_DataSegmentInfo::_DataSegmentInfo	file:
previous	magick/module.h	/^    *previous,$/;"	m	struct:_ModuleInfo	typeref:struct:_ModuleInfo::_ModuleInfo
previous	magick/type.h	/^    *previous,$/;"	m	struct:_TypeInfo	typeref:struct:_TypeInfo::_TypeInfo
previous	magick/xwindow-private.h	/^    *previous;$/;"	m	struct:_XAnnotateInfo	typeref:struct:_XAnnotateInfo::
primitive	magick/draw.h	/^    *primitive,$/;"	m	struct:_DrawInfo
primitive	magick/draw.h	/^    primitive;$/;"	m	struct:_PrimitiveInfo
printUsage	image_validator/ImageValidator.c	/^void printUsage(char *progname) {$/;"	f
printbuckets	image_validator/ImageValidator.c	/^    unsigned int  printbuckets : 1;$/;"	m	struct:__anon100	file:
priority	magick/mime.c	/^    priority;$/;"	m	struct:_MimeInfo	file:
process_message	magick/methods.h	828;"	d
processing_instructions	magick/xml-tree.c	/^    ***processing_instructions,$/;"	m	struct:_XMLTreeRoot	file:
profile	magick/image.h	/^    *profile;$/;"	m	struct:_ImageInfo
profiles	magick/image.h	/^    *profiles;$/;"	m	struct:_Image
programs	magick/opencl-private.h	/^  cl_program programs[MAGICK_OPENCL_NUM_PROGRAMS]; \/* one program object maps one kernel source file *\/$/;"	m	struct:_MagickCLEnv
progress	magick/histogram.c	/^    progress;$/;"	m	struct:_CubeInfo	file:
progress_monitor	magick/image.h	/^    progress_monitor;$/;"	m	struct:_Image
progress_monitor	magick/image.h	/^    progress_monitor;$/;"	m	struct:_ImageInfo
properties	magick/blob.c	/^    properties;$/;"	m	struct:_BlobInfo	typeref:struct:_BlobInfo::stat	file:
properties	magick/image.h	/^    *properties,       \/* per image properities *\/$/;"	m	struct:_Image
protocol_major	magick/random.c	/^    protocol_major,$/;"	m	struct:_RandomInfo	file:
protocol_minor	magick/random.c	/^    protocol_minor;$/;"	m	struct:_RandomInfo	file:
pruning_threshold	magick/quantize.c	/^    pruning_threshold,$/;"	m	struct:_CubeInfo	file:
psi	magick/geometry.h	/^    psi,$/;"	m	struct:_GeometryInfo
quality	magick/image.h	/^    quality;         \/* compression quality setting, meaning varies *\/$/;"	m	struct:_Image
quality	magick/image.h	/^    quality;$/;"	m	struct:_ImageInfo
quantize_error	magick/quantize.c	/^    quantize_error;$/;"	m	struct:_NodeInfo	file:
quantize_info	magick/quantize.c	/^    *quantize_info;$/;"	m	struct:_CubeInfo	file:
quantize_info	magick/xwindow-private.h	/^    *quantize_info;$/;"	m	struct:_XResourceInfo
quantize_info	wand/magick-wand-private.h	/^    *quantize_info;$/;"	m	struct:_MagickWand
quantum	magick/blob.c	/^    quantum;$/;"	m	struct:_BlobInfo	file:
quantum	magick/quantum-private.h	/^    quantum;$/;"	m	struct:_QuantumInfo
quantum	magick/xwindow-private.h	/^    quantum;$/;"	m	struct:_XResourceInfo
quantum_info	magick/stream.c	/^    *quantum_info;$/;"	m	struct:_StreamInfo	file:
queue_authentic_pixels_handler	magick/cache-private.h	/^    queue_authentic_pixels_handler;$/;"	m	struct:_CacheMethods
quote	magick/token.c	/^    quote;$/;"	m	struct:_TokenInfo	file:
quotient	magick/cache.c	/^    quotient,$/;"	m	struct:_MagickModulo	file:
radius	magick/draw.h	/^    radius;$/;"	m	struct:_GradientInfo
randNormalize	magick/opencl-private.h	/^  float randNormalize;$/;"	m	struct:_MagickCLEnv
random_info	magick/cache-private.h	/^    *random_info;$/;"	m	struct:_CacheInfo
random_info	magick/fx.c	/^    *random_info;$/;"	m	struct:_FxInfo	file:
random_info	magick/resource.c	/^  *random_info = (RandomInfo *) NULL;$/;"	v	file:
random_semaphore	magick/random.c	/^  *random_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
raw	magick/magick.h	/^    raw,$/;"	m	struct:_MagickInfo
read	magick/nt-base.h	201;"	d
read_16bit_pixel	image_validator/ImageValidator.c	669;"	d	file:
read_le16	image_validator/ImageValidator.c	659;"	d	file:
read_le8	image_validator/ImageValidator.c	658;"	d	file:
read_pixel	image_validator/ImageValidator.c	678;"	d	file:
read_tga_file	image_validator/ImageValidator.c	/^void read_tga_file (const char *fname, TargaImage *tga) {$/;"	f
read_yuv_file	image_validator/ImageValidator.c	/^void read_yuv_file (const char * fname, TargaImage * tga, params param) {$/;"	f
readdir	magick/nt-base.h	204;"	d
reason	magick/exception.c	/^  const char *reason,const char *description)$/;"	v	file:
reason	magick/exception.h	/^    *reason,$/;"	m	struct:_ExceptionInfo
reason	magick/locale.c	/^  const char *reason,const char *description)$/;"	v	file:
rectangle_info	magick/xwindow-private.h	/^    rectangle_info;$/;"	m	struct:_XDrawInfo
recv	magick/distribute-cache.c	82;"	d	file:
recv	magick/distribute-cache.c	84;"	d	file:
red	image_validator/ImageValidator.c	/^    unsigned char red;$/;"	m	struct:__anon97	file:
red	magick/accelerate-private.h	/^    red,$/;"	m	struct:_FloatPixelPacket
red	magick/color.c	/^    red,$/;"	m	struct:_ColorMapInfo	file:
red	magick/pixel.h	/^    red,$/;"	m	struct:_DoublePixelPacket
red	magick/pixel.h	/^    red,$/;"	m	struct:_LongPixelPacket
red	magick/pixel.h	/^    red,$/;"	m	struct:_MagickPixelPacket
red	magick/pixel.h	/^    red,$/;"	m	struct:_PixelPacket
red	magick/pixel.h	/^    red,$/;"	m	struct:_QuantumPixelPacket
red	magick/quantize.c	/^    red,$/;"	m	struct:_RealPixelPacket	file:
red	magick/segment.c	/^    red,$/;"	m	struct:_Cluster	file:
red_primary	magick/image.h	/^    red_primary,$/;"	m	struct:_ChromaticityInfo
reference_count	magick/blob.c	/^    reference_count;$/;"	m	struct:_BlobInfo	file:
reference_count	magick/cache-private.h	/^    reference_count;$/;"	m	struct:_CacheInfo
reference_count	magick/image.h	/^    reference_count;$/;"	m	struct:_Image
reference_count	magick/semaphore.c	/^    reference_count;$/;"	m	struct:SemaphoreInfo	file:
regenerateProfile	magick/opencl-private.h	/^  MagickBooleanType regenerateProfile;   \/* re-run the microbenchmark in auto device selection mode *\/ $/;"	m	struct:_MagickCLEnv
region	magick/cache-private.h	/^    region;$/;"	m	struct:_NexusInfo
region	wand/pixel-iterator.c	/^    region;$/;"	m	struct:_PixelIterator	file:
register_module	magick/module.h	/^    (*register_module)(void);$/;"	m	struct:_ModuleInfo
registry	magick/registry.c	/^  *registry = (SplayTreeInfo *) NULL;$/;"	v	file:
registry_roots	magick/nt-base.c	/^const registry_roots[2] =$/;"	v
registry_semaphore	magick/registry.c	/^  *registry_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
relinquish	magick/exception.h	/^    relinquish;$/;"	m	struct:_ExceptionInfo
relinquish_key	magick/hashmap.c	/^    *(*relinquish_key)(void *),$/;"	m	struct:_HashmapInfo	file:
relinquish_key	magick/splay-tree.c	/^    *(*relinquish_key)(void *),$/;"	m	struct:_SplayTreeInfo	file:
remainder	magick/cache.c	/^    remainder;$/;"	m	struct:_MagickModulo	file:
remove_utf8	magick/utility-private.h	/^static inline int remove_utf8(const char *path)$/;"	f
rename_utf8	magick/utility-private.h	/^static inline int rename_utf8(const char *source,const char *destination)$/;"	f
render	magick/draw.h	/^    render;$/;"	m	struct:_DrawInfo
rendering_intent	magick/image.h	/^    rendering_intent;$/;"	m	struct:_Image
reservoir	magick/random.c	/^    *reservoir;$/;"	m	struct:_RandomInfo	file:
resizeHorizontalFilter	magick/accelerate.c	/^static MagickBooleanType resizeHorizontalFilter(cl_mem inputImage$/;"	f	file:
resizeVerticalFilter	magick/accelerate.c	/^static MagickBooleanType resizeVerticalFilter(cl_mem inputImage$/;"	f	file:
resize_memory_handler	magick/memory.c	/^    resize_memory_handler;$/;"	m	struct:_MagickMemoryMethods	file:
resource_database	magick/xwindow-private.h	/^    resource_database;$/;"	m	struct:_XResourceInfo
resource_info	magick/resource.c	/^  resource_info =$/;"	v	file:
resource_semaphore	magick/resource.c	/^  *resource_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
restrict	magick/MagickCore.h	40;"	d
restrict	magick/studio.h	50;"	d
restrict	wand/MagickWand.h	40;"	d
restrict	wand/studio.h	50;"	d
rho	magick/geometry.h	/^    rho,$/;"	m	struct:_GeometryInfo
right	magick/segment.c	/^    right;$/;"	m	struct:_ExtentPacket	file:
right	magick/segment.c	/^    right;$/;"	m	struct:_IntervalTree	file:
right	magick/splay-tree.c	/^    *right;$/;"	m	struct:_NodeInfo	typeref:struct:_NodeInfo::	file:
rights	magick/policy.c	/^    rights;$/;"	m	struct:_PolicyInfo	file:
rights	magick/policy.c	/^    rights;$/;"	m	struct:_PolicyMapInfo	file:
root	magick/histogram.c	/^    *root;$/;"	m	struct:_CubeInfo	file:
root	magick/quantize.c	/^    *root;$/;"	m	struct:_CubeInfo	file:
root	magick/splay-tree.c	/^    *root;$/;"	m	struct:_SplayTreeInfo	file:
root	magick/xml-tree.c	/^    root;$/;"	m	struct:_XMLTreeRoot	typeref:struct:_XMLTreeRoot::_XMLTreeInfo	file:
root	magick/xwindow-private.h	/^    root;$/;"	m	struct:_XWindowInfo
rounds	magick/cipher.c	/^    rounds,$/;"	m	struct:_AESInfo	file:
rows	magick/cache-private.h	/^    rows;$/;"	m	struct:_CacheInfo
rows	magick/image.h	/^    rows,$/;"	m	struct:_Image
rows	magick/matrix.c	/^    rows,$/;"	m	struct:_MatrixInfo	file:
run_string	magick/delegate-private.h	/^    (MagickDLLCall *run_string)(gs_main_instance *,const char *,int,int *);$/;"	m	struct:_GhostInfo
rx	magick/geometry.h	/^    rx,$/;"	m	struct:_AffineMatrix
ry	magick/geometry.h	/^    ry,$/;"	m	struct:_AffineMatrix
sRGBColorspace	magick/colorspace.h	/^  sRGBColorspace,           \/* Default: non-linear sRGB colorspace *\/$/;"	e	enum:__anon55
sRGBCompandor	magick/deprecate.c	/^MagickExport MagickRealType sRGBCompandor(const MagickRealType pixel)$/;"	f
sampling_factor	magick/image.h	/^    *sampling_factor,$/;"	m	struct:_ImageInfo
scRGBColorspace	magick/colorspace.h	/^  scRGBColorspace,$/;"	e	enum:__anon55
scale	magick/quantum-private.h	/^    scale;$/;"	m	struct:_QuantumInfo
scale	magick/resize.c	/^    scale,          \/* dimension scaling to fit window support (usally 1.0) *\/$/;"	m	struct:_ResizeFilter	file:
scanline	magick/draw.c	/^    scanline;$/;"	m	struct:_EdgeInfo	file:
scene	magick/image.h	/^    scene,          \/* index of image in multi-image file *\/$/;"	m	struct:_Image
scene	magick/image.h	/^    scene,$/;"	m	struct:_ImageInfo
scenes	magick/image.h	/^    *scenes;$/;"	m	struct:_ImageInfo
screen	magick/xwindow-private.h	/^    screen;$/;"	m	struct:_XWindowInfo
screen	magick/xwindow.h	/^    screen,$/;"	m	struct:_XImportInfo
secret_key	magick/random.c	/^    secret_key;$/;"	m	struct:_RandomInfo	file:
secret_key	magick/random.c	/^  secret_key = ~0UL;$/;"	v	file:
seed	magick/random.c	/^    seed[4];$/;"	m	struct:_RandomInfo	file:
seed	magick/statistic.c	/^    seed,$/;"	m	struct:_PixelList	file:
seeds	magick/opencl-private.h	/^  cl_mem seeds;$/;"	m	struct:_MagickCLEnv
seedsLock	magick/opencl-private.h	/^  SemaphoreInfo* seedsLock;$/;"	m	struct:_MagickCLEnv
seekable_stream	magick/magick.h	/^    seekable_stream;$/;"	m	struct:_MagickInfo
seekdir	magick/nt-base.h	207;"	d
segment_info	magick/xwindow-private.h	/^    *segment_info;$/;"	m	struct:_XWindowInfo
segment_pool	magick/memory.c	/^    segment_pool[MaxSegments];$/;"	m	struct:_MemoryPool	file:
segments	magick/memory.c	/^    *segments[MaxSegments],$/;"	m	struct:_MemoryPool	file:
semaphore	magick/blob.c	/^    *semaphore;$/;"	m	struct:_BlobInfo	file:
semaphore	magick/cache-private.h	/^    *semaphore,$/;"	m	struct:_CacheInfo
semaphore	magick/delegate.h	/^    *semaphore;$/;"	m	struct:_DelegateInfo
semaphore	magick/exception.h	/^    *semaphore;$/;"	m	struct:_ExceptionInfo
semaphore	magick/hashmap.c	/^    *semaphore;$/;"	m	struct:_HashmapInfo	file:
semaphore	magick/hashmap.c	/^    *semaphore;$/;"	m	struct:_LinkedListInfo	file:
semaphore	magick/image.h	/^    *semaphore;$/;"	m	struct:_Image
semaphore	magick/magick.h	/^    *semaphore;$/;"	m	struct:_MagickInfo
semaphore	magick/matrix.c	/^    *semaphore;$/;"	m	struct:_MatrixInfo	file:
semaphore	magick/policy.c	/^    *semaphore;$/;"	m	struct:_PolicyInfo	file:
semaphore	magick/quantum-private.h	/^    *semaphore;$/;"	m	struct:_QuantumInfo
semaphore	magick/random.c	/^    *semaphore;$/;"	m	struct:_RandomInfo	file:
semaphore	magick/splay-tree.c	/^    *semaphore;$/;"	m	struct:_SplayTreeInfo	file:
semaphore	magick/xml-tree.c	/^    *semaphore;$/;"	m	struct:_XMLTreeInfo	file:
semaphore	magick/xml-tree.c	/^    *semaphore;$/;"	m	struct:_XMLTreeRoot	file:
semaphore_mutex	magick/semaphore-private.h	/^  semaphore_mutex = 0;$/;"	v
semaphore_mutex	magick/semaphore-private.h	/^  semaphore_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
semaphore_mutex	magick/semaphore-private.h	/^  semaphore_mutex;$/;"	v
send	magick/distribute-cache.c	81;"	d	file:
send	magick/distribute-cache.c	83;"	d	file:
sentinel	magick/xml-tree.c	/^  *sentinel[] = { (char *) NULL };$/;"	v	file:
server_info	magick/cache-private.h	/^    *server_info;$/;"	m	struct:_CacheInfo
server_name	magick/draw.h	/^    *server_name;$/;"	m	struct:_DrawInfo
server_name	magick/image.h	/^    *server_name,$/;"	m	struct:_ImageInfo
session_key	magick/distribute-cache-private.h	/^    session_key;$/;"	m	struct:_DistributeCacheInfo
set_stdio	magick/delegate-private.h	/^    (MagickDLLCall *set_stdio)(gs_main_instance *,int(MagickDLLCall *)(void *,$/;"	m	struct:_GhostInfo
setmode	magick/nt-base.h	210;"	d
severity	magick/exception.h	/^    severity;$/;"	m	struct:_ExceptionInfo
shadow	magick/montage.h	/^    shadow;$/;"	m	struct:_MontageInfo
shadow_color	magick/xwindow-private.h	/^    shadow_color,$/;"	m	struct:_XPixelInfo
shadow_stipple	magick/xwindow-private.h	/^    shadow_stipple,$/;"	m	struct:_XWindowInfo
shape	magick/xwindow-private.h	/^    shape,$/;"	m	struct:_XWindowInfo
shared_memory	magick/xwindow-private.h	/^    shared_memory;$/;"	m	struct:_XWindowInfo
sibling	magick/segment.c	/^    *sibling,$/;"	m	struct:_IntervalTree	typeref:struct:_IntervalTree::_IntervalTree	file:
sibling	magick/xml-tree.c	/^    *sibling,$/;"	m	struct:_XMLTreeInfo	file:
sigma	magick/geometry.h	/^    sigma,$/;"	m	struct:_GeometryInfo
signal_handlers	magick/magick.c	/^  *signal_handlers[SIGMAX] = { (SignalHandler *) NULL };$/;"	v	file:
signature	magick/blob.c	/^    signature;$/;"	m	struct:_BlobInfo	file:
signature	magick/cache-private.h	/^    signature;$/;"	m	struct:_CacheInfo
signature	magick/cache-private.h	/^    signature;$/;"	m	struct:_NexusInfo
signature	magick/cache-view.c	/^    signature;$/;"	m	struct:_CacheView	file:
signature	magick/cipher.c	/^    signature;$/;"	m	struct:_AESInfo	file:
signature	magick/coder.h	/^    signature;$/;"	m	struct:_CoderInfo
signature	magick/color.h	/^    signature;$/;"	m	struct:_ColorInfo
signature	magick/configure.h	/^    signature;$/;"	m	struct:_ConfigureInfo
signature	magick/delegate.h	/^    signature;$/;"	m	struct:_DelegateInfo
signature	magick/distribute-cache-private.h	/^    signature;$/;"	m	struct:_DistributeCacheInfo
signature	magick/draw.h	/^    signature;$/;"	m	struct:_DrawInfo
signature	magick/draw.h	/^    signature;$/;"	m	struct:_ElementReference
signature	magick/draw.h	/^    signature;$/;"	m	struct:_GradientInfo
signature	magick/exception.h	/^    signature;$/;"	m	struct:_ExceptionInfo
signature	magick/hashmap.c	/^    signature;$/;"	m	struct:_HashmapInfo	file:
signature	magick/hashmap.c	/^    signature;$/;"	m	struct:_LinkedListInfo	file:
signature	magick/image.h	/^    signature;$/;"	m	struct:_Image
signature	magick/image.h	/^    signature;$/;"	m	struct:_ImageInfo
signature	magick/locale_.h	/^    signature;$/;"	m	struct:_LocaleInfo
signature	magick/log.c	/^    signature;$/;"	m	struct:_LogInfo	file:
signature	magick/magic.h	/^    signature;$/;"	m	struct:_MagicInfo
signature	magick/magick.h	/^    signature;$/;"	m	struct:_MagickInfo
signature	magick/matrix.c	/^    signature;$/;"	m	struct:_MatrixInfo	file:
signature	magick/memory.c	/^    signature;$/;"	m	struct:_MemoryInfo	file:
signature	magick/mime.c	/^    signature;$/;"	m	struct:_MimeInfo	file:
signature	magick/module.h	/^    signature;$/;"	m	struct:_ModuleInfo
signature	magick/montage.h	/^    signature;$/;"	m	struct:_MontageInfo
signature	magick/morphology.h	/^    signature;$/;"	m	struct:KernelInfo
signature	magick/policy.c	/^    signature;$/;"	m	struct:_PolicyInfo	file:
signature	magick/profile.h	/^    signature;$/;"	m	struct:_ProfileInfo
signature	magick/quantize.h	/^    signature;$/;"	m	struct:_QuantizeInfo
signature	magick/quantum-private.h	/^    signature;$/;"	m	struct:_QuantumInfo
signature	magick/random.c	/^    signature;$/;"	m	struct:_RandomInfo	file:
signature	magick/registry.c	/^    signature;$/;"	m	struct:_RegistryInfo	file:
signature	magick/resample.c	/^    signature;$/;"	m	struct:_ResampleFilter	file:
signature	magick/resize.c	/^    signature;$/;"	m	struct:_ResizeFilter	file:
signature	magick/semaphore.c	/^    signature;$/;"	m	struct:SemaphoreInfo	file:
signature	magick/signature.c	/^    signature;$/;"	m	struct:_SignatureInfo	file:
signature	magick/splay-tree.c	/^    signature;$/;"	m	struct:_SplayTreeInfo	file:
signature	magick/statistic.c	/^    signature;$/;"	m	struct:_ListNode	file:
signature	magick/statistic.c	/^    signature;$/;"	m	struct:_PixelList	file:
signature	magick/stream.c	/^    signature;$/;"	m	struct:_StreamInfo	file:
signature	magick/string_.h	/^    signature;$/;"	m	struct:_StringInfo
signature	magick/timer.h	/^    signature;$/;"	m	struct:_TimerInfo
signature	magick/token.c	/^    signature;$/;"	m	struct:_TokenInfo	file:
signature	magick/type.h	/^    signature;$/;"	m	struct:_TypeInfo
signature	magick/xml-tree.c	/^    signature;$/;"	m	struct:_XMLTreeInfo	file:
signature	magick/xml-tree.c	/^    signature;$/;"	m	struct:_XMLTreeRoot	file:
signature	wand/drawing-wand.c	/^    signature;$/;"	m	struct:_DrawingWand	file:
signature	wand/magick-wand-private.h	/^    signature;$/;"	m	struct:_MagickWand
signature	wand/pixel-iterator.c	/^    signature;$/;"	m	struct:_PixelIterator	file:
signature	wand/pixel-wand.c	/^    signature;$/;"	m	struct:_PixelWand	file:
signature_info	magick/random.c	/^    *signature_info;$/;"	m	struct:_RandomInfo	file:
silent	magick/xwindow.h	/^    silent;$/;"	m	struct:_XImportInfo
sindex	magick/token.c	/^static ssize_t sindex(int c,const char *string)$/;"	f	file:
size	magick/blob.c	/^    size;$/;"	m	struct:_BlobInfo	file:
size	magick/image.h	/^    *size,$/;"	m	struct:_ImageInfo
skewness	magick/statistic.h	/^    skewness;$/;"	m	struct:_ChannelStatistics
sleep	magick/studio.h	329;"	d
sleep	magick/studio.h	330;"	d
sleep	wand/studio.h	331;"	d
sleep	wand/studio.h	332;"	d
slope	magick/resample.c	/^    Vlimit, Ulimit, Uwidth, slope;$/;"	m	struct:_ResampleFilter	file:
span	magick/quantize.c	/^    span;$/;"	m	struct:_CubeInfo	file:
spawn	magick/delegate.h	/^    spawn,$/;"	m	struct:_DelegateInfo
spawnvp	magick/nt-base.h	213;"	d
spec_strdup	image_validator/ImageValidator.c	/^char *spec_strdup(const char * str) {$/;"	f
splitImage	magick/accelerate.c	/^static MagickBooleanType splitImage(const Image* inputImage)$/;"	f	file:
spread	magick/draw.h	/^    spread;$/;"	m	struct:_GradientInfo
ssize_t	magick/magick-baseconfig.h	/^typedef SSIZE_T ssize_t;$/;"	t
stability	magick/segment.c	/^    stability;$/;"	m	struct:_IntervalTree	file:
standalone	magick/xml-tree.c	/^    standalone;$/;"	m	struct:_XMLTreeRoot	file:
standard_deviation	magick/statistic.h	/^    standard_deviation,$/;"	m	struct:_ChannelStatistics
start	magick/timer.h	/^    start,$/;"	m	struct:_Timer
start_loop	magick/image.h	/^    start_loop;$/;"	m	struct:_Image
stasis	magick/xwindow-private.h	/^    stasis;$/;"	m	struct:_XWindowInfo
stat	magick/nt-base.h	221;"	d
stat	magick/nt-base.h	223;"	d
stat_utf8	magick/utility-private.h	/^static inline int stat_utf8(const char *path,struct stat *attributes)$/;"	f
state	magick/quantum-private.h	/^    state;$/;"	m	struct:_QuantumInfo
state	magick/timer.h	/^    state;$/;"	m	struct:_TimerInfo
state	magick/token.c	/^    state;$/;"	m	struct:_TokenInfo	file:
status	magick/blob.c	/^    status,$/;"	m	struct:_BlobInfo	file:
stealth	magick/coder.h	/^    stealth;$/;"	m	struct:_CoderInfo
stealth	magick/color.h	/^    stealth;$/;"	m	struct:_ColorInfo
stealth	magick/configure.h	/^    stealth;$/;"	m	struct:_ConfigureInfo
stealth	magick/delegate.h	/^    stealth;$/;"	m	struct:_DelegateInfo
stealth	magick/locale_.h	/^    stealth;$/;"	m	struct:_LocaleInfo
stealth	magick/log.c	/^    stealth;$/;"	m	struct:_LogInfo	file:
stealth	magick/magic.h	/^    stealth;$/;"	m	struct:_MagicInfo
stealth	magick/magick.h	/^    stealth;$/;"	m	struct:_MagickInfo
stealth	magick/mime.c	/^    stealth;$/;"	m	struct:_MimeInfo	file:
stealth	magick/module.h	/^    stealth;$/;"	m	struct:_ModuleInfo
stealth	magick/option.h	/^    stealth;$/;"	m	struct:_OptionInfo
stealth	magick/policy.c	/^    stealth,$/;"	m	struct:_PolicyInfo	file:
stealth	magick/type.h	/^    stealth;$/;"	m	struct:_TypeInfo
stencil	magick/xwindow-private.h	/^    stencil;$/;"	m	struct:_XAnnotateInfo
stencil	magick/xwindow-private.h	/^    stencil;$/;"	m	struct:_XDrawInfo
stipple	magick/xwindow-private.h	/^    stipple;$/;"	m	struct:_XDrawInfo
stop	magick/timer.h	/^    stop,$/;"	m	struct:_Timer
stops	magick/draw.h	/^    *stops;$/;"	m	struct:_GradientInfo
storage_class	magick/cache-private.h	/^    storage_class;$/;"	m	struct:_CacheInfo
storage_class	magick/image.h	/^    storage_class;$/;"	m	struct:_Image
storage_class	magick/pixel.h	/^    storage_class;$/;"	m	struct:_MagickPixelPacket
storage_class	magick/xwindow-private.h	/^    storage_class,$/;"	m	struct:_XWindowInfo
storage_class	wand/studio.h	62;"	d
storage_class	wand/studio.h	64;"	d
storage_type	magick/stream.c	/^    storage_type;$/;"	m	struct:_StreamInfo	file:
strcasecmp	magick/nt-base.h	227;"	d
stream	magick/blob.c	/^    stream;$/;"	m	struct:_BlobInfo	file:
stream	magick/image.h	/^    stream;$/;"	m	struct:_ImageInfo
stream	magick/stream.c	/^    *stream;$/;"	m	struct:_StreamInfo	file:
stretch	magick/draw.h	/^    stretch;$/;"	m	struct:_DrawInfo
stretch	magick/type.h	/^    stretch;$/;"	m	struct:_TypeInfo
stride	magick/matrix.c	/^    stride;$/;"	m	struct:_MatrixInfo	file:
strncasecmp	magick/nt-base.h	230;"	d
stroke	magick/draw.h	/^    stroke;$/;"	m	struct:_DrawInfo
stroke	magick/montage.h	/^    stroke,$/;"	m	struct:_MontageInfo
stroke_antialias	magick/draw.h	/^    stroke_antialias,$/;"	m	struct:_DrawInfo
stroke_pattern	magick/draw.h	/^    *stroke_pattern;$/;"	m	struct:_DrawInfo
stroke_width	magick/draw.h	/^    stroke_width;$/;"	m	struct:_DrawInfo
strtod_l	magick/nt-base.h	216;"	d
style	magick/draw.h	/^    style;$/;"	m	struct:_DrawInfo
style	magick/type.h	/^    style;$/;"	m	struct:_TypeInfo
subimage	magick/image.h	/^    subimage,  \/* deprecated *\/$/;"	m	struct:_ImageInfo
subrange	magick/image.h	/^    subrange;  \/* deprecated *\/$/;"	m	struct:_ImageInfo
sum	magick/statistic.h	/^    sum,$/;"	m	struct:_ChannelStatistics
sum_average	magick/feature.h	/^    sum_average[4],$/;"	m	struct:_ChannelFeatures
sum_cubed	magick/statistic.h	/^    sum_cubed,$/;"	m	struct:_ChannelStatistics
sum_entropy	magick/feature.h	/^    sum_entropy[4],$/;"	m	struct:_ChannelFeatures
sum_fourth_power	magick/statistic.h	/^    sum_fourth_power,$/;"	m	struct:_ChannelStatistics
sum_squared	magick/statistic.h	/^    sum_squared,$/;"	m	struct:_ChannelStatistics
sum_variance	magick/feature.h	/^    sum_variance[4],$/;"	m	struct:_ChannelFeatures
support	magick/resample.c	/^    support;$/;"	m	struct:_ResampleFilter	file:
support	magick/resize.c	/^    support,        \/* filter region of support - the filter support limit *\/$/;"	m	struct:_ResizeFilter	file:
supportedResizeWeighting	magick/accelerate.c	/^const ResizeWeightingFunctionType supportedResizeWeighting[] = $/;"	v
svnrev	image_validator/ImageValidator.c	/^static const char *svnrev = "$LastChangedRevision: 4696 $";$/;"	v	file:
sx	magick/geometry.h	/^    sx,$/;"	m	struct:_AffineMatrix
sy	magick/geometry.h	/^    sy,$/;"	m	struct:_AffineMatrix
symbols	magick/fx.c	/^    *symbols;$/;"	m	struct:_FxInfo	file:
sync_authentic_pixels_handler	magick/cache-private.h	/^    sync_authentic_pixels_handler;$/;"	m	struct:_CacheMethods
synchronize	magick/blob.c	/^    synchronize,$/;"	m	struct:_BlobInfo	file:
synchronize	magick/cache-private.h	/^    synchronize,$/;"	m	struct:_CacheInfo
synchronize	magick/image.h	/^    synchronize;$/;"	m	struct:_ImageInfo
synchronize	magick/matrix.c	/^    synchronize;$/;"	m	struct:_MatrixInfo	file:
sysconf	magick/nt-base.h	233;"	d
t	magick/opencl-private.h	/^  typedef struct { unsigned char t[8]; } cl_device_type; \/* 64-bit *\/$/;"	m	struct:__anon12
tag	magick/locale_.h	/^    *tag,$/;"	m	struct:_LocaleInfo
tag	magick/module.h	/^    *tag;$/;"	m	struct:_ModuleInfo
tag	magick/xml-tree.c	/^    *tag,$/;"	m	struct:_XMLTreeInfo	file:
tail	magick/hashmap.c	/^    *tail,$/;"	m	struct:_LinkedListInfo	file:
taint	magick/image.h	/^    taint,           \/* has image been modified since reading *\/$/;"	m	struct:_Image
target	magick/magic.h	/^    *target;$/;"	m	struct:_MagicInfo
target	magick/quantize.c	/^    target;$/;"	m	struct:_CubeInfo	file:
tau	magick/segment.c	/^    tau,$/;"	m	struct:_ZeroCrossing	file:
tau	magick/segment.c	/^    tau;$/;"	m	struct:_IntervalTree	file:
tell	magick/nt-base.h	237;"	d
tell	magick/nt-base.h	239;"	d
telldir	magick/nt-base.h	242;"	d
tempnam	magick/nt-base.h	245;"	d
temporary	magick/blob.c	/^    temporary;$/;"	m	struct:_BlobInfo	file:
temporary	magick/image.h	/^    temporary,$/;"	m	struct:_ImageInfo
temporary_resources	magick/resource.c	/^  *temporary_resources = (SplayTreeInfo *) NULL;$/;"	v	file:
text	magick/draw.h	/^    *text;$/;"	m	struct:_DrawInfo
text	magick/draw.h	/^    *text;$/;"	m	struct:_PrimitiveInfo
text	magick/xwindow-private.h	/^    *text;$/;"	m	struct:_XAnnotateInfo
text_antialias	magick/draw.h	/^    text_antialias;$/;"	m	struct:_DrawInfo
text_font	magick/xwindow-private.h	/^    *text_font,$/;"	m	struct:_XResourceInfo
texture	magick/image.h	/^    *texture,$/;"	m	struct:_ImageInfo
texture	magick/montage.h	/^    *texture,$/;"	m	struct:_MontageInfo
thread	magick/resource.c	/^    thread,$/;"	m	struct:_ResourceInfo	file:
thread_limit	magick/resource.c	/^    thread_limit,$/;"	m	struct:_ResourceInfo	file:
thread_support	magick/delegate.h	/^    thread_support,$/;"	m	struct:_DelegateInfo
thread_support	magick/magick.h	/^    thread_support;$/;"	m	struct:_MagickInfo
threshold	image_validator/ImageValidator.c	/^    double        threshold;$/;"	m	struct:__anon100	file:
throttle	magick/resource.c	/^    throttle,$/;"	m	struct:_ResourceInfo	file:
throttle_limit	magick/resource.c	/^    throttle_limit,$/;"	m	struct:_ResourceInfo	file:
ticks_per_second	magick/image.h	/^    ticks_per_second;  \/* units for delay time, default 100 for GIF *\/$/;"	m	struct:_Image
tile	magick/draw.h	/^    *tile,$/;"	m	struct:_DrawInfo
tile	magick/image.h	/^    *tile;  \/* deprecated *\/$/;"	m	struct:_ImageInfo
tile	magick/montage.h	/^    *tile,$/;"	m	struct:_MontageInfo
tile_info	magick/image.h	/^    tile_info;      \/* deprecated *\/$/;"	m	struct:_Image
tile_offset	magick/image.h	/^    tile_offset;$/;"	m	struct:_Image
time	magick/resource.c	/^    time;$/;"	m	struct:_ResourceInfo	file:
time_limit	magick/resource.c	/^    time_limit;$/;"	m	struct:_ResourceInfo	file:
timer	magick/image.h	/^    timer;$/;"	m	struct:_Image
timer	magick/log.c	/^    timer;$/;"	m	struct:_LogInfo	file:
timestamp	magick/cache-private.h	/^    timestamp;$/;"	m	struct:_CacheInfo
timestamp	magick/cipher.c	/^    timestamp;$/;"	m	struct:_AESInfo	file:
timestamp	magick/image.h	/^    timestamp;$/;"	m	struct:_Image
timestamp	magick/module.h	/^    timestamp;$/;"	m	struct:_ModuleInfo
timestamp	magick/random.c	/^    timestamp;$/;"	m	struct:_RandomInfo	file:
timestamp	magick/signature.c	/^    timestamp;$/;"	m	struct:_SignatureInfo	file:
timezone	magick/nt-base-private.h	/^struct timezone$/;"	s
title	magick/montage.h	/^    *title,$/;"	m	struct:_MontageInfo
title	magick/xwindow-private.h	/^    *title;$/;"	m	struct:_XResourceInfo
total	magick/timer.h	/^    total;$/;"	m	struct:_Timer
total_color	magick/quantize.c	/^    total_color;$/;"	m	struct:_NodeInfo	file:
total_colors	magick/image.h	/^    total_colors;$/;"	m	struct:_Image
transparent_color	magick/image.h	/^    transparent_color; \/* color for 'transparent' color index in GIF *\/$/;"	m	struct:_Image
transparent_color	magick/image.h	/^    transparent_color;$/;"	m	struct:_ImageInfo
transparent_index	magick/quantize.c	/^    transparent_index;$/;"	m	struct:_CubeInfo	file:
transparent_pixels	magick/quantize.c	/^    transparent_pixels;$/;"	m	struct:_CubeInfo	file:
tree_depth	magick/quantize.h	/^    tree_depth;$/;"	m	struct:_QuantizeInfo
trough_color	magick/xwindow-private.h	/^    trough_color,$/;"	m	struct:_XPixelInfo
tx	magick/geometry.h	/^    tx,$/;"	m	struct:_AffineMatrix
ty	magick/geometry.h	/^    ty;$/;"	m	struct:_AffineMatrix
type	magick/blob.c	/^    type;$/;"	m	struct:_BlobInfo	file:
type	magick/cache-private.h	/^    type;$/;"	m	struct:_CacheInfo
type	magick/draw.h	/^    type;$/;"	m	struct:_ElementReference
type	magick/draw.h	/^    type;$/;"	m	struct:_GradientInfo
type	magick/image.h	/^    type;$/;"	m	struct:_Image
type	magick/image.h	/^    type;$/;"	m	struct:_ImageInfo
type	magick/matrix.c	/^    type;$/;"	m	struct:_MatrixInfo	file:
type	magick/memory.c	/^    type;$/;"	m	struct:_MemoryInfo	file:
type	magick/mime.c	/^    *type,$/;"	m	struct:_MimeInfo	file:
type	magick/morphology.h	/^    type;$/;"	m	struct:KernelInfo
type	magick/option.h	/^    type,$/;"	m	struct:_OptionInfo
type	magick/registry.c	/^    type;$/;"	m	struct:_RegistryInfo	file:
type_cache	magick/type.c	/^  *type_cache = (SplayTreeInfo *) NULL;$/;"	v	file:
type_semaphore	magick/type.c	/^  *type_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
tz_dsttime	magick/nt-base-private.h	/^    tz_dsttime;$/;"	m	struct:timezone
tz_minuteswest	magick/nt-base-private.h	/^    tz_minuteswest,$/;"	m	struct:timezone
u	image_validator/ImageValidator.c	/^    unsigned char u;$/;"	m	struct:__anon96	file:
ullAvailExtendedVirtual	magick/nt-base-private.h	/^    ullAvailExtendedVirtual;$/;"	m	struct:_NTMEMORYSTATUSEX
ullAvailPageFile	magick/nt-base-private.h	/^    ullAvailPageFile,$/;"	m	struct:_NTMEMORYSTATUSEX
ullAvailPhys	magick/nt-base-private.h	/^    ullAvailPhys,$/;"	m	struct:_NTMEMORYSTATUSEX
ullAvailVirtual	magick/nt-base-private.h	/^    ullAvailVirtual,$/;"	m	struct:_NTMEMORYSTATUSEX
ullTotalPageFile	magick/nt-base-private.h	/^    ullTotalPageFile,$/;"	m	struct:_NTMEMORYSTATUSEX
ullTotalPhys	magick/nt-base-private.h	/^    ullTotalPhys,$/;"	m	struct:_NTMEMORYSTATUSEX
ullTotalVirtual	magick/nt-base-private.h	/^    ullTotalVirtual,$/;"	m	struct:_NTMEMORYSTATUSEX
undercolor	magick/draw.h	/^    undercolor,$/;"	m	struct:_DrawInfo
underline_position	magick/draw.h	/^    underline_position,$/;"	m	struct:_TypeMetric
underline_thickness	magick/draw.h	/^    underline_thickness;$/;"	m	struct:_TypeMetric
undo_cache	magick/xwindow-private.h	/^    undo_cache;$/;"	m	struct:_XResourceInfo
unique	magick/image.h	/^    unique[MaxTextExtent],$/;"	m	struct:_ImageInfo
units	magick/image.h	/^    units;          \/* resolution\/density  ppi or ppc *\/$/;"	m	struct:_Image
units	magick/image.h	/^    units;$/;"	m	struct:_ImageInfo
update	magick/xwindow-private.h	/^    update;$/;"	m	struct:_XResourceInfo
use_pixmap	magick/xwindow-private.h	/^    use_pixmap,$/;"	m	struct:_XResourceInfo
use_pixmap	magick/xwindow-private.h	/^    use_pixmap,$/;"	m	struct:_XWindowInfo
use_shared_memory	magick/xwindow-private.h	/^    use_shared_memory;$/;"	m	struct:_XResourceInfo
user	magick/timer.h	/^    user,$/;"	m	struct:_TimerInfo
utf_info	magick/token-private.h	/^  utf_info[MaxMultibyteCodes] =$/;"	v
utf_mask	magick/token-private.h	/^    utf_mask,$/;"	m	struct:__anon49
utf_value	magick/token-private.h	/^    utf_value;$/;"	m	struct:__anon49
v	image_validator/ImageValidator.c	/^    unsigned char v;$/;"	m	struct:__anon96	file:
value	magick/PreRvIcccm.h	/^    *value;$/;"	m	struct:_XTextProperty
value	magick/configure.c	/^    *value;$/;"	m	struct:_ConfigureMapInfo	file:
value	magick/configure.h	/^    *value;$/;"	m	struct:_ConfigureInfo
value	magick/deprecate.h	/^    *value;$/;"	m	struct:_ImageAttribute
value	magick/hashmap.c	/^    *value;$/;"	m	struct:_ElementInfo	file:
value	magick/hashmap.c	/^    *value;$/;"	m	struct:_EntryInfo	file:
value	magick/mime.c	/^    value;$/;"	m	struct:_MimeInfo	file:
value	magick/policy.c	/^    *value;$/;"	m	struct:_PolicyInfo	file:
value	magick/policy.c	/^    *value;$/;"	m	struct:_PolicyMapInfo	file:
value	magick/registry.c	/^    *value;$/;"	m	struct:_RegistryInfo	file:
value	magick/splay-tree.c	/^    *value;$/;"	m	struct:_NodeInfo	file:
values	magick/morphology.h	/^    *values,$/;"	m	struct:KernelInfo
variance	image_validator/ImageValidator.c	/^double variance(double *values, double mean, int n) {$/;"	f
variance	magick/statistic.h	/^    variance,$/;"	m	struct:_ChannelStatistics
variance_sum_of_squares	magick/feature.h	/^    variance_sum_of_squares[4],$/;"	m	struct:_ChannelFeatures
verbose	magick/image.h	/^    verbose;$/;"	m	struct:_ImageInfo
version	magick/magick.h	/^    *version,$/;"	m	struct:_MagickInfo
vfprintf_l	magick/nt-base.h	248;"	d
view	magick/fx.c	/^    **view;$/;"	m	struct:_FxInfo	file:
view	magick/image.h	/^    *view,$/;"	m	struct:_ImageInfo
view	magick/resample.c	/^    *view;$/;"	m	struct:_ResampleFilter	file:
view	wand/pixel-iterator.c	/^    *view;$/;"	m	struct:_PixelIterator	file:
viewbox	magick/draw.h	/^    viewbox;$/;"	m	struct:_DrawInfo
virtual_pixel	magick/resample.c	/^    virtual_pixel;$/;"	m	struct:_ResampleFilter	file:
virtual_pixel_color	magick/cache-private.h	/^    virtual_pixel_color;$/;"	m	struct:_CacheInfo
virtual_pixel_method	magick/cache-private.h	/^    virtual_pixel_method;$/;"	m	struct:_CacheInfo
virtual_pixel_method	magick/cache-view.c	/^    virtual_pixel_method;$/;"	m	struct:_CacheView	file:
virtual_pixel_method	magick/image.h	/^    virtual_pixel_method;$/;"	m	struct:_ImageInfo
visual	magick/xwindow-private.h	/^    *visual;$/;"	m	struct:_XWindowInfo
visual_info	magick/xwindow-private.h	/^    *visual_info,$/;"	m	struct:_XWindows
visual_info	magick/xwindow-private.h	/^    *visual_info;$/;"	m	struct:_XWindowInfo
visual_type	magick/xwindow-private.h	/^    *visual_type,$/;"	m	struct:_XResourceInfo
vsnprintf	magick/nt-base.h	252;"	d
vsnprintf_l	magick/nt-base.h	256;"	d
wand_aligned	wand/method-attribute.h	103;"	d
wand_aligned	wand/method-attribute.h	108;"	d
wand_aligned	wand/method-attribute.h	113;"	d
wand_alloc_size	wand/method-attribute.h	126;"	d
wand_alloc_size	wand/method-attribute.h	131;"	d
wand_alloc_sizes	wand/method-attribute.h	127;"	d
wand_alloc_sizes	wand/method-attribute.h	132;"	d
wand_attribute	wand/method-attribute.h	104;"	d
wand_attribute	wand/method-attribute.h	109;"	d
wand_attribute	wand/method-attribute.h	114;"	d
wand_cold_spot	wand/method-attribute.h	128;"	d
wand_cold_spot	wand/method-attribute.h	133;"	d
wand_hot_spot	wand/method-attribute.h	129;"	d
wand_hot_spot	wand/method-attribute.h	134;"	d
wand_ids	wand/wand.c	/^  *wand_ids = (SplayTreeInfo *) NULL;$/;"	v	file:
wand_semaphore	wand/wand.c	/^  *wand_semaphore = (SemaphoreInfo *) NULL;$/;"	v	file:
wand_unreferenced	wand/method-attribute.h	106;"	d
wand_unreferenced	wand/method-attribute.h	111;"	d
wand_unreferenced	wand/method-attribute.h	116;"	d
wand_unused	wand/method-attribute.h	105;"	d
wand_unused	wand/method-attribute.h	110;"	d
wand_unused	wand/method-attribute.h	115;"	d
warning_handler	magick/exception.c	/^  warning_handler = DefaultWarningHandler;$/;"	v	file:
weight	magick/draw.h	/^    weight;$/;"	m	struct:_DrawInfo
weight	magick/resize.c	/^    weight;$/;"	m	struct:_ContributionInfo	file:
weight	magick/type.h	/^    weight;$/;"	m	struct:_TypeInfo
weights	magick/quantize.c	/^    weights[ErrorQueueLength];$/;"	m	struct:_CubeInfo	file:
white_point	magick/image.h	/^    white_point;$/;"	m	struct:_ChromaticityInfo
widget	magick/xwindow-private.h	/^    widget,$/;"	m	struct:_XWindows
widget_context	magick/xwindow-private.h	/^    widget_context;$/;"	m	struct:_XPixelInfo
widget_context	magick/xwindow-private.h	/^    widget_context;$/;"	m	struct:_XWindowInfo
width	image_validator/ImageValidator.c	/^    unsigned int  width;$/;"	m	struct:__anon100	file:
width	image_validator/ImageValidator.c	/^    unsigned short width;$/;"	m	struct:__anon98	file:
width	magick/decorate.h	/^    width,$/;"	m	struct:_FrameInfo
width	magick/draw.h	/^    width,$/;"	m	struct:_TypeMetric
width	magick/fourier.c	/^    width,$/;"	m	struct:_FourierInfo	file:
width	magick/geometry.h	/^    width,$/;"	m	struct:_RectangleInfo
width	magick/morphology.h	/^    width,$/;"	m	struct:KernelInfo
width	magick/threshold.c	/^    width,$/;"	m	struct:_ThresholdMap	file:
width	magick/xwindow-private.h	/^    width,$/;"	m	struct:_XAnnotateInfo
width	magick/xwindow-private.h	/^    width,$/;"	m	struct:_XDrawInfo
width	magick/xwindow-private.h	/^    width,$/;"	m	struct:_XWindowInfo
width_inc	magick/xwindow-private.h	/^    width_inc,$/;"	m	struct:_XWindowInfo
windowWeightingType	magick/resize.c	/^    windowWeightingType;$/;"	m	struct:_ResizeFilter	file:
window_changes	magick/xwindow-private.h	/^    window_changes;$/;"	m	struct:_XWindowInfo
window_group	magick/xwindow-private.h	/^    *window_group,$/;"	m	struct:_XResourceInfo
window_id	magick/xwindow-private.h	/^    *window_id,$/;"	m	struct:_XResourceInfo
window_support	magick/resize.c	/^    window_support, \/* window support, usally equal to support (expert only) *\/$/;"	m	struct:_ResizeFilter	file:
wm_delete_window	magick/xwindow-private.h	/^    wm_delete_window,$/;"	m	struct:_XWindows
wm_protocols	magick/xwindow-private.h	/^    wm_protocols,$/;"	m	struct:_XWindows
wm_take_focus	magick/xwindow-private.h	/^    wm_take_focus,$/;"	m	struct:_XWindows
wmain	utilities/convert.c	/^int wmain(int argc,wchar_t *argv[])$/;"	f
write	magick/nt-base.h	259;"	d
write_filename	magick/xwindow-private.h	/^    *write_filename;$/;"	m	struct:_XResourceInfo
write_pixel	image_validator/ImageValidator.c	932;"	d	file:
wstat	magick/nt-base.h	264;"	d
wstat	magick/nt-base.h	266;"	d
x	magick/colorspace.c	/^    x,$/;"	m	struct:_TransformPacket	file:
x	magick/decorate.h	/^    x,$/;"	m	struct:_FrameInfo
x	magick/draw.h	/^    x,$/;"	m	struct:_PointInfo
x	magick/feature.c	/^    x,$/;"	m	struct:_CannyInfo	file:
x	magick/geometry.h	/^    x,$/;"	m	struct:_OffsetInfo
x	magick/geometry.h	/^    x,$/;"	m	struct:_RectangleInfo
x	magick/histogram.c	/^    x;$/;"	m	struct:_CubeInfo	file:
x	magick/image.h	/^    x,$/;"	m	struct:_PrimaryInfo
x	magick/morphology.h	/^    x,$/;"	m	struct:KernelInfo
x	magick/quantize.c	/^    x,$/;"	m	struct:_CubeInfo	file:
x	magick/xwindow-private.h	/^    x,$/;"	m	struct:_XAnnotateInfo
x	magick/xwindow-private.h	/^    x,$/;"	m	struct:_XDrawInfo
x	magick/xwindow-private.h	/^    x,$/;"	m	struct:_XWindowInfo
x1	magick/image.h	/^    x1,$/;"	m	struct:_SegmentInfo
x2	magick/image.h	/^    x2,$/;"	m	struct:_SegmentInfo
x_origin	image_validator/ImageValidator.c	/^    unsigned short x_origin;$/;"	m	struct:__anon98	file:
x_resolution	magick/image.h	/^    x_resolution,   \/* image resolution\/density *\/$/;"	m	struct:_Image
xi	magick/geometry.h	/^    xi,$/;"	m	struct:_GeometryInfo
ximage	magick/xwindow-private.h	/^    *ximage,$/;"	m	struct:_XWindowInfo
y	image_validator/ImageValidator.c	/^    unsigned char y;$/;"	m	struct:__anon96	file:
y	magick/colorspace.c	/^    y,$/;"	m	struct:_TransformPacket	file:
y	magick/decorate.h	/^    y,$/;"	m	struct:_FrameInfo
y	magick/draw.h	/^    y;$/;"	m	struct:_PointInfo
y	magick/feature.c	/^    y;$/;"	m	struct:_CannyInfo	file:
y	magick/geometry.h	/^    y;$/;"	m	struct:_OffsetInfo
y	magick/geometry.h	/^    y;$/;"	m	struct:_RectangleInfo
y	magick/image.h	/^    y,$/;"	m	struct:_PrimaryInfo
y	magick/morphology.h	/^    y;$/;"	m	struct:KernelInfo
y	magick/quantize.c	/^    y;$/;"	m	struct:_CubeInfo	file:
y	magick/stream.c	/^    y;$/;"	m	struct:_StreamInfo	file:
y	magick/xwindow-private.h	/^    y;$/;"	m	struct:_XAnnotateInfo
y	magick/xwindow-private.h	/^    y;$/;"	m	struct:_XDrawInfo
y	magick/xwindow-private.h	/^    y;$/;"	m	struct:_XWindowInfo
y	wand/pixel-iterator.c	/^    y;$/;"	m	struct:_PixelIterator	file:
y1	magick/image.h	/^    y1,$/;"	m	struct:_SegmentInfo
y1	magick/studio.h	250;"	d
y1	wand/studio.h	252;"	d
y2	magick/image.h	/^    y2;$/;"	m	struct:_SegmentInfo
y_origin	image_validator/ImageValidator.c	/^    unsigned short y_origin;$/;"	m	struct:__anon98	file:
y_resolution	magick/image.h	/^    y_resolution;$/;"	m	struct:_Image
z	magick/colorspace.c	/^    z;$/;"	m	struct:_TransformPacket	file:
z	magick/image.h	/^    z;$/;"	m	struct:_PrimaryInfo
zero	magick/image.h	/^    zero[MaxTextExtent],$/;"	m	struct:_ImageInfo
