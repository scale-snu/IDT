/*@@
   @header  ML_BSSN_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn ML_BSSN
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_ML_BSSN_PRIVATE_FARGUMENTS \


#define ML_BSSN_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ML_BSSN_PRIVATE_CARGUMENTS \


#define DECLARE_ML_BSSN_PRIVATE_C2F \


#define INITIALISE_ML_BSSN_PRIVATE_C2F \


#define ML_BSSN_PRIVATE_C2F_PROTO \


#define PASS_ML_BSSN_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ML_BSSN_PROTECTED_FARGUMENTS \


#define ML_BSSN_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ML_BSSN_PROTECTED_CARGUMENTS \


#define DECLARE_ML_BSSN_PROTECTED_C2F \


#define INITIALISE_ML_BSSN_PROTECTED_C2F \


#define ML_BSSN_PROTECTED_C2F_PROTO \


#define PASS_ML_BSSN_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ML_BSSN_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,A,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,A_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,A_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Arhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Arhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Arhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At11rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At12rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At13rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At22rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At23rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,At33rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B1rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B2rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,B3rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,H,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,M1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,M2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,M3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt1rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt2rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Xt3rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpha,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpha_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpha_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpharhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpharhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alpharhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta1rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta2rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,beta3rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cA,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cS,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cXt1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cXt2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cXt3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_REAL,dtalp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,dtlapse_state,)&&\
CCTK_DECLARE(CCTK_INT,dtshift_state,)&&\
CCTK_DECLARE(CCTK_REAL,gt11,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt11_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt11_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt11rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt11rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt11rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt12rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt13rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt22rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt23rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33rhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gt33rhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phirhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phirhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phirhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,shift_state,)&&\
CCTK_DECLARE(CCTK_REAL,trK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,trK_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,trK_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,trKrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,trKrhs_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,trKrhs_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define ML_BSSN_PUBLIC_FARGUMENTS \
A,A_p,A_p_p,Arhs,Arhs_p,Arhs_p_p,At11,At11_p,At11_p_p,At11rhs,At11rhs_p,At11rhs_p_p,At12,At12_p,At12_p_p,At12rhs,At12rhs_p,At12rhs_p_p,At13,At13_p,At13_p_p,At13rhs,At13rhs_p,At13rhs_p_p,At22,At22_p,At22_p_p,At22rhs,At22rhs_p,At22rhs_p_p,At23,At23_p,At23_p_p,At23rhs,At23rhs_p,At23rhs_p_p,At33,At33_p,At33_p_p,At33rhs,At33rhs_p,At33rhs_p_p,B1,B1_p,B1_p_p,B1rhs,B1rhs_p,B1rhs_p_p,B2,B2_p,B2_p_p,B2rhs,B2rhs_p,B2rhs_p_p,B3,B3_p,B3_p_p,B3rhs,B3rhs_p,B3rhs_p_p,H,M1,M2,M3,Xt1,Xt1_p,Xt1_p_p,Xt1rhs,Xt1rhs_p,Xt1rhs_p_p,Xt2,Xt2_p,Xt2_p_p,Xt2rhs,Xt2rhs_p,Xt2rhs_p_p,Xt3,Xt3_p,Xt3_p_p,Xt3rhs,Xt3rhs_p,Xt3rhs_p_p,alp,alp_p,alp_p_p,alpha,alpha_p,alpha_p_p,alpharhs,alpharhs_p,alpharhs_p_p,beta1,beta1_p,beta1_p_p,beta1rhs,beta1rhs_p,beta1rhs_p_p,beta2,beta2_p,beta2_p_p,beta2rhs,beta2rhs_p,beta2rhs_p_p,beta3,beta3_p,beta3_p_p,beta3rhs,beta3rhs_p,beta3rhs_p_p,betax,betax_p,betax_p_p,betay,betay_p,betay_p_p,betaz,betaz_p,betaz_p_p,cA,cS,cXt1,cXt2,cXt3,coarse_dx,coarse_dy,coarse_dz,dtalp,dtalp_p,dtalp_p_p,dtbetax,dtbetax_p,dtbetax_p_p,dtbetay,dtbetay_p,dtbetay_p_p,dtbetaz,dtbetaz_p,dtbetaz_p_p,dtlapse_state,dtshift_state,gt11,gt11_p,gt11_p_p,gt11rhs,gt11rhs_p,gt11rhs_p_p,gt12,gt12_p,gt12_p_p,gt12rhs,gt12rhs_p,gt12rhs_p_p,gt13,gt13_p,gt13_p_p,gt13rhs,gt13rhs_p,gt13rhs_p_p,gt22,gt22_p,gt22_p_p,gt22rhs,gt22rhs_p,gt22rhs_p_p,gt23,gt23_p,gt23_p_p,gt23rhs,gt23rhs_p,gt23rhs_p_p,gt33,gt33_p,gt33_p_p,gt33rhs,gt33rhs_p,gt33rhs_p_p,gxx,gxx_p,gxx_p_p,gxy,gxy_p,gxy_p_p,gxz,gxz_p,gxz_p_p,gyy,gyy_p,gyy_p_p,gyz,gyz_p,gyz_p_p,gzz,gzz_p,gzz_p_p,kxx,kxx_p,kxx_p_p,kxy,kxy_p,kxy_p_p,kxz,kxz_p,kxz_p_p,kyy,kyy_p,kyy_p_p,kyz,kyz_p,kyz_p_p,kzz,kzz_p,kzz_p_p,phi,phi_p,phi_p_p,phirhs,phirhs_p,phirhs_p_p,r,shift_state,trK,trK_p,trK_p_p,trKrhs,trKrhs_p,trKrhs_p_p,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ML_BSSN_PUBLIC_CARGUMENTS \
static int cctki_vi_A = -100; \
if (cctki_vi_A == -100) cctki_vi_A = CCTK_VarIndex("ML_BSSN::A"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, A, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_A)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, A_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_A)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, A_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_A)); \
static int cctki_vi_Arhs = -100; \
if (cctki_vi_Arhs == -100) cctki_vi_Arhs = CCTK_VarIndex("ML_BSSN::Arhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Arhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Arhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Arhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Arhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Arhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Arhs)); \
static int cctki_vi_At11 = -100; \
if (cctki_vi_At11 == -100) cctki_vi_At11 = CCTK_VarIndex("ML_BSSN::At11"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At11)); \
static int cctki_vi_At11rhs = -100; \
if (cctki_vi_At11rhs == -100) cctki_vi_At11rhs = CCTK_VarIndex("ML_BSSN::At11rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At11rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At11rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At11rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At11rhs)); \
static int cctki_vi_At12 = -100; \
if (cctki_vi_At12 == -100) cctki_vi_At12 = CCTK_VarIndex("ML_BSSN::At12"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At12)); \
static int cctki_vi_At12rhs = -100; \
if (cctki_vi_At12rhs == -100) cctki_vi_At12rhs = CCTK_VarIndex("ML_BSSN::At12rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At12rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At12rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At12rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At12rhs)); \
static int cctki_vi_At13 = -100; \
if (cctki_vi_At13 == -100) cctki_vi_At13 = CCTK_VarIndex("ML_BSSN::At13"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At13)); \
static int cctki_vi_At13rhs = -100; \
if (cctki_vi_At13rhs == -100) cctki_vi_At13rhs = CCTK_VarIndex("ML_BSSN::At13rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At13rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At13rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At13rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At13rhs)); \
static int cctki_vi_At22 = -100; \
if (cctki_vi_At22 == -100) cctki_vi_At22 = CCTK_VarIndex("ML_BSSN::At22"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At22)); \
static int cctki_vi_At22rhs = -100; \
if (cctki_vi_At22rhs == -100) cctki_vi_At22rhs = CCTK_VarIndex("ML_BSSN::At22rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At22rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At22rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At22rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At22rhs)); \
static int cctki_vi_At23 = -100; \
if (cctki_vi_At23 == -100) cctki_vi_At23 = CCTK_VarIndex("ML_BSSN::At23"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At23)); \
static int cctki_vi_At23rhs = -100; \
if (cctki_vi_At23rhs == -100) cctki_vi_At23rhs = CCTK_VarIndex("ML_BSSN::At23rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At23rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At23rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At23rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At23rhs)); \
static int cctki_vi_At33 = -100; \
if (cctki_vi_At33 == -100) cctki_vi_At33 = CCTK_VarIndex("ML_BSSN::At33"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At33)); \
static int cctki_vi_At33rhs = -100; \
if (cctki_vi_At33rhs == -100) cctki_vi_At33rhs = CCTK_VarIndex("ML_BSSN::At33rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_At33rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_At33rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, At33rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_At33rhs)); \
static int cctki_vi_B1 = -100; \
if (cctki_vi_B1 == -100) cctki_vi_B1 = CCTK_VarIndex("ML_BSSN::B1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B1)); \
static int cctki_vi_B1rhs = -100; \
if (cctki_vi_B1rhs == -100) cctki_vi_B1rhs = CCTK_VarIndex("ML_BSSN::B1rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B1rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B1rhs)); \
static int cctki_vi_B2 = -100; \
if (cctki_vi_B2 == -100) cctki_vi_B2 = CCTK_VarIndex("ML_BSSN::B2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B2)); \
static int cctki_vi_B2rhs = -100; \
if (cctki_vi_B2rhs == -100) cctki_vi_B2rhs = CCTK_VarIndex("ML_BSSN::B2rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B2rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B2rhs)); \
static int cctki_vi_B3 = -100; \
if (cctki_vi_B3 == -100) cctki_vi_B3 = CCTK_VarIndex("ML_BSSN::B3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B3)); \
static int cctki_vi_B3rhs = -100; \
if (cctki_vi_B3rhs == -100) cctki_vi_B3rhs = CCTK_VarIndex("ML_BSSN::B3rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_B3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_B3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, B3rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_B3rhs)); \
static int cctki_vi_H = -100; \
if (cctki_vi_H == -100) cctki_vi_H = CCTK_VarIndex("ML_BSSN::H"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, H, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_H)); \
static int cctki_vi_M1 = -100; \
if (cctki_vi_M1 == -100) cctki_vi_M1 = CCTK_VarIndex("ML_BSSN::M1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, M1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_M1)); \
static int cctki_vi_M2 = -100; \
if (cctki_vi_M2 == -100) cctki_vi_M2 = CCTK_VarIndex("ML_BSSN::M2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, M2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_M2)); \
static int cctki_vi_M3 = -100; \
if (cctki_vi_M3 == -100) cctki_vi_M3 = CCTK_VarIndex("ML_BSSN::M3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, M3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_M3)); \
static int cctki_vi_Xt1 = -100; \
if (cctki_vi_Xt1 == -100) cctki_vi_Xt1 = CCTK_VarIndex("ML_BSSN::Xt1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt1)); \
static int cctki_vi_Xt1rhs = -100; \
if (cctki_vi_Xt1rhs == -100) cctki_vi_Xt1rhs = CCTK_VarIndex("ML_BSSN::Xt1rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt1rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt1rhs)); \
static int cctki_vi_Xt2 = -100; \
if (cctki_vi_Xt2 == -100) cctki_vi_Xt2 = CCTK_VarIndex("ML_BSSN::Xt2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt2)); \
static int cctki_vi_Xt2rhs = -100; \
if (cctki_vi_Xt2rhs == -100) cctki_vi_Xt2rhs = CCTK_VarIndex("ML_BSSN::Xt2rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt2rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt2rhs)); \
static int cctki_vi_Xt3 = -100; \
if (cctki_vi_Xt3 == -100) cctki_vi_Xt3 = CCTK_VarIndex("ML_BSSN::Xt3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt3)); \
static int cctki_vi_Xt3rhs = -100; \
if (cctki_vi_Xt3rhs == -100) cctki_vi_Xt3rhs = CCTK_VarIndex("ML_BSSN::Xt3rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Xt3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Xt3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Xt3rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Xt3rhs)); \
static int cctki_vi_alp = -100; \
if (cctki_vi_alp == -100) cctki_vi_alp = CCTK_VarIndex("ADMBASE::alp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alp)); \
static int cctki_vi_alpha = -100; \
if (cctki_vi_alpha == -100) cctki_vi_alpha = CCTK_VarIndex("ML_BSSN::alpha"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alpha)); \
static int cctki_vi_alpharhs = -100; \
if (cctki_vi_alpharhs == -100) cctki_vi_alpharhs = CCTK_VarIndex("ML_BSSN::alpharhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpharhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alpharhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpharhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alpharhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpharhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alpharhs)); \
static int cctki_vi_beta1 = -100; \
if (cctki_vi_beta1 == -100) cctki_vi_beta1 = CCTK_VarIndex("ML_BSSN::beta1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta1)); \
static int cctki_vi_beta1rhs = -100; \
if (cctki_vi_beta1rhs == -100) cctki_vi_beta1rhs = CCTK_VarIndex("ML_BSSN::beta1rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta1rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta1rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta1rhs)); \
static int cctki_vi_beta2 = -100; \
if (cctki_vi_beta2 == -100) cctki_vi_beta2 = CCTK_VarIndex("ML_BSSN::beta2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta2)); \
static int cctki_vi_beta2rhs = -100; \
if (cctki_vi_beta2rhs == -100) cctki_vi_beta2rhs = CCTK_VarIndex("ML_BSSN::beta2rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta2rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta2rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta2rhs)); \
static int cctki_vi_beta3 = -100; \
if (cctki_vi_beta3 == -100) cctki_vi_beta3 = CCTK_VarIndex("ML_BSSN::beta3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta3)); \
static int cctki_vi_beta3rhs = -100; \
if (cctki_vi_beta3rhs == -100) cctki_vi_beta3rhs = CCTK_VarIndex("ML_BSSN::beta3rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta3rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta3rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_beta3rhs)); \
static int cctki_vi_betax = -100; \
if (cctki_vi_betax == -100) cctki_vi_betax = CCTK_VarIndex("ADMBASE::betax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betax)); \
static int cctki_vi_betay = -100; \
if (cctki_vi_betay == -100) cctki_vi_betay = CCTK_VarIndex("ADMBASE::betay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betay)); \
static int cctki_vi_betaz = -100; \
if (cctki_vi_betaz == -100) cctki_vi_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betaz)); \
static int cctki_vi_cA = -100; \
if (cctki_vi_cA == -100) cctki_vi_cA = CCTK_VarIndex("ML_BSSN::cA"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cA, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cA)); \
static int cctki_vi_cS = -100; \
if (cctki_vi_cS == -100) cctki_vi_cS = CCTK_VarIndex("ML_BSSN::cS"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cS)); \
static int cctki_vi_cXt1 = -100; \
if (cctki_vi_cXt1 == -100) cctki_vi_cXt1 = CCTK_VarIndex("ML_BSSN::cXt1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cXt1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cXt1)); \
static int cctki_vi_cXt2 = -100; \
if (cctki_vi_cXt2 == -100) cctki_vi_cXt2 = CCTK_VarIndex("ML_BSSN::cXt2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cXt2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cXt2)); \
static int cctki_vi_cXt3 = -100; \
if (cctki_vi_cXt3 == -100) cctki_vi_cXt3 = CCTK_VarIndex("ML_BSSN::cXt3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cXt3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cXt3)); \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_dtalp = -100; \
if (cctki_vi_dtalp == -100) cctki_vi_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtalp)); \
static int cctki_vi_dtbetax = -100; \
if (cctki_vi_dtbetax == -100) cctki_vi_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetax)); \
static int cctki_vi_dtbetay = -100; \
if (cctki_vi_dtbetay == -100) cctki_vi_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetay)); \
static int cctki_vi_dtbetaz = -100; \
if (cctki_vi_dtbetaz == -100) cctki_vi_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetaz)); \
static int cctki_vi_dtlapse_state = -100; \
if (cctki_vi_dtlapse_state == -100) cctki_vi_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtlapse_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtlapse_state)); \
static int cctki_vi_dtshift_state = -100; \
if (cctki_vi_dtshift_state == -100) cctki_vi_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtshift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtshift_state)); \
static int cctki_vi_gt11 = -100; \
if (cctki_vi_gt11 == -100) cctki_vi_gt11 = CCTK_VarIndex("ML_BSSN::gt11"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt11)); \
static int cctki_vi_gt11rhs = -100; \
if (cctki_vi_gt11rhs == -100) cctki_vi_gt11rhs = CCTK_VarIndex("ML_BSSN::gt11rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt11rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt11rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt11rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt11rhs)); \
static int cctki_vi_gt12 = -100; \
if (cctki_vi_gt12 == -100) cctki_vi_gt12 = CCTK_VarIndex("ML_BSSN::gt12"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt12)); \
static int cctki_vi_gt12rhs = -100; \
if (cctki_vi_gt12rhs == -100) cctki_vi_gt12rhs = CCTK_VarIndex("ML_BSSN::gt12rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt12rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt12rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt12rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt12rhs)); \
static int cctki_vi_gt13 = -100; \
if (cctki_vi_gt13 == -100) cctki_vi_gt13 = CCTK_VarIndex("ML_BSSN::gt13"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt13)); \
static int cctki_vi_gt13rhs = -100; \
if (cctki_vi_gt13rhs == -100) cctki_vi_gt13rhs = CCTK_VarIndex("ML_BSSN::gt13rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt13rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt13rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt13rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt13rhs)); \
static int cctki_vi_gt22 = -100; \
if (cctki_vi_gt22 == -100) cctki_vi_gt22 = CCTK_VarIndex("ML_BSSN::gt22"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt22)); \
static int cctki_vi_gt22rhs = -100; \
if (cctki_vi_gt22rhs == -100) cctki_vi_gt22rhs = CCTK_VarIndex("ML_BSSN::gt22rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt22rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt22rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt22rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt22rhs)); \
static int cctki_vi_gt23 = -100; \
if (cctki_vi_gt23 == -100) cctki_vi_gt23 = CCTK_VarIndex("ML_BSSN::gt23"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt23)); \
static int cctki_vi_gt23rhs = -100; \
if (cctki_vi_gt23rhs == -100) cctki_vi_gt23rhs = CCTK_VarIndex("ML_BSSN::gt23rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt23rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt23rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt23rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt23rhs)); \
static int cctki_vi_gt33 = -100; \
if (cctki_vi_gt33 == -100) cctki_vi_gt33 = CCTK_VarIndex("ML_BSSN::gt33"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt33)); \
static int cctki_vi_gt33rhs = -100; \
if (cctki_vi_gt33rhs == -100) cctki_vi_gt33rhs = CCTK_VarIndex("ML_BSSN::gt33rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gt33rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33rhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gt33rhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gt33rhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gt33rhs)); \
static int cctki_vi_gxx = -100; \
if (cctki_vi_gxx == -100) cctki_vi_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxx)); \
static int cctki_vi_gxy = -100; \
if (cctki_vi_gxy == -100) cctki_vi_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxy)); \
static int cctki_vi_gxz = -100; \
if (cctki_vi_gxz == -100) cctki_vi_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxz)); \
static int cctki_vi_gyy = -100; \
if (cctki_vi_gyy == -100) cctki_vi_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyy)); \
static int cctki_vi_gyz = -100; \
if (cctki_vi_gyz == -100) cctki_vi_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyz)); \
static int cctki_vi_gzz = -100; \
if (cctki_vi_gzz == -100) cctki_vi_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gzz)); \
static int cctki_vi_kxx = -100; \
if (cctki_vi_kxx == -100) cctki_vi_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxx)); \
static int cctki_vi_kxy = -100; \
if (cctki_vi_kxy == -100) cctki_vi_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxy)); \
static int cctki_vi_kxz = -100; \
if (cctki_vi_kxz == -100) cctki_vi_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxz)); \
static int cctki_vi_kyy = -100; \
if (cctki_vi_kyy == -100) cctki_vi_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyy)); \
static int cctki_vi_kyz = -100; \
if (cctki_vi_kyz == -100) cctki_vi_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyz)); \
static int cctki_vi_kzz = -100; \
if (cctki_vi_kzz == -100) cctki_vi_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kzz)); \
static int cctki_vi_phi = -100; \
if (cctki_vi_phi == -100) cctki_vi_phi = CCTK_VarIndex("ML_BSSN::phi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phi)); \
static int cctki_vi_phirhs = -100; \
if (cctki_vi_phirhs == -100) cctki_vi_phirhs = CCTK_VarIndex("ML_BSSN::phirhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phirhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phirhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phirhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phirhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phirhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phirhs)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_shift_state = -100; \
if (cctki_vi_shift_state == -100) cctki_vi_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, shift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_shift_state)); \
static int cctki_vi_trK = -100; \
if (cctki_vi_trK == -100) cctki_vi_trK = CCTK_VarIndex("ML_BSSN::trK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_trK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trK_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_trK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trK_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_trK)); \
static int cctki_vi_trKrhs = -100; \
if (cctki_vi_trKrhs == -100) cctki_vi_trKrhs = CCTK_VarIndex("ML_BSSN::trKrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trKrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_trKrhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trKrhs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_trKrhs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trKrhs_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_trKrhs)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_ML_BSSN_PUBLIC_C2F \
static int CCTKARGNUM_A = -1; \
static int CCTKGROUPNUM_ML_dtlapse = -1; \
static int CCTKARGNUM_Arhs = -1; \
static int CCTKGROUPNUM_ML_dtlapserhs = -1; \
static int CCTKARGNUM_At11 = -1; \
static int CCTKGROUPNUM_ML_curv = -1; \
static int CCTKARGNUM_At11rhs = -1; \
static int CCTKGROUPNUM_ML_curvrhs = -1; \
static int CCTKARGNUM_At12 = -1; \
static int CCTKARGNUM_At12rhs = -1; \
static int CCTKARGNUM_At13 = -1; \
static int CCTKARGNUM_At13rhs = -1; \
static int CCTKARGNUM_At22 = -1; \
static int CCTKARGNUM_At22rhs = -1; \
static int CCTKARGNUM_At23 = -1; \
static int CCTKARGNUM_At23rhs = -1; \
static int CCTKARGNUM_At33 = -1; \
static int CCTKARGNUM_At33rhs = -1; \
static int CCTKARGNUM_B1 = -1; \
static int CCTKGROUPNUM_ML_dtshift = -1; \
static int CCTKARGNUM_B1rhs = -1; \
static int CCTKGROUPNUM_ML_dtshiftrhs = -1; \
static int CCTKARGNUM_B2 = -1; \
static int CCTKARGNUM_B2rhs = -1; \
static int CCTKARGNUM_B3 = -1; \
static int CCTKARGNUM_B3rhs = -1; \
static int CCTKARGNUM_H = -1; \
static int CCTKGROUPNUM_ML_Ham = -1; \
static int CCTKARGNUM_M1 = -1; \
static int CCTKGROUPNUM_ML_mom = -1; \
static int CCTKARGNUM_M2 = -1; \
static int CCTKARGNUM_M3 = -1; \
static int CCTKARGNUM_Xt1 = -1; \
static int CCTKGROUPNUM_ML_Gamma = -1; \
static int CCTKARGNUM_Xt1rhs = -1; \
static int CCTKGROUPNUM_ML_Gammarhs = -1; \
static int CCTKARGNUM_Xt2 = -1; \
static int CCTKARGNUM_Xt2rhs = -1; \
static int CCTKARGNUM_Xt3 = -1; \
static int CCTKARGNUM_Xt3rhs = -1; \
static int CCTKARGNUM_alp = -1; \
static int CCTKGROUPNUM_lapse = -1; \
static int CCTKARGNUM_alpha = -1; \
static int CCTKGROUPNUM_ML_lapse = -1; \
static int CCTKARGNUM_alpharhs = -1; \
static int CCTKGROUPNUM_ML_lapserhs = -1; \
static int CCTKARGNUM_beta1 = -1; \
static int CCTKGROUPNUM_ML_shift = -1; \
static int CCTKARGNUM_beta1rhs = -1; \
static int CCTKGROUPNUM_ML_shiftrhs = -1; \
static int CCTKARGNUM_beta2 = -1; \
static int CCTKARGNUM_beta2rhs = -1; \
static int CCTKARGNUM_beta3 = -1; \
static int CCTKARGNUM_beta3rhs = -1; \
static int CCTKARGNUM_betax = -1; \
static int CCTKGROUPNUM_shift = -1; \
static int CCTKARGNUM_betay = -1; \
static int CCTKARGNUM_betaz = -1; \
static int CCTKARGNUM_cA = -1; \
static int CCTKGROUPNUM_ML_cons_traceA = -1; \
static int CCTKARGNUM_cS = -1; \
static int CCTKGROUPNUM_ML_cons_detg = -1; \
static int CCTKARGNUM_cXt1 = -1; \
static int CCTKGROUPNUM_ML_cons_Gamma = -1; \
static int CCTKARGNUM_cXt2 = -1; \
static int CCTKARGNUM_cXt3 = -1; \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_dtalp = -1; \
static int CCTKGROUPNUM_dtlapse = -1; \
static int CCTKARGNUM_dtbetax = -1; \
static int CCTKGROUPNUM_dtshift = -1; \
static int CCTKARGNUM_dtbetay = -1; \
static int CCTKARGNUM_dtbetaz = -1; \
static int CCTKARGNUM_dtlapse_state = -1; \
static int CCTKGROUPNUM_dtlapse_state = -1; \
static int CCTKARGNUM_dtshift_state = -1; \
static int CCTKGROUPNUM_dtshift_state = -1; \
static int CCTKARGNUM_gt11 = -1; \
static int CCTKGROUPNUM_ML_metric = -1; \
static int CCTKARGNUM_gt11rhs = -1; \
static int CCTKGROUPNUM_ML_metricrhs = -1; \
static int CCTKARGNUM_gt12 = -1; \
static int CCTKARGNUM_gt12rhs = -1; \
static int CCTKARGNUM_gt13 = -1; \
static int CCTKARGNUM_gt13rhs = -1; \
static int CCTKARGNUM_gt22 = -1; \
static int CCTKARGNUM_gt22rhs = -1; \
static int CCTKARGNUM_gt23 = -1; \
static int CCTKARGNUM_gt23rhs = -1; \
static int CCTKARGNUM_gt33 = -1; \
static int CCTKARGNUM_gt33rhs = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKGROUPNUM_metric = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_curv = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_phi = -1; \
static int CCTKGROUPNUM_ML_log_confac = -1; \
static int CCTKARGNUM_phirhs = -1; \
static int CCTKGROUPNUM_ML_log_confacrhs = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_shift_state = -1; \
static int CCTKGROUPNUM_shift_state = -1; \
static int CCTKARGNUM_trK = -1; \
static int CCTKGROUPNUM_ML_trace_curv = -1; \
static int CCTKARGNUM_trKrhs = -1; \
static int CCTKGROUPNUM_ML_trace_curvrhs = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_ML_BSSN_PUBLIC_C2F \
if(CCTKARGNUM_A == -1) CCTKARGNUM_A = CCTK_VarIndex("ML_BSSN::A"); \
if(CCTKGROUPNUM_ML_dtlapse == -1) CCTKGROUPNUM_ML_dtlapse = CCTK_GroupIndex("ML_BSSN::ML_dtlapse"); \
if(CCTKARGNUM_Arhs == -1) CCTKARGNUM_Arhs = CCTK_VarIndex("ML_BSSN::Arhs"); \
if(CCTKGROUPNUM_ML_dtlapserhs == -1) CCTKGROUPNUM_ML_dtlapserhs = CCTK_GroupIndex("ML_BSSN::ML_dtlapserhs"); \
if(CCTKARGNUM_At11 == -1) CCTKARGNUM_At11 = CCTK_VarIndex("ML_BSSN::At11"); \
if(CCTKGROUPNUM_ML_curv == -1) CCTKGROUPNUM_ML_curv = CCTK_GroupIndex("ML_BSSN::ML_curv"); \
if(CCTKARGNUM_At11rhs == -1) CCTKARGNUM_At11rhs = CCTK_VarIndex("ML_BSSN::At11rhs"); \
if(CCTKGROUPNUM_ML_curvrhs == -1) CCTKGROUPNUM_ML_curvrhs = CCTK_GroupIndex("ML_BSSN::ML_curvrhs"); \
if(CCTKARGNUM_At12 == -1) CCTKARGNUM_At12 = CCTK_VarIndex("ML_BSSN::At12"); \
if(CCTKARGNUM_At12rhs == -1) CCTKARGNUM_At12rhs = CCTK_VarIndex("ML_BSSN::At12rhs"); \
if(CCTKARGNUM_At13 == -1) CCTKARGNUM_At13 = CCTK_VarIndex("ML_BSSN::At13"); \
if(CCTKARGNUM_At13rhs == -1) CCTKARGNUM_At13rhs = CCTK_VarIndex("ML_BSSN::At13rhs"); \
if(CCTKARGNUM_At22 == -1) CCTKARGNUM_At22 = CCTK_VarIndex("ML_BSSN::At22"); \
if(CCTKARGNUM_At22rhs == -1) CCTKARGNUM_At22rhs = CCTK_VarIndex("ML_BSSN::At22rhs"); \
if(CCTKARGNUM_At23 == -1) CCTKARGNUM_At23 = CCTK_VarIndex("ML_BSSN::At23"); \
if(CCTKARGNUM_At23rhs == -1) CCTKARGNUM_At23rhs = CCTK_VarIndex("ML_BSSN::At23rhs"); \
if(CCTKARGNUM_At33 == -1) CCTKARGNUM_At33 = CCTK_VarIndex("ML_BSSN::At33"); \
if(CCTKARGNUM_At33rhs == -1) CCTKARGNUM_At33rhs = CCTK_VarIndex("ML_BSSN::At33rhs"); \
if(CCTKARGNUM_B1 == -1) CCTKARGNUM_B1 = CCTK_VarIndex("ML_BSSN::B1"); \
if(CCTKGROUPNUM_ML_dtshift == -1) CCTKGROUPNUM_ML_dtshift = CCTK_GroupIndex("ML_BSSN::ML_dtshift"); \
if(CCTKARGNUM_B1rhs == -1) CCTKARGNUM_B1rhs = CCTK_VarIndex("ML_BSSN::B1rhs"); \
if(CCTKGROUPNUM_ML_dtshiftrhs == -1) CCTKGROUPNUM_ML_dtshiftrhs = CCTK_GroupIndex("ML_BSSN::ML_dtshiftrhs"); \
if(CCTKARGNUM_B2 == -1) CCTKARGNUM_B2 = CCTK_VarIndex("ML_BSSN::B2"); \
if(CCTKARGNUM_B2rhs == -1) CCTKARGNUM_B2rhs = CCTK_VarIndex("ML_BSSN::B2rhs"); \
if(CCTKARGNUM_B3 == -1) CCTKARGNUM_B3 = CCTK_VarIndex("ML_BSSN::B3"); \
if(CCTKARGNUM_B3rhs == -1) CCTKARGNUM_B3rhs = CCTK_VarIndex("ML_BSSN::B3rhs"); \
if(CCTKARGNUM_H == -1) CCTKARGNUM_H = CCTK_VarIndex("ML_BSSN::H"); \
if(CCTKGROUPNUM_ML_Ham == -1) CCTKGROUPNUM_ML_Ham = CCTK_GroupIndex("ML_BSSN::ML_Ham"); \
if(CCTKARGNUM_M1 == -1) CCTKARGNUM_M1 = CCTK_VarIndex("ML_BSSN::M1"); \
if(CCTKGROUPNUM_ML_mom == -1) CCTKGROUPNUM_ML_mom = CCTK_GroupIndex("ML_BSSN::ML_mom"); \
if(CCTKARGNUM_M2 == -1) CCTKARGNUM_M2 = CCTK_VarIndex("ML_BSSN::M2"); \
if(CCTKARGNUM_M3 == -1) CCTKARGNUM_M3 = CCTK_VarIndex("ML_BSSN::M3"); \
if(CCTKARGNUM_Xt1 == -1) CCTKARGNUM_Xt1 = CCTK_VarIndex("ML_BSSN::Xt1"); \
if(CCTKGROUPNUM_ML_Gamma == -1) CCTKGROUPNUM_ML_Gamma = CCTK_GroupIndex("ML_BSSN::ML_Gamma"); \
if(CCTKARGNUM_Xt1rhs == -1) CCTKARGNUM_Xt1rhs = CCTK_VarIndex("ML_BSSN::Xt1rhs"); \
if(CCTKGROUPNUM_ML_Gammarhs == -1) CCTKGROUPNUM_ML_Gammarhs = CCTK_GroupIndex("ML_BSSN::ML_Gammarhs"); \
if(CCTKARGNUM_Xt2 == -1) CCTKARGNUM_Xt2 = CCTK_VarIndex("ML_BSSN::Xt2"); \
if(CCTKARGNUM_Xt2rhs == -1) CCTKARGNUM_Xt2rhs = CCTK_VarIndex("ML_BSSN::Xt2rhs"); \
if(CCTKARGNUM_Xt3 == -1) CCTKARGNUM_Xt3 = CCTK_VarIndex("ML_BSSN::Xt3"); \
if(CCTKARGNUM_Xt3rhs == -1) CCTKARGNUM_Xt3rhs = CCTK_VarIndex("ML_BSSN::Xt3rhs"); \
if(CCTKARGNUM_alp == -1) CCTKARGNUM_alp = CCTK_VarIndex("ADMBASE::alp"); \
if(CCTKGROUPNUM_lapse == -1) CCTKGROUPNUM_lapse = CCTK_GroupIndex("ADMBASE::lapse"); \
if(CCTKARGNUM_alpha == -1) CCTKARGNUM_alpha = CCTK_VarIndex("ML_BSSN::alpha"); \
if(CCTKGROUPNUM_ML_lapse == -1) CCTKGROUPNUM_ML_lapse = CCTK_GroupIndex("ML_BSSN::ML_lapse"); \
if(CCTKARGNUM_alpharhs == -1) CCTKARGNUM_alpharhs = CCTK_VarIndex("ML_BSSN::alpharhs"); \
if(CCTKGROUPNUM_ML_lapserhs == -1) CCTKGROUPNUM_ML_lapserhs = CCTK_GroupIndex("ML_BSSN::ML_lapserhs"); \
if(CCTKARGNUM_beta1 == -1) CCTKARGNUM_beta1 = CCTK_VarIndex("ML_BSSN::beta1"); \
if(CCTKGROUPNUM_ML_shift == -1) CCTKGROUPNUM_ML_shift = CCTK_GroupIndex("ML_BSSN::ML_shift"); \
if(CCTKARGNUM_beta1rhs == -1) CCTKARGNUM_beta1rhs = CCTK_VarIndex("ML_BSSN::beta1rhs"); \
if(CCTKGROUPNUM_ML_shiftrhs == -1) CCTKGROUPNUM_ML_shiftrhs = CCTK_GroupIndex("ML_BSSN::ML_shiftrhs"); \
if(CCTKARGNUM_beta2 == -1) CCTKARGNUM_beta2 = CCTK_VarIndex("ML_BSSN::beta2"); \
if(CCTKARGNUM_beta2rhs == -1) CCTKARGNUM_beta2rhs = CCTK_VarIndex("ML_BSSN::beta2rhs"); \
if(CCTKARGNUM_beta3 == -1) CCTKARGNUM_beta3 = CCTK_VarIndex("ML_BSSN::beta3"); \
if(CCTKARGNUM_beta3rhs == -1) CCTKARGNUM_beta3rhs = CCTK_VarIndex("ML_BSSN::beta3rhs"); \
if(CCTKARGNUM_betax == -1) CCTKARGNUM_betax = CCTK_VarIndex("ADMBASE::betax"); \
if(CCTKGROUPNUM_shift == -1) CCTKGROUPNUM_shift = CCTK_GroupIndex("ADMBASE::shift"); \
if(CCTKARGNUM_betay == -1) CCTKARGNUM_betay = CCTK_VarIndex("ADMBASE::betay"); \
if(CCTKARGNUM_betaz == -1) CCTKARGNUM_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
if(CCTKARGNUM_cA == -1) CCTKARGNUM_cA = CCTK_VarIndex("ML_BSSN::cA"); \
if(CCTKGROUPNUM_ML_cons_traceA == -1) CCTKGROUPNUM_ML_cons_traceA = CCTK_GroupIndex("ML_BSSN::ML_cons_traceA"); \
if(CCTKARGNUM_cS == -1) CCTKARGNUM_cS = CCTK_VarIndex("ML_BSSN::cS"); \
if(CCTKGROUPNUM_ML_cons_detg == -1) CCTKGROUPNUM_ML_cons_detg = CCTK_GroupIndex("ML_BSSN::ML_cons_detg"); \
if(CCTKARGNUM_cXt1 == -1) CCTKARGNUM_cXt1 = CCTK_VarIndex("ML_BSSN::cXt1"); \
if(CCTKGROUPNUM_ML_cons_Gamma == -1) CCTKGROUPNUM_ML_cons_Gamma = CCTK_GroupIndex("ML_BSSN::ML_cons_Gamma"); \
if(CCTKARGNUM_cXt2 == -1) CCTKARGNUM_cXt2 = CCTK_VarIndex("ML_BSSN::cXt2"); \
if(CCTKARGNUM_cXt3 == -1) CCTKARGNUM_cXt3 = CCTK_VarIndex("ML_BSSN::cXt3"); \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_dtalp == -1) CCTKARGNUM_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
if(CCTKGROUPNUM_dtlapse == -1) CCTKGROUPNUM_dtlapse = CCTK_GroupIndex("ADMBASE::dtlapse"); \
if(CCTKARGNUM_dtbetax == -1) CCTKARGNUM_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
if(CCTKGROUPNUM_dtshift == -1) CCTKGROUPNUM_dtshift = CCTK_GroupIndex("ADMBASE::dtshift"); \
if(CCTKARGNUM_dtbetay == -1) CCTKARGNUM_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
if(CCTKARGNUM_dtbetaz == -1) CCTKARGNUM_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
if(CCTKARGNUM_dtlapse_state == -1) CCTKARGNUM_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
if(CCTKGROUPNUM_dtlapse_state == -1) CCTKGROUPNUM_dtlapse_state = CCTK_GroupIndex("ADMBASE::dtlapse_state"); \
if(CCTKARGNUM_dtshift_state == -1) CCTKARGNUM_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
if(CCTKGROUPNUM_dtshift_state == -1) CCTKGROUPNUM_dtshift_state = CCTK_GroupIndex("ADMBASE::dtshift_state"); \
if(CCTKARGNUM_gt11 == -1) CCTKARGNUM_gt11 = CCTK_VarIndex("ML_BSSN::gt11"); \
if(CCTKGROUPNUM_ML_metric == -1) CCTKGROUPNUM_ML_metric = CCTK_GroupIndex("ML_BSSN::ML_metric"); \
if(CCTKARGNUM_gt11rhs == -1) CCTKARGNUM_gt11rhs = CCTK_VarIndex("ML_BSSN::gt11rhs"); \
if(CCTKGROUPNUM_ML_metricrhs == -1) CCTKGROUPNUM_ML_metricrhs = CCTK_GroupIndex("ML_BSSN::ML_metricrhs"); \
if(CCTKARGNUM_gt12 == -1) CCTKARGNUM_gt12 = CCTK_VarIndex("ML_BSSN::gt12"); \
if(CCTKARGNUM_gt12rhs == -1) CCTKARGNUM_gt12rhs = CCTK_VarIndex("ML_BSSN::gt12rhs"); \
if(CCTKARGNUM_gt13 == -1) CCTKARGNUM_gt13 = CCTK_VarIndex("ML_BSSN::gt13"); \
if(CCTKARGNUM_gt13rhs == -1) CCTKARGNUM_gt13rhs = CCTK_VarIndex("ML_BSSN::gt13rhs"); \
if(CCTKARGNUM_gt22 == -1) CCTKARGNUM_gt22 = CCTK_VarIndex("ML_BSSN::gt22"); \
if(CCTKARGNUM_gt22rhs == -1) CCTKARGNUM_gt22rhs = CCTK_VarIndex("ML_BSSN::gt22rhs"); \
if(CCTKARGNUM_gt23 == -1) CCTKARGNUM_gt23 = CCTK_VarIndex("ML_BSSN::gt23"); \
if(CCTKARGNUM_gt23rhs == -1) CCTKARGNUM_gt23rhs = CCTK_VarIndex("ML_BSSN::gt23rhs"); \
if(CCTKARGNUM_gt33 == -1) CCTKARGNUM_gt33 = CCTK_VarIndex("ML_BSSN::gt33"); \
if(CCTKARGNUM_gt33rhs == -1) CCTKARGNUM_gt33rhs = CCTK_VarIndex("ML_BSSN::gt33rhs"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
if(CCTKGROUPNUM_metric == -1) CCTKGROUPNUM_metric = CCTK_GroupIndex("ADMBASE::metric"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
if(CCTKGROUPNUM_curv == -1) CCTKGROUPNUM_curv = CCTK_GroupIndex("ADMBASE::curv"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
if(CCTKARGNUM_phi == -1) CCTKARGNUM_phi = CCTK_VarIndex("ML_BSSN::phi"); \
if(CCTKGROUPNUM_ML_log_confac == -1) CCTKGROUPNUM_ML_log_confac = CCTK_GroupIndex("ML_BSSN::ML_log_confac"); \
if(CCTKARGNUM_phirhs == -1) CCTKARGNUM_phirhs = CCTK_VarIndex("ML_BSSN::phirhs"); \
if(CCTKGROUPNUM_ML_log_confacrhs == -1) CCTKGROUPNUM_ML_log_confacrhs = CCTK_GroupIndex("ML_BSSN::ML_log_confacrhs"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_shift_state == -1) CCTKARGNUM_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
if(CCTKGROUPNUM_shift_state == -1) CCTKGROUPNUM_shift_state = CCTK_GroupIndex("ADMBASE::shift_state"); \
if(CCTKARGNUM_trK == -1) CCTKARGNUM_trK = CCTK_VarIndex("ML_BSSN::trK"); \
if(CCTKGROUPNUM_ML_trace_curv == -1) CCTKGROUPNUM_ML_trace_curv = CCTK_GroupIndex("ML_BSSN::ML_trace_curv"); \
if(CCTKARGNUM_trKrhs == -1) CCTKARGNUM_trKrhs = CCTK_VarIndex("ML_BSSN::trKrhs"); \
if(CCTKGROUPNUM_ML_trace_curvrhs == -1) CCTKGROUPNUM_ML_trace_curvrhs = CCTK_GroupIndex("ML_BSSN::ML_trace_curvrhs"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define ML_BSSN_PUBLIC_C2F_PROTO \


#define PASS_ML_BSSN_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(A, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(A, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(A, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Arhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Arhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Arhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At11, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At11, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At11, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At11rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At11rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At11rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At12, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At12, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At12, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At12rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At12rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At12rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At13, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At13, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At13, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At13rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At13rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At13rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At22, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At22, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At22, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At22rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At22rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At22rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At23, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At23, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At23, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At23rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At23rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At23rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At33, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At33, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At33, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(At33rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(At33rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(At33rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B1rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B1rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B1rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B2rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B2rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B2rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(B3rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(B3rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(B3rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(H, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(M3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt1rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt2rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Xt3rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(alpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(alpharhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alpharhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alpharhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta1rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta2rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(beta3rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(cA, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cXt1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cXt2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cXt3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(dtlapse_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(dtshift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt11rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt12rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt13rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt22rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt23rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33rhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gt33rhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phirhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phirhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phirhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_INT *)(PASS_REFERENCE(shift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(trKrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trKrhs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(trKrhs, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define ML_BSSN_FARGUMENTS _CCTK_FARGUMENTS, ML_BSSN_PUBLIC_FARGUMENTS

#define DECLARE_ML_BSSN_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_ML_BSSN_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ML_BSSN_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_ML_BSSN_PUBLIC_CARGUMENTS

#define ML_BSSN_C2F_PROTO _CCTK_C2F_PROTO, ML_BSSN_PUBLIC_C2F_PROTO

#define PASS_ML_BSSN_C2F(GH) _PASS_CCTK_C2F(GH), PASS_ML_BSSN_PUBLIC_C2F(GH)

#define DECLARE_ML_BSSN_C2F _DECLARE_CCTK_C2F DECLARE_ML_BSSN_PUBLIC_C2F

#define INITIALISE_ML_BSSN_C2F _INITIALISE_CCTK_C2F INITIALISE_ML_BSSN_PUBLIC_C2F

#define ML_BSSN_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
