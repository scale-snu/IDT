/*@@
   @header  ADMCoupling_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn ADMCoupling
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_ADMCOUPLING_PRIVATE_FARGUMENTS \


#define ADMCOUPLING_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMCOUPLING_PRIVATE_CARGUMENTS \


#define DECLARE_ADMCOUPLING_PRIVATE_C2F \


#define INITIALISE_ADMCOUPLING_PRIVATE_C2F \


#define ADMCOUPLING_PRIVATE_C2F_PROTO \


#define PASS_ADMCOUPLING_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ADMCOUPLING_PROTECTED_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,eT2tt,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2tx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2ty,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2tz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2xx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2xy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2xz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2yy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2yz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eT2zz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,stress_energy_2_state,)&&\


#define ADMCOUPLING_PROTECTED_FARGUMENTS \
eT2tt,eT2tx,eT2ty,eT2tz,eT2xx,eT2xy,eT2xz,eT2yy,eT2yz,eT2zz,stress_energy_2_state

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMCOUPLING_PROTECTED_CARGUMENTS \
static int cctki_vi_eT2tt = -100; \
if (cctki_vi_eT2tt == -100) cctki_vi_eT2tt = CCTK_VarIndex("TMUNUBASE::eT2tt"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2tt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2tt)); \
static int cctki_vi_eT2tx = -100; \
if (cctki_vi_eT2tx == -100) cctki_vi_eT2tx = CCTK_VarIndex("TMUNUBASE::eT2tx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2tx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2tx)); \
static int cctki_vi_eT2ty = -100; \
if (cctki_vi_eT2ty == -100) cctki_vi_eT2ty = CCTK_VarIndex("TMUNUBASE::eT2ty"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2ty, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2ty)); \
static int cctki_vi_eT2tz = -100; \
if (cctki_vi_eT2tz == -100) cctki_vi_eT2tz = CCTK_VarIndex("TMUNUBASE::eT2tz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2tz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2tz)); \
static int cctki_vi_eT2xx = -100; \
if (cctki_vi_eT2xx == -100) cctki_vi_eT2xx = CCTK_VarIndex("TMUNUBASE::eT2xx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2xx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2xx)); \
static int cctki_vi_eT2xy = -100; \
if (cctki_vi_eT2xy == -100) cctki_vi_eT2xy = CCTK_VarIndex("TMUNUBASE::eT2xy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2xy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2xy)); \
static int cctki_vi_eT2xz = -100; \
if (cctki_vi_eT2xz == -100) cctki_vi_eT2xz = CCTK_VarIndex("TMUNUBASE::eT2xz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2xz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2xz)); \
static int cctki_vi_eT2yy = -100; \
if (cctki_vi_eT2yy == -100) cctki_vi_eT2yy = CCTK_VarIndex("TMUNUBASE::eT2yy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2yy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2yy)); \
static int cctki_vi_eT2yz = -100; \
if (cctki_vi_eT2yz == -100) cctki_vi_eT2yz = CCTK_VarIndex("TMUNUBASE::eT2yz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2yz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2yz)); \
static int cctki_vi_eT2zz = -100; \
if (cctki_vi_eT2zz == -100) cctki_vi_eT2zz = CCTK_VarIndex("TMUNUBASE::eT2zz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eT2zz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eT2zz)); \
static int cctki_vi_stress_energy_2_state = -100; \
if (cctki_vi_stress_energy_2_state == -100) cctki_vi_stress_energy_2_state = CCTK_VarIndex("TMUNUBASE::stress_energy_2_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, stress_energy_2_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stress_energy_2_state));

#define DECLARE_ADMCOUPLING_PROTECTED_C2F \
static int CCTKARGNUM_eT2tt = -1; \
static int CCTKGROUPNUM_stress_energy_2_scalar = -1; \
static int CCTKARGNUM_eT2tx = -1; \
static int CCTKGROUPNUM_stress_energy_2_vector = -1; \
static int CCTKARGNUM_eT2ty = -1; \
static int CCTKARGNUM_eT2tz = -1; \
static int CCTKARGNUM_eT2xx = -1; \
static int CCTKGROUPNUM_stress_energy_2_tensor = -1; \
static int CCTKARGNUM_eT2xy = -1; \
static int CCTKARGNUM_eT2xz = -1; \
static int CCTKARGNUM_eT2yy = -1; \
static int CCTKARGNUM_eT2yz = -1; \
static int CCTKARGNUM_eT2zz = -1; \
static int CCTKARGNUM_stress_energy_2_state = -1; \
static int CCTKGROUPNUM_stress_energy_2_state = -1;

#define INITIALISE_ADMCOUPLING_PROTECTED_C2F \
if(CCTKARGNUM_eT2tt == -1) CCTKARGNUM_eT2tt = CCTK_VarIndex("TMUNUBASE::eT2tt"); \
if(CCTKGROUPNUM_stress_energy_2_scalar == -1) CCTKGROUPNUM_stress_energy_2_scalar = CCTK_GroupIndex("TMUNUBASE::stress_energy_2_scalar"); \
if(CCTKARGNUM_eT2tx == -1) CCTKARGNUM_eT2tx = CCTK_VarIndex("TMUNUBASE::eT2tx"); \
if(CCTKGROUPNUM_stress_energy_2_vector == -1) CCTKGROUPNUM_stress_energy_2_vector = CCTK_GroupIndex("TMUNUBASE::stress_energy_2_vector"); \
if(CCTKARGNUM_eT2ty == -1) CCTKARGNUM_eT2ty = CCTK_VarIndex("TMUNUBASE::eT2ty"); \
if(CCTKARGNUM_eT2tz == -1) CCTKARGNUM_eT2tz = CCTK_VarIndex("TMUNUBASE::eT2tz"); \
if(CCTKARGNUM_eT2xx == -1) CCTKARGNUM_eT2xx = CCTK_VarIndex("TMUNUBASE::eT2xx"); \
if(CCTKGROUPNUM_stress_energy_2_tensor == -1) CCTKGROUPNUM_stress_energy_2_tensor = CCTK_GroupIndex("TMUNUBASE::stress_energy_2_tensor"); \
if(CCTKARGNUM_eT2xy == -1) CCTKARGNUM_eT2xy = CCTK_VarIndex("TMUNUBASE::eT2xy"); \
if(CCTKARGNUM_eT2xz == -1) CCTKARGNUM_eT2xz = CCTK_VarIndex("TMUNUBASE::eT2xz"); \
if(CCTKARGNUM_eT2yy == -1) CCTKARGNUM_eT2yy = CCTK_VarIndex("TMUNUBASE::eT2yy"); \
if(CCTKARGNUM_eT2yz == -1) CCTKARGNUM_eT2yz = CCTK_VarIndex("TMUNUBASE::eT2yz"); \
if(CCTKARGNUM_eT2zz == -1) CCTKARGNUM_eT2zz = CCTK_VarIndex("TMUNUBASE::eT2zz"); \
if(CCTKARGNUM_stress_energy_2_state == -1) CCTKARGNUM_stress_energy_2_state = CCTK_VarIndex("TMUNUBASE::stress_energy_2_state"); \
if(CCTKGROUPNUM_stress_energy_2_state == -1) CCTKGROUPNUM_stress_energy_2_state = CCTK_GroupIndex("TMUNUBASE::stress_energy_2_state");

#define ADMCOUPLING_PROTECTED_C2F_PROTO \
CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *

#define PASS_ADMCOUPLING_PROTECTED_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(eT2tt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2tx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2ty, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2tz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2xx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2xy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2xz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2yy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2yz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eT2zz, 0)),\
(CCTK_INT *)(PASS_REFERENCE(stress_energy_2_state, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ADMCOUPLING_PUBLIC_FARGUMENTS \


#define ADMCOUPLING_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMCOUPLING_PUBLIC_CARGUMENTS \


#define DECLARE_ADMCOUPLING_PUBLIC_C2F \


#define INITIALISE_ADMCOUPLING_PUBLIC_C2F \


#define ADMCOUPLING_PUBLIC_C2F_PROTO \


#define PASS_ADMCOUPLING_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define ADMCOUPLING_FARGUMENTS _CCTK_FARGUMENTS, ADMCOUPLING_PROTECTED_FARGUMENTS

#define DECLARE_ADMCOUPLING_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_ADMCOUPLING_PROTECTED_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMCOUPLING_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_ADMCOUPLING_PROTECTED_CARGUMENTS

#define ADMCOUPLING_C2F_PROTO _CCTK_C2F_PROTO, ADMCOUPLING_PROTECTED_C2F_PROTO

#define PASS_ADMCOUPLING_C2F(GH) _PASS_CCTK_C2F(GH), PASS_ADMCOUPLING_PROTECTED_C2F(GH)

#define DECLARE_ADMCOUPLING_C2F _DECLARE_CCTK_C2F DECLARE_ADMCOUPLING_PROTECTED_C2F

#define INITIALISE_ADMCOUPLING_C2F _INITIALISE_CCTK_C2F INITIALISE_ADMCOUPLING_PROTECTED_C2F

#define ADMCOUPLING_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
